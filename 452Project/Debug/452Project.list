
452Project.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00004ce8  08000110  08000110  00001110  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000002b4  08004df8  08004df8  00005df8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080050ac  080050ac  00007078  2**0
                  CONTENTS
  4 .ARM          00000008  080050ac  080050ac  000060ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  080050b4  080050b4  00007078  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080050b4  080050b4  000060b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080050b8  080050b8  000060b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000078  20000000  080050bc  00007000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000011ac  20000078  08005134  00007078  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20001224  08005134  00007224  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00007078  2**0
                  CONTENTS, READONLY
 12 .debug_info   00010d12  00000000  00000000  000070a1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00002b85  00000000  00000000  00017db3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000010f0  00000000  00000000  0001a938  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000d2d  00000000  00000000  0001ba28  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00019897  00000000  00000000  0001c755  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00013475  00000000  00000000  00035fec  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00092fc7  00000000  00000000  00049461  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000dc428  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00004b70  00000000  00000000  000dc46c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000059  00000000  00000000  000e0fdc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000110 <__do_global_dtors_aux>:
 8000110:	b510      	push	{r4, lr}
 8000112:	4c05      	ldr	r4, [pc, #20]	@ (8000128 <__do_global_dtors_aux+0x18>)
 8000114:	7823      	ldrb	r3, [r4, #0]
 8000116:	b933      	cbnz	r3, 8000126 <__do_global_dtors_aux+0x16>
 8000118:	4b04      	ldr	r3, [pc, #16]	@ (800012c <__do_global_dtors_aux+0x1c>)
 800011a:	b113      	cbz	r3, 8000122 <__do_global_dtors_aux+0x12>
 800011c:	4804      	ldr	r0, [pc, #16]	@ (8000130 <__do_global_dtors_aux+0x20>)
 800011e:	f3af 8000 	nop.w
 8000122:	2301      	movs	r3, #1
 8000124:	7023      	strb	r3, [r4, #0]
 8000126:	bd10      	pop	{r4, pc}
 8000128:	20000078 	.word	0x20000078
 800012c:	00000000 	.word	0x00000000
 8000130:	08004de0 	.word	0x08004de0

08000134 <frame_dummy>:
 8000134:	b508      	push	{r3, lr}
 8000136:	4b03      	ldr	r3, [pc, #12]	@ (8000144 <frame_dummy+0x10>)
 8000138:	b11b      	cbz	r3, 8000142 <frame_dummy+0xe>
 800013a:	4903      	ldr	r1, [pc, #12]	@ (8000148 <frame_dummy+0x14>)
 800013c:	4803      	ldr	r0, [pc, #12]	@ (800014c <frame_dummy+0x18>)
 800013e:	f3af 8000 	nop.w
 8000142:	bd08      	pop	{r3, pc}
 8000144:	00000000 	.word	0x00000000
 8000148:	2000007c 	.word	0x2000007c
 800014c:	08004de0 	.word	0x08004de0

08000150 <strcmp>:
 8000150:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000154:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000158:	2a01      	cmp	r2, #1
 800015a:	bf28      	it	cs
 800015c:	429a      	cmpcs	r2, r3
 800015e:	d0f7      	beq.n	8000150 <strcmp>
 8000160:	1ad0      	subs	r0, r2, r3
 8000162:	4770      	bx	lr

08000164 <UpdateStatusWindow>:
extern char elevatorState[];
extern volatile uint8_t currentFloor;

// Updates the status window displayed on the top part of the terminal
void UpdateStatusWindow(void)
{
 8000164:	b580      	push	{r7, lr}
 8000166:	b0a0      	sub	sp, #128	@ 0x80
 8000168:	af02      	add	r7, sp, #8
    char buffer[100];
    const char clearCommand[] = "\033[H\033[J"; // Clear screen
 800016a:	4a1f      	ldr	r2, [pc, #124]	@ (80001e8 <UpdateStatusWindow+0x84>)
 800016c:	f107 0308 	add.w	r3, r7, #8
 8000170:	e892 0003 	ldmia.w	r2, {r0, r1}
 8000174:	6018      	str	r0, [r3, #0]
 8000176:	3304      	adds	r3, #4
 8000178:	8019      	strh	r1, [r3, #0]
 800017a:	3302      	adds	r3, #2
 800017c:	0c0a      	lsrs	r2, r1, #16
 800017e:	701a      	strb	r2, [r3, #0]
    HAL_UART_Transmit(&huart2, (uint8_t *)clearCommand, sizeof(clearCommand) - 1, HAL_MAX_DELAY);
 8000180:	f107 0108 	add.w	r1, r7, #8
 8000184:	f04f 33ff 	mov.w	r3, #4294967295
 8000188:	2206      	movs	r2, #6
 800018a:	4818      	ldr	r0, [pc, #96]	@ (80001ec <UpdateStatusWindow+0x88>)
 800018c:	f002 f8f2 	bl	8002374 <HAL_UART_Transmit>

    // Format and transmit the current status
    int len = snprintf(buffer, sizeof(buffer),
 8000190:	4b17      	ldr	r3, [pc, #92]	@ (80001f0 <UpdateStatusWindow+0x8c>)
 8000192:	681b      	ldr	r3, [r3, #0]
 8000194:	4a17      	ldr	r2, [pc, #92]	@ (80001f4 <UpdateStatusWindow+0x90>)
 8000196:	7812      	ldrb	r2, [r2, #0]
 8000198:	b2d2      	uxtb	r2, r2
 800019a:	f107 0010 	add.w	r0, r7, #16
 800019e:	9201      	str	r2, [sp, #4]
 80001a0:	4a15      	ldr	r2, [pc, #84]	@ (80001f8 <UpdateStatusWindow+0x94>)
 80001a2:	9200      	str	r2, [sp, #0]
 80001a4:	4a15      	ldr	r2, [pc, #84]	@ (80001fc <UpdateStatusWindow+0x98>)
 80001a6:	2164      	movs	r1, #100	@ 0x64
 80001a8:	f004 f956 	bl	8004458 <sniprintf>
 80001ac:	6778      	str	r0, [r7, #116]	@ 0x74
                       "Time: %lus\r\nState: %s\r\nFloor: %u\r\n\n********************************\r\n\n",
                       elapsedTime, elevatorState, currentFloor);
    HAL_UART_Transmit(&huart2, (uint8_t *)buffer, len, HAL_MAX_DELAY);
 80001ae:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 80001b0:	b29a      	uxth	r2, r3
 80001b2:	f107 0110 	add.w	r1, r7, #16
 80001b6:	f04f 33ff 	mov.w	r3, #4294967295
 80001ba:	480c      	ldr	r0, [pc, #48]	@ (80001ec <UpdateStatusWindow+0x88>)
 80001bc:	f002 f8da 	bl	8002374 <HAL_UART_Transmit>

    // Update the color of the elevator
    UpdateElevatorVisuals();
 80001c0:	f000 f820 	bl	8000204 <UpdateElevatorVisuals>

    // Move cursor to the input window row (line 14)
    const char inputPrompt[] = "\033[14;1H";
 80001c4:	4a0e      	ldr	r2, [pc, #56]	@ (8000200 <UpdateStatusWindow+0x9c>)
 80001c6:	463b      	mov	r3, r7
 80001c8:	e892 0003 	ldmia.w	r2, {r0, r1}
 80001cc:	e883 0003 	stmia.w	r3, {r0, r1}
    HAL_UART_Transmit(&huart2, (uint8_t *)inputPrompt, sizeof(inputPrompt) - 1, HAL_MAX_DELAY);
 80001d0:	4639      	mov	r1, r7
 80001d2:	f04f 33ff 	mov.w	r3, #4294967295
 80001d6:	2207      	movs	r2, #7
 80001d8:	4804      	ldr	r0, [pc, #16]	@ (80001ec <UpdateStatusWindow+0x88>)
 80001da:	f002 f8cb 	bl	8002374 <HAL_UART_Transmit>
}
 80001de:	bf00      	nop
 80001e0:	3778      	adds	r7, #120	@ 0x78
 80001e2:	46bd      	mov	sp, r7
 80001e4:	bd80      	pop	{r7, pc}
 80001e6:	bf00      	nop
 80001e8:	08004e40 	.word	0x08004e40
 80001ec:	20000330 	.word	0x20000330
 80001f0:	2000037c 	.word	0x2000037c
 80001f4:	20000014 	.word	0x20000014
 80001f8:	20000000 	.word	0x20000000
 80001fc:	08004df8 	.word	0x08004df8
 8000200:	08004e48 	.word	0x08004e48

08000204 <UpdateElevatorVisuals>:

// Updates the visual representation of the elevator (the color) on the middle part of the terminal
void UpdateElevatorVisuals(void) {
 8000204:	b580      	push	{r7, lr}
 8000206:	f5ad 7d4a 	sub.w	sp, sp, #808	@ 0x328
 800020a:	af00      	add	r7, sp, #0
    char buffer[800];
    int len = 0;
 800020c:	2300      	movs	r3, #0
 800020e:	f8c7 3324 	str.w	r3, [r7, #804]	@ 0x324

    // Iterate through the floors, color the currentFloor with green and the rest with default color
    for (int floor = 4; floor >= 1; floor--) {
 8000212:	2304      	movs	r3, #4
 8000214:	f8c7 3320 	str.w	r3, [r7, #800]	@ 0x320
 8000218:	e033      	b.n	8000282 <UpdateElevatorVisuals+0x7e>
        if (floor == currentFloor) {
 800021a:	4b2c      	ldr	r3, [pc, #176]	@ (80002cc <UpdateElevatorVisuals+0xc8>)
 800021c:	781b      	ldrb	r3, [r3, #0]
 800021e:	b2db      	uxtb	r3, r3
 8000220:	461a      	mov	r2, r3
 8000222:	f8d7 3320 	ldr.w	r3, [r7, #800]	@ 0x320
 8000226:	4293      	cmp	r3, r2
 8000228:	d113      	bne.n	8000252 <UpdateElevatorVisuals+0x4e>
            len += snprintf(buffer + len, sizeof(buffer) - len, "\033[32mFloor %d: [---]\033[0m\r\n", floor);
 800022a:	f8d7 3324 	ldr.w	r3, [r7, #804]	@ 0x324
 800022e:	463a      	mov	r2, r7
 8000230:	18d0      	adds	r0, r2, r3
 8000232:	f8d7 3324 	ldr.w	r3, [r7, #804]	@ 0x324
 8000236:	f5c3 7148 	rsb	r1, r3, #800	@ 0x320
 800023a:	f8d7 3320 	ldr.w	r3, [r7, #800]	@ 0x320
 800023e:	4a24      	ldr	r2, [pc, #144]	@ (80002d0 <UpdateElevatorVisuals+0xcc>)
 8000240:	f004 f90a 	bl	8004458 <sniprintf>
 8000244:	4602      	mov	r2, r0
 8000246:	f8d7 3324 	ldr.w	r3, [r7, #804]	@ 0x324
 800024a:	4413      	add	r3, r2
 800024c:	f8c7 3324 	str.w	r3, [r7, #804]	@ 0x324
 8000250:	e012      	b.n	8000278 <UpdateElevatorVisuals+0x74>
        } else {
            len += snprintf(buffer + len, sizeof(buffer) - len, "Floor %d: [---]\r\n", floor);
 8000252:	f8d7 3324 	ldr.w	r3, [r7, #804]	@ 0x324
 8000256:	463a      	mov	r2, r7
 8000258:	18d0      	adds	r0, r2, r3
 800025a:	f8d7 3324 	ldr.w	r3, [r7, #804]	@ 0x324
 800025e:	f5c3 7148 	rsb	r1, r3, #800	@ 0x320
 8000262:	f8d7 3320 	ldr.w	r3, [r7, #800]	@ 0x320
 8000266:	4a1b      	ldr	r2, [pc, #108]	@ (80002d4 <UpdateElevatorVisuals+0xd0>)
 8000268:	f004 f8f6 	bl	8004458 <sniprintf>
 800026c:	4602      	mov	r2, r0
 800026e:	f8d7 3324 	ldr.w	r3, [r7, #804]	@ 0x324
 8000272:	4413      	add	r3, r2
 8000274:	f8c7 3324 	str.w	r3, [r7, #804]	@ 0x324
    for (int floor = 4; floor >= 1; floor--) {
 8000278:	f8d7 3320 	ldr.w	r3, [r7, #800]	@ 0x320
 800027c:	3b01      	subs	r3, #1
 800027e:	f8c7 3320 	str.w	r3, [r7, #800]	@ 0x320
 8000282:	f8d7 3320 	ldr.w	r3, [r7, #800]	@ 0x320
 8000286:	2b00      	cmp	r3, #0
 8000288:	dcc7      	bgt.n	800021a <UpdateElevatorVisuals+0x16>
        }
    }

    len += snprintf(buffer + len, sizeof(buffer) - len, "\n\r********************************\r\n\n");
 800028a:	f8d7 3324 	ldr.w	r3, [r7, #804]	@ 0x324
 800028e:	463a      	mov	r2, r7
 8000290:	18d0      	adds	r0, r2, r3
 8000292:	f8d7 3324 	ldr.w	r3, [r7, #804]	@ 0x324
 8000296:	f5c3 7348 	rsb	r3, r3, #800	@ 0x320
 800029a:	4a0f      	ldr	r2, [pc, #60]	@ (80002d8 <UpdateElevatorVisuals+0xd4>)
 800029c:	4619      	mov	r1, r3
 800029e:	f004 f8db 	bl	8004458 <sniprintf>
 80002a2:	4602      	mov	r2, r0
 80002a4:	f8d7 3324 	ldr.w	r3, [r7, #804]	@ 0x324
 80002a8:	4413      	add	r3, r2
 80002aa:	f8c7 3324 	str.w	r3, [r7, #804]	@ 0x324

    // Transmit buffer
    HAL_UART_Transmit(&huart2, (uint8_t *)buffer, len, HAL_MAX_DELAY);
 80002ae:	f8d7 3324 	ldr.w	r3, [r7, #804]	@ 0x324
 80002b2:	b29a      	uxth	r2, r3
 80002b4:	4639      	mov	r1, r7
 80002b6:	f04f 33ff 	mov.w	r3, #4294967295
 80002ba:	4808      	ldr	r0, [pc, #32]	@ (80002dc <UpdateElevatorVisuals+0xd8>)
 80002bc:	f002 f85a 	bl	8002374 <HAL_UART_Transmit>
}
 80002c0:	bf00      	nop
 80002c2:	f507 774a 	add.w	r7, r7, #808	@ 0x328
 80002c6:	46bd      	mov	sp, r7
 80002c8:	bd80      	pop	{r7, pc}
 80002ca:	bf00      	nop
 80002cc:	20000014 	.word	0x20000014
 80002d0:	08004e50 	.word	0x08004e50
 80002d4:	08004e6c 	.word	0x08004e6c
 80002d8:	08004e80 	.word	0x08004e80
 80002dc:	20000330 	.word	0x20000330

080002e0 <UpdateInputWindow>:

// Updates the input window (the bottom part on the terminal) to show the user input
void UpdateInputWindow(const char *inputBuffer)
{
 80002e0:	b580      	push	{r7, lr}
 80002e2:	b0ce      	sub	sp, #312	@ 0x138
 80002e4:	af00      	add	r7, sp, #0
 80002e6:	f507 739c 	add.w	r3, r7, #312	@ 0x138
 80002ea:	f5a3 739a 	sub.w	r3, r3, #308	@ 0x134
 80002ee:	6018      	str	r0, [r3, #0]
    char buffer[300];
    int len = 0;
 80002f0:	2300      	movs	r3, #0
 80002f2:	f8c7 3134 	str.w	r3, [r7, #308]	@ 0x134

    // Position the cursor at row 14
    len += snprintf(buffer + len, sizeof(buffer) - len, "\033[14;1H");
 80002f6:	f8d7 3134 	ldr.w	r3, [r7, #308]	@ 0x134
 80002fa:	f107 0208 	add.w	r2, r7, #8
 80002fe:	18d0      	adds	r0, r2, r3
 8000300:	f8d7 3134 	ldr.w	r3, [r7, #308]	@ 0x134
 8000304:	f5c3 7396 	rsb	r3, r3, #300	@ 0x12c
 8000308:	4a21      	ldr	r2, [pc, #132]	@ (8000390 <UpdateInputWindow+0xb0>)
 800030a:	4619      	mov	r1, r3
 800030c:	f004 f8a4 	bl	8004458 <sniprintf>
 8000310:	4602      	mov	r2, r0
 8000312:	f8d7 3134 	ldr.w	r3, [r7, #308]	@ 0x134
 8000316:	4413      	add	r3, r2
 8000318:	f8c7 3134 	str.w	r3, [r7, #308]	@ 0x134

    // Display the input prompt
    len += snprintf(buffer + len, sizeof(buffer) - len, "User Input: %s", inputBuffer);
 800031c:	f8d7 3134 	ldr.w	r3, [r7, #308]	@ 0x134
 8000320:	f107 0208 	add.w	r2, r7, #8
 8000324:	18d0      	adds	r0, r2, r3
 8000326:	f8d7 3134 	ldr.w	r3, [r7, #308]	@ 0x134
 800032a:	f5c3 7196 	rsb	r1, r3, #300	@ 0x12c
 800032e:	f507 739c 	add.w	r3, r7, #312	@ 0x138
 8000332:	f5a3 739a 	sub.w	r3, r3, #308	@ 0x134
 8000336:	681b      	ldr	r3, [r3, #0]
 8000338:	4a16      	ldr	r2, [pc, #88]	@ (8000394 <UpdateInputWindow+0xb4>)
 800033a:	f004 f88d 	bl	8004458 <sniprintf>
 800033e:	4602      	mov	r2, r0
 8000340:	f8d7 3134 	ldr.w	r3, [r7, #308]	@ 0x134
 8000344:	4413      	add	r3, r2
 8000346:	f8c7 3134 	str.w	r3, [r7, #308]	@ 0x134

    // Clear the remaining line after the input
    len += snprintf(buffer + len, sizeof(buffer) - len, "\033[K");
 800034a:	f8d7 3134 	ldr.w	r3, [r7, #308]	@ 0x134
 800034e:	f107 0208 	add.w	r2, r7, #8
 8000352:	18d0      	adds	r0, r2, r3
 8000354:	f8d7 3134 	ldr.w	r3, [r7, #308]	@ 0x134
 8000358:	f5c3 7396 	rsb	r3, r3, #300	@ 0x12c
 800035c:	4a0e      	ldr	r2, [pc, #56]	@ (8000398 <UpdateInputWindow+0xb8>)
 800035e:	4619      	mov	r1, r3
 8000360:	f004 f87a 	bl	8004458 <sniprintf>
 8000364:	4602      	mov	r2, r0
 8000366:	f8d7 3134 	ldr.w	r3, [r7, #308]	@ 0x134
 800036a:	4413      	add	r3, r2
 800036c:	f8c7 3134 	str.w	r3, [r7, #308]	@ 0x134

    // Transmit the input buffer to the terminal
    HAL_UART_Transmit(&huart2, (uint8_t *)buffer, len, HAL_MAX_DELAY);
 8000370:	f8d7 3134 	ldr.w	r3, [r7, #308]	@ 0x134
 8000374:	b29a      	uxth	r2, r3
 8000376:	f107 0108 	add.w	r1, r7, #8
 800037a:	f04f 33ff 	mov.w	r3, #4294967295
 800037e:	4807      	ldr	r0, [pc, #28]	@ (800039c <UpdateInputWindow+0xbc>)
 8000380:	f001 fff8 	bl	8002374 <HAL_UART_Transmit>
}
 8000384:	bf00      	nop
 8000386:	f507 779c 	add.w	r7, r7, #312	@ 0x138
 800038a:	46bd      	mov	sp, r7
 800038c:	bd80      	pop	{r7, pc}
 800038e:	bf00      	nop
 8000390:	08004e48 	.word	0x08004e48
 8000394:	08004ea8 	.word	0x08004ea8
 8000398:	08004eb8 	.word	0x08004eb8
 800039c:	20000330 	.word	0x20000330

080003a0 <invalidEntry>:

// Displays an error message when the user enters an invalid command
void invalidEntry(void)
{
 80003a0:	b580      	push	{r7, lr}
 80003a2:	b0cc      	sub	sp, #304	@ 0x130
 80003a4:	af00      	add	r7, sp, #0
    char buffer[300];
    int len = 0;
 80003a6:	2300      	movs	r3, #0
 80003a8:	f8c7 312c 	str.w	r3, [r7, #300]	@ 0x12c

    // Move the cursor to row 15 (since the user input at row 14)
    len += snprintf(buffer + len, sizeof(buffer) - len, "\033[15;0H");
 80003ac:	f8d7 312c 	ldr.w	r3, [r7, #300]	@ 0x12c
 80003b0:	463a      	mov	r2, r7
 80003b2:	18d0      	adds	r0, r2, r3
 80003b4:	f8d7 312c 	ldr.w	r3, [r7, #300]	@ 0x12c
 80003b8:	f5c3 7396 	rsb	r3, r3, #300	@ 0x12c
 80003bc:	4a14      	ldr	r2, [pc, #80]	@ (8000410 <invalidEntry+0x70>)
 80003be:	4619      	mov	r1, r3
 80003c0:	f004 f84a 	bl	8004458 <sniprintf>
 80003c4:	4602      	mov	r2, r0
 80003c6:	f8d7 312c 	ldr.w	r3, [r7, #300]	@ 0x12c
 80003ca:	4413      	add	r3, r2
 80003cc:	f8c7 312c 	str.w	r3, [r7, #300]	@ 0x12c

    // Add the error message
    len += snprintf(buffer + len, sizeof(buffer) - len,
 80003d0:	f8d7 312c 	ldr.w	r3, [r7, #300]	@ 0x12c
 80003d4:	463a      	mov	r2, r7
 80003d6:	18d0      	adds	r0, r2, r3
 80003d8:	f8d7 312c 	ldr.w	r3, [r7, #300]	@ 0x12c
 80003dc:	f5c3 7396 	rsb	r3, r3, #300	@ 0x12c
 80003e0:	4a0c      	ldr	r2, [pc, #48]	@ (8000414 <invalidEntry+0x74>)
 80003e2:	4619      	mov	r1, r3
 80003e4:	f004 f838 	bl	8004458 <sniprintf>
 80003e8:	4602      	mov	r2, r0
 80003ea:	f8d7 312c 	ldr.w	r3, [r7, #300]	@ 0x12c
 80003ee:	4413      	add	r3, r2
 80003f0:	f8c7 312c 	str.w	r3, [r7, #300]	@ 0x12c
                    "Invalid input. Please enter ('o' for Open, 'c' for Close, 'M' for Maintenance, '1', '2', '3', or '4' for Floors, or push the button for Emergency).\r\n");

    // Transmit the error message to the terminal
    HAL_UART_Transmit(&huart2, (uint8_t *)buffer, len, HAL_MAX_DELAY);
 80003f4:	f8d7 312c 	ldr.w	r3, [r7, #300]	@ 0x12c
 80003f8:	b29a      	uxth	r2, r3
 80003fa:	4639      	mov	r1, r7
 80003fc:	f04f 33ff 	mov.w	r3, #4294967295
 8000400:	4805      	ldr	r0, [pc, #20]	@ (8000418 <invalidEntry+0x78>)
 8000402:	f001 ffb7 	bl	8002374 <HAL_UART_Transmit>
}
 8000406:	bf00      	nop
 8000408:	f507 7798 	add.w	r7, r7, #304	@ 0x130
 800040c:	46bd      	mov	sp, r7
 800040e:	bd80      	pop	{r7, pc}
 8000410:	08004ebc 	.word	0x08004ebc
 8000414:	08004ec4 	.word	0x08004ec4
 8000418:	20000330 	.word	0x20000330

0800041c <vApplicationGetIdleTaskMemory>:
/* USER CODE BEGIN GET_IDLE_TASK_MEMORY */
static StaticTask_t xIdleTaskTCBBuffer;
static StackType_t xIdleStack[configMINIMAL_STACK_SIZE];

void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize )
{
 800041c:	b480      	push	{r7}
 800041e:	b085      	sub	sp, #20
 8000420:	af00      	add	r7, sp, #0
 8000422:	60f8      	str	r0, [r7, #12]
 8000424:	60b9      	str	r1, [r7, #8]
 8000426:	607a      	str	r2, [r7, #4]
  *ppxIdleTaskTCBBuffer = &xIdleTaskTCBBuffer;
 8000428:	68fb      	ldr	r3, [r7, #12]
 800042a:	4a06      	ldr	r2, [pc, #24]	@ (8000444 <vApplicationGetIdleTaskMemory+0x28>)
 800042c:	601a      	str	r2, [r3, #0]
  *ppxIdleTaskStackBuffer = &xIdleStack[0];
 800042e:	68bb      	ldr	r3, [r7, #8]
 8000430:	4a05      	ldr	r2, [pc, #20]	@ (8000448 <vApplicationGetIdleTaskMemory+0x2c>)
 8000432:	601a      	str	r2, [r3, #0]
  *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
 8000434:	687b      	ldr	r3, [r7, #4]
 8000436:	2280      	movs	r2, #128	@ 0x80
 8000438:	601a      	str	r2, [r3, #0]
  /* place for user code */
}
 800043a:	bf00      	nop
 800043c:	3714      	adds	r7, #20
 800043e:	46bd      	mov	sp, r7
 8000440:	bc80      	pop	{r7}
 8000442:	4770      	bx	lr
 8000444:	20000094 	.word	0x20000094
 8000448:	200000e8 	.word	0x200000e8

0800044c <main>:
void StatusWindowTask(void const *argument);
void ProcessUserInputTask(void const *argument);


int main(void)
{
 800044c:	b5b0      	push	{r4, r5, r7, lr}
 800044e:	b096      	sub	sp, #88	@ 0x58
 8000450:	af00      	add	r7, sp, #0
    HAL_Init();
 8000452:	f000 fc9b 	bl	8000d8c <HAL_Init>
    SystemClock_Config();
 8000456:	f000 f843 	bl	80004e0 <SystemClock_Config>
    MX_GPIO_Init();
 800045a:	f000 f8fb 	bl	8000654 <MX_GPIO_Init>
    MX_USART2_UART_Init();
 800045e:	f000 f8cf 	bl	8000600 <MX_USART2_UART_Init>
    MX_TIM2_Init();
 8000462:	f000 f87f 	bl	8000564 <MX_TIM2_Init>

    // Create RTOS tasks
    // Emergency handling task
    osThreadDef(defaultTask, StartDefaultTask, osPriorityLow, 0, 128);
 8000466:	4b1a      	ldr	r3, [pc, #104]	@ (80004d0 <main+0x84>)
 8000468:	f107 043c 	add.w	r4, r7, #60	@ 0x3c
 800046c:	461d      	mov	r5, r3
 800046e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8000470:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8000472:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8000476:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 800047a:	f107 033c 	add.w	r3, r7, #60	@ 0x3c
 800047e:	2100      	movs	r1, #0
 8000480:	4618      	mov	r0, r3
 8000482:	f002 fdf1 	bl	8003068 <osThreadCreate>
 8000486:	4603      	mov	r3, r0
 8000488:	4a12      	ldr	r2, [pc, #72]	@ (80004d4 <main+0x88>)
 800048a:	6013      	str	r3, [r2, #0]

    // Timer task
    osThreadDef(statusTask, StatusWindowTask, osPriorityNormal, 0, 256);
 800048c:	4b12      	ldr	r3, [pc, #72]	@ (80004d8 <main+0x8c>)
 800048e:	f107 0420 	add.w	r4, r7, #32
 8000492:	461d      	mov	r5, r3
 8000494:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8000496:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8000498:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800049c:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    osThreadCreate(osThread(statusTask), NULL);
 80004a0:	f107 0320 	add.w	r3, r7, #32
 80004a4:	2100      	movs	r1, #0
 80004a6:	4618      	mov	r0, r3
 80004a8:	f002 fdde 	bl	8003068 <osThreadCreate>

    // Handling user commands task
    osThreadDef(userInputTask, ProcessUserInputTask, osPriorityNormal, 0, 128);
 80004ac:	4b0b      	ldr	r3, [pc, #44]	@ (80004dc <main+0x90>)
 80004ae:	1d3c      	adds	r4, r7, #4
 80004b0:	461d      	mov	r5, r3
 80004b2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80004b4:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80004b6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80004ba:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    osThreadCreate(osThread(userInputTask), NULL);
 80004be:	1d3b      	adds	r3, r7, #4
 80004c0:	2100      	movs	r1, #0
 80004c2:	4618      	mov	r0, r3
 80004c4:	f002 fdd0 	bl	8003068 <osThreadCreate>

    // Start the RTOS kernel
    osKernelStart();
 80004c8:	f002 fdc7 	bl	800305a <osKernelStart>

    while (1)
 80004cc:	bf00      	nop
 80004ce:	e7fd      	b.n	80004cc <main+0x80>
 80004d0:	08004f68 	.word	0x08004f68
 80004d4:	20000378 	.word	0x20000378
 80004d8:	08004f90 	.word	0x08004f90
 80004dc:	08004fbc 	.word	0x08004fbc

080004e0 <SystemClock_Config>:
    {
    }
}

void SystemClock_Config(void)
{
 80004e0:	b580      	push	{r7, lr}
 80004e2:	b090      	sub	sp, #64	@ 0x40
 80004e4:	af00      	add	r7, sp, #0
    RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80004e6:	f107 0318 	add.w	r3, r7, #24
 80004ea:	2228      	movs	r2, #40	@ 0x28
 80004ec:	2100      	movs	r1, #0
 80004ee:	4618      	mov	r0, r3
 80004f0:	f003 ffe6 	bl	80044c0 <memset>
    RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80004f4:	1d3b      	adds	r3, r7, #4
 80004f6:	2200      	movs	r2, #0
 80004f8:	601a      	str	r2, [r3, #0]
 80004fa:	605a      	str	r2, [r3, #4]
 80004fc:	609a      	str	r2, [r3, #8]
 80004fe:	60da      	str	r2, [r3, #12]
 8000500:	611a      	str	r2, [r3, #16]

    RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8000502:	2302      	movs	r3, #2
 8000504:	61bb      	str	r3, [r7, #24]
    RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8000506:	2301      	movs	r3, #1
 8000508:	62bb      	str	r3, [r7, #40]	@ 0x28
    RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 800050a:	2310      	movs	r3, #16
 800050c:	62fb      	str	r3, [r7, #44]	@ 0x2c
    RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 800050e:	2302      	movs	r3, #2
 8000510:	637b      	str	r3, [r7, #52]	@ 0x34
    RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 8000512:	2300      	movs	r3, #0
 8000514:	63bb      	str	r3, [r7, #56]	@ 0x38
    RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL16;
 8000516:	f44f 1360 	mov.w	r3, #3670016	@ 0x380000
 800051a:	63fb      	str	r3, [r7, #60]	@ 0x3c
    if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800051c:	f107 0318 	add.w	r3, r7, #24
 8000520:	4618      	mov	r0, r3
 8000522:	f001 f84f 	bl	80015c4 <HAL_RCC_OscConfig>
 8000526:	4603      	mov	r3, r0
 8000528:	2b00      	cmp	r3, #0
 800052a:	d001      	beq.n	8000530 <SystemClock_Config+0x50>
    {
        Error_Handler();
 800052c:	f000 fabe 	bl	8000aac <Error_Handler>
    }

    RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 8000530:	230f      	movs	r3, #15
 8000532:	607b      	str	r3, [r7, #4]
    RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000534:	2302      	movs	r3, #2
 8000536:	60bb      	str	r3, [r7, #8]
    RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000538:	2300      	movs	r3, #0
 800053a:	60fb      	str	r3, [r7, #12]
    RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 800053c:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8000540:	613b      	str	r3, [r7, #16]
    RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8000542:	2300      	movs	r3, #0
 8000544:	617b      	str	r3, [r7, #20]

    if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8000546:	1d3b      	adds	r3, r7, #4
 8000548:	2102      	movs	r1, #2
 800054a:	4618      	mov	r0, r3
 800054c:	f001 fabc 	bl	8001ac8 <HAL_RCC_ClockConfig>
 8000550:	4603      	mov	r3, r0
 8000552:	2b00      	cmp	r3, #0
 8000554:	d001      	beq.n	800055a <SystemClock_Config+0x7a>
    {
        Error_Handler();
 8000556:	f000 faa9 	bl	8000aac <Error_Handler>
    }
}
 800055a:	bf00      	nop
 800055c:	3740      	adds	r7, #64	@ 0x40
 800055e:	46bd      	mov	sp, r7
 8000560:	bd80      	pop	{r7, pc}
	...

08000564 <MX_TIM2_Init>:

static void MX_TIM2_Init(void)
{
 8000564:	b580      	push	{r7, lr}
 8000566:	b086      	sub	sp, #24
 8000568:	af00      	add	r7, sp, #0
    TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800056a:	f107 0308 	add.w	r3, r7, #8
 800056e:	2200      	movs	r2, #0
 8000570:	601a      	str	r2, [r3, #0]
 8000572:	605a      	str	r2, [r3, #4]
 8000574:	609a      	str	r2, [r3, #8]
 8000576:	60da      	str	r2, [r3, #12]
    TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000578:	463b      	mov	r3, r7
 800057a:	2200      	movs	r2, #0
 800057c:	601a      	str	r2, [r3, #0]
 800057e:	605a      	str	r2, [r3, #4]

    htim2.Instance = TIM2;
 8000580:	4b1e      	ldr	r3, [pc, #120]	@ (80005fc <MX_TIM2_Init+0x98>)
 8000582:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8000586:	601a      	str	r2, [r3, #0]
    htim2.Init.Prescaler = 7199;
 8000588:	4b1c      	ldr	r3, [pc, #112]	@ (80005fc <MX_TIM2_Init+0x98>)
 800058a:	f641 421f 	movw	r2, #7199	@ 0x1c1f
 800058e:	605a      	str	r2, [r3, #4]
    htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000590:	4b1a      	ldr	r3, [pc, #104]	@ (80005fc <MX_TIM2_Init+0x98>)
 8000592:	2200      	movs	r2, #0
 8000594:	609a      	str	r2, [r3, #8]
    htim2.Init.Period = 9999;
 8000596:	4b19      	ldr	r3, [pc, #100]	@ (80005fc <MX_TIM2_Init+0x98>)
 8000598:	f242 720f 	movw	r2, #9999	@ 0x270f
 800059c:	60da      	str	r2, [r3, #12]
    htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800059e:	4b17      	ldr	r3, [pc, #92]	@ (80005fc <MX_TIM2_Init+0x98>)
 80005a0:	2200      	movs	r2, #0
 80005a2:	611a      	str	r2, [r3, #16]
    htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80005a4:	4b15      	ldr	r3, [pc, #84]	@ (80005fc <MX_TIM2_Init+0x98>)
 80005a6:	2200      	movs	r2, #0
 80005a8:	619a      	str	r2, [r3, #24]
    if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 80005aa:	4814      	ldr	r0, [pc, #80]	@ (80005fc <MX_TIM2_Init+0x98>)
 80005ac:	f001 fc1a 	bl	8001de4 <HAL_TIM_Base_Init>
 80005b0:	4603      	mov	r3, r0
 80005b2:	2b00      	cmp	r3, #0
 80005b4:	d001      	beq.n	80005ba <MX_TIM2_Init+0x56>
    {
        Error_Handler();
 80005b6:	f000 fa79 	bl	8000aac <Error_Handler>
    }
    sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80005ba:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80005be:	60bb      	str	r3, [r7, #8]
    if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 80005c0:	f107 0308 	add.w	r3, r7, #8
 80005c4:	4619      	mov	r1, r3
 80005c6:	480d      	ldr	r0, [pc, #52]	@ (80005fc <MX_TIM2_Init+0x98>)
 80005c8:	f001 fc5b 	bl	8001e82 <HAL_TIM_ConfigClockSource>
 80005cc:	4603      	mov	r3, r0
 80005ce:	2b00      	cmp	r3, #0
 80005d0:	d001      	beq.n	80005d6 <MX_TIM2_Init+0x72>
    {
        Error_Handler();
 80005d2:	f000 fa6b 	bl	8000aac <Error_Handler>
    }
    sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80005d6:	2300      	movs	r3, #0
 80005d8:	603b      	str	r3, [r7, #0]
    sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80005da:	2300      	movs	r3, #0
 80005dc:	607b      	str	r3, [r7, #4]
    if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 80005de:	463b      	mov	r3, r7
 80005e0:	4619      	mov	r1, r3
 80005e2:	4806      	ldr	r0, [pc, #24]	@ (80005fc <MX_TIM2_Init+0x98>)
 80005e4:	f001 fe18 	bl	8002218 <HAL_TIMEx_MasterConfigSynchronization>
 80005e8:	4603      	mov	r3, r0
 80005ea:	2b00      	cmp	r3, #0
 80005ec:	d001      	beq.n	80005f2 <MX_TIM2_Init+0x8e>
    {
        Error_Handler();
 80005ee:	f000 fa5d 	bl	8000aac <Error_Handler>
    }
}
 80005f2:	bf00      	nop
 80005f4:	3718      	adds	r7, #24
 80005f6:	46bd      	mov	sp, r7
 80005f8:	bd80      	pop	{r7, pc}
 80005fa:	bf00      	nop
 80005fc:	200002e8 	.word	0x200002e8

08000600 <MX_USART2_UART_Init>:

static void MX_USART2_UART_Init(void)
{
 8000600:	b580      	push	{r7, lr}
 8000602:	af00      	add	r7, sp, #0
    huart2.Instance = USART2;
 8000604:	4b11      	ldr	r3, [pc, #68]	@ (800064c <MX_USART2_UART_Init+0x4c>)
 8000606:	4a12      	ldr	r2, [pc, #72]	@ (8000650 <MX_USART2_UART_Init+0x50>)
 8000608:	601a      	str	r2, [r3, #0]
    huart2.Init.BaudRate = 115200;
 800060a:	4b10      	ldr	r3, [pc, #64]	@ (800064c <MX_USART2_UART_Init+0x4c>)
 800060c:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 8000610:	605a      	str	r2, [r3, #4]
    huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8000612:	4b0e      	ldr	r3, [pc, #56]	@ (800064c <MX_USART2_UART_Init+0x4c>)
 8000614:	2200      	movs	r2, #0
 8000616:	609a      	str	r2, [r3, #8]
    huart2.Init.StopBits = UART_STOPBITS_1;
 8000618:	4b0c      	ldr	r3, [pc, #48]	@ (800064c <MX_USART2_UART_Init+0x4c>)
 800061a:	2200      	movs	r2, #0
 800061c:	60da      	str	r2, [r3, #12]
    huart2.Init.Parity = UART_PARITY_NONE;
 800061e:	4b0b      	ldr	r3, [pc, #44]	@ (800064c <MX_USART2_UART_Init+0x4c>)
 8000620:	2200      	movs	r2, #0
 8000622:	611a      	str	r2, [r3, #16]
    huart2.Init.Mode = UART_MODE_TX_RX;
 8000624:	4b09      	ldr	r3, [pc, #36]	@ (800064c <MX_USART2_UART_Init+0x4c>)
 8000626:	220c      	movs	r2, #12
 8000628:	615a      	str	r2, [r3, #20]
    huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800062a:	4b08      	ldr	r3, [pc, #32]	@ (800064c <MX_USART2_UART_Init+0x4c>)
 800062c:	2200      	movs	r2, #0
 800062e:	619a      	str	r2, [r3, #24]
    huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8000630:	4b06      	ldr	r3, [pc, #24]	@ (800064c <MX_USART2_UART_Init+0x4c>)
 8000632:	2200      	movs	r2, #0
 8000634:	61da      	str	r2, [r3, #28]
    if (HAL_UART_Init(&huart2) != HAL_OK)
 8000636:	4805      	ldr	r0, [pc, #20]	@ (800064c <MX_USART2_UART_Init+0x4c>)
 8000638:	f001 fe4c 	bl	80022d4 <HAL_UART_Init>
 800063c:	4603      	mov	r3, r0
 800063e:	2b00      	cmp	r3, #0
 8000640:	d001      	beq.n	8000646 <MX_USART2_UART_Init+0x46>
    {
        Error_Handler();
 8000642:	f000 fa33 	bl	8000aac <Error_Handler>
    }
}
 8000646:	bf00      	nop
 8000648:	bd80      	pop	{r7, pc}
 800064a:	bf00      	nop
 800064c:	20000330 	.word	0x20000330
 8000650:	40004400 	.word	0x40004400

08000654 <MX_GPIO_Init>:

static void MX_GPIO_Init(void)
{
 8000654:	b580      	push	{r7, lr}
 8000656:	b088      	sub	sp, #32
 8000658:	af00      	add	r7, sp, #0
    GPIO_InitTypeDef GPIO_InitStruct = {0};
 800065a:	f107 0310 	add.w	r3, r7, #16
 800065e:	2200      	movs	r2, #0
 8000660:	601a      	str	r2, [r3, #0]
 8000662:	605a      	str	r2, [r3, #4]
 8000664:	609a      	str	r2, [r3, #8]
 8000666:	60da      	str	r2, [r3, #12]

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8000668:	4b33      	ldr	r3, [pc, #204]	@ (8000738 <MX_GPIO_Init+0xe4>)
 800066a:	699b      	ldr	r3, [r3, #24]
 800066c:	4a32      	ldr	r2, [pc, #200]	@ (8000738 <MX_GPIO_Init+0xe4>)
 800066e:	f043 0310 	orr.w	r3, r3, #16
 8000672:	6193      	str	r3, [r2, #24]
 8000674:	4b30      	ldr	r3, [pc, #192]	@ (8000738 <MX_GPIO_Init+0xe4>)
 8000676:	699b      	ldr	r3, [r3, #24]
 8000678:	f003 0310 	and.w	r3, r3, #16
 800067c:	60fb      	str	r3, [r7, #12]
 800067e:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8000680:	4b2d      	ldr	r3, [pc, #180]	@ (8000738 <MX_GPIO_Init+0xe4>)
 8000682:	699b      	ldr	r3, [r3, #24]
 8000684:	4a2c      	ldr	r2, [pc, #176]	@ (8000738 <MX_GPIO_Init+0xe4>)
 8000686:	f043 0320 	orr.w	r3, r3, #32
 800068a:	6193      	str	r3, [r2, #24]
 800068c:	4b2a      	ldr	r3, [pc, #168]	@ (8000738 <MX_GPIO_Init+0xe4>)
 800068e:	699b      	ldr	r3, [r3, #24]
 8000690:	f003 0320 	and.w	r3, r3, #32
 8000694:	60bb      	str	r3, [r7, #8]
 8000696:	68bb      	ldr	r3, [r7, #8]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8000698:	4b27      	ldr	r3, [pc, #156]	@ (8000738 <MX_GPIO_Init+0xe4>)
 800069a:	699b      	ldr	r3, [r3, #24]
 800069c:	4a26      	ldr	r2, [pc, #152]	@ (8000738 <MX_GPIO_Init+0xe4>)
 800069e:	f043 0304 	orr.w	r3, r3, #4
 80006a2:	6193      	str	r3, [r2, #24]
 80006a4:	4b24      	ldr	r3, [pc, #144]	@ (8000738 <MX_GPIO_Init+0xe4>)
 80006a6:	699b      	ldr	r3, [r3, #24]
 80006a8:	f003 0304 	and.w	r3, r3, #4
 80006ac:	607b      	str	r3, [r7, #4]
 80006ae:	687b      	ldr	r3, [r7, #4]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 80006b0:	4b21      	ldr	r3, [pc, #132]	@ (8000738 <MX_GPIO_Init+0xe4>)
 80006b2:	699b      	ldr	r3, [r3, #24]
 80006b4:	4a20      	ldr	r2, [pc, #128]	@ (8000738 <MX_GPIO_Init+0xe4>)
 80006b6:	f043 0308 	orr.w	r3, r3, #8
 80006ba:	6193      	str	r3, [r2, #24]
 80006bc:	4b1e      	ldr	r3, [pc, #120]	@ (8000738 <MX_GPIO_Init+0xe4>)
 80006be:	699b      	ldr	r3, [r3, #24]
 80006c0:	f003 0308 	and.w	r3, r3, #8
 80006c4:	603b      	str	r3, [r7, #0]
 80006c6:	683b      	ldr	r3, [r7, #0]

    HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
 80006c8:	2200      	movs	r2, #0
 80006ca:	2120      	movs	r1, #32
 80006cc:	481b      	ldr	r0, [pc, #108]	@ (800073c <MX_GPIO_Init+0xe8>)
 80006ce:	f000 ff3e 	bl	800154e <HAL_GPIO_WritePin>

    GPIO_InitStruct.Pin = B1_Pin;
 80006d2:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 80006d6:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 80006d8:	4b19      	ldr	r3, [pc, #100]	@ (8000740 <MX_GPIO_Init+0xec>)
 80006da:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80006dc:	2300      	movs	r3, #0
 80006de:	61bb      	str	r3, [r7, #24]
    HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 80006e0:	f107 0310 	add.w	r3, r7, #16
 80006e4:	4619      	mov	r1, r3
 80006e6:	4817      	ldr	r0, [pc, #92]	@ (8000744 <MX_GPIO_Init+0xf0>)
 80006e8:	f000 fd96 	bl	8001218 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = LD2_Pin;
 80006ec:	2320      	movs	r3, #32
 80006ee:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80006f0:	2301      	movs	r3, #1
 80006f2:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80006f4:	2300      	movs	r3, #0
 80006f6:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80006f8:	2302      	movs	r3, #2
 80006fa:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 80006fc:	f107 0310 	add.w	r3, r7, #16
 8000700:	4619      	mov	r1, r3
 8000702:	480e      	ldr	r0, [pc, #56]	@ (800073c <MX_GPIO_Init+0xe8>)
 8000704:	f000 fd88 	bl	8001218 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_0;
 8000708:	2301      	movs	r3, #1
 800070a:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 800070c:	4b0c      	ldr	r3, [pc, #48]	@ (8000740 <MX_GPIO_Init+0xec>)
 800070e:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 8000710:	2301      	movs	r3, #1
 8000712:	61bb      	str	r3, [r7, #24]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000714:	f107 0310 	add.w	r3, r7, #16
 8000718:	4619      	mov	r1, r3
 800071a:	480b      	ldr	r0, [pc, #44]	@ (8000748 <MX_GPIO_Init+0xf4>)
 800071c:	f000 fd7c 	bl	8001218 <HAL_GPIO_Init>

    HAL_NVIC_SetPriority(EXTI0_IRQn, 0, 0);
 8000720:	2200      	movs	r2, #0
 8000722:	2100      	movs	r1, #0
 8000724:	2006      	movs	r0, #6
 8000726:	f000 fc8e 	bl	8001046 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(EXTI0_IRQn);
 800072a:	2006      	movs	r0, #6
 800072c:	f000 fca7 	bl	800107e <HAL_NVIC_EnableIRQ>
}
 8000730:	bf00      	nop
 8000732:	3720      	adds	r7, #32
 8000734:	46bd      	mov	sp, r7
 8000736:	bd80      	pop	{r7, pc}
 8000738:	40021000 	.word	0x40021000
 800073c:	40010800 	.word	0x40010800
 8000740:	10110000 	.word	0x10110000
 8000744:	40011000 	.word	0x40011000
 8000748:	40010c00 	.word	0x40010c00

0800074c <StartDefaultTask>:

// Task for handling emergency mode and resetting the elevator state
void StartDefaultTask(void const *argument)
{
 800074c:	b590      	push	{r4, r7, lr}
 800074e:	b083      	sub	sp, #12
 8000750:	af00      	add	r7, sp, #0
 8000752:	6078      	str	r0, [r7, #4]
    for (;;)
    {
        strcpy(elevatorState, "Emergency Mode");
 8000754:	4a0e      	ldr	r2, [pc, #56]	@ (8000790 <StartDefaultTask+0x44>)
 8000756:	4b0f      	ldr	r3, [pc, #60]	@ (8000794 <StartDefaultTask+0x48>)
 8000758:	4614      	mov	r4, r2
 800075a:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 800075c:	c407      	stmia	r4!, {r0, r1, r2}
 800075e:	8023      	strh	r3, [r4, #0]
 8000760:	3402      	adds	r4, #2
 8000762:	0c1b      	lsrs	r3, r3, #16
 8000764:	7023      	strb	r3, [r4, #0]
        UpdateStatusWindow();
 8000766:	f7ff fcfd 	bl	8000164 <UpdateStatusWindow>

        while (isEmergency)
 800076a:	e002      	b.n	8000772 <StartDefaultTask+0x26>
        {
            osDelay(100);
 800076c:	2064      	movs	r0, #100	@ 0x64
 800076e:	f002 fcc7 	bl	8003100 <osDelay>
        while (isEmergency)
 8000772:	4b09      	ldr	r3, [pc, #36]	@ (8000798 <StartDefaultTask+0x4c>)
 8000774:	781b      	ldrb	r3, [r3, #0]
 8000776:	b2db      	uxtb	r3, r3
 8000778:	2b00      	cmp	r3, #0
 800077a:	d1f7      	bne.n	800076c <StartDefaultTask+0x20>
        }

        strcpy(elevatorState, "Idle");
 800077c:	4b04      	ldr	r3, [pc, #16]	@ (8000790 <StartDefaultTask+0x44>)
 800077e:	4a07      	ldr	r2, [pc, #28]	@ (800079c <StartDefaultTask+0x50>)
 8000780:	e892 0003 	ldmia.w	r2, {r0, r1}
 8000784:	6018      	str	r0, [r3, #0]
 8000786:	3304      	adds	r3, #4
 8000788:	7019      	strb	r1, [r3, #0]
        UpdateStatusWindow();
 800078a:	f7ff fceb 	bl	8000164 <UpdateStatusWindow>
        strcpy(elevatorState, "Emergency Mode");
 800078e:	e7e1      	b.n	8000754 <StartDefaultTask+0x8>
 8000790:	20000000 	.word	0x20000000
 8000794:	08004fd8 	.word	0x08004fd8
 8000798:	20000015 	.word	0x20000015
 800079c:	08004fe8 	.word	0x08004fe8

080007a0 <StatusWindowTask>:
    osDelay(100);
}

// Task to keep updating the timer on the terminal
void StatusWindowTask(void const *argument)
{
 80007a0:	b580      	push	{r7, lr}
 80007a2:	b082      	sub	sp, #8
 80007a4:	af00      	add	r7, sp, #0
 80007a6:	6078      	str	r0, [r7, #4]
    for (;;)
    {
        osDelay(1000);
 80007a8:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 80007ac:	f002 fca8 	bl	8003100 <osDelay>
        elapsedTime++;
 80007b0:	4b04      	ldr	r3, [pc, #16]	@ (80007c4 <StatusWindowTask+0x24>)
 80007b2:	681b      	ldr	r3, [r3, #0]
 80007b4:	3301      	adds	r3, #1
 80007b6:	4a03      	ldr	r2, [pc, #12]	@ (80007c4 <StatusWindowTask+0x24>)
 80007b8:	6013      	str	r3, [r2, #0]
        UpdateStatusWindow();
 80007ba:	f7ff fcd3 	bl	8000164 <UpdateStatusWindow>
        osDelay(1000);
 80007be:	bf00      	nop
 80007c0:	e7f2      	b.n	80007a8 <StatusWindowTask+0x8>
 80007c2:	bf00      	nop
 80007c4:	2000037c 	.word	0x2000037c

080007c8 <ProcessUserInputTask>:
    }
}

// Task to process user input from the UART terminal
void ProcessUserInputTask(void const *argument)
{
 80007c8:	b5b0      	push	{r4, r5, r7, lr}
 80007ca:	b0b6      	sub	sp, #216	@ 0xd8
 80007cc:	af00      	add	r7, sp, #0
 80007ce:	6078      	str	r0, [r7, #4]
    uint8_t receivedChar;
    char inputBuffer[200] = {0}; // To store user inputs
 80007d0:	2300      	movs	r3, #0
 80007d2:	60bb      	str	r3, [r7, #8]
 80007d4:	f107 030c 	add.w	r3, r7, #12
 80007d8:	22c4      	movs	r2, #196	@ 0xc4
 80007da:	2100      	movs	r1, #0
 80007dc:	4618      	mov	r0, r3
 80007de:	f003 fe6f 	bl	80044c0 <memset>
    int inputLen = 0;
 80007e2:	2300      	movs	r3, #0
 80007e4:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4

    for (;;)
    {
    	// Wait for a character from the UART
        if (HAL_UART_Receive(&huart2, &receivedChar, 1, HAL_MAX_DELAY) == HAL_OK)
 80007e8:	f107 01d2 	add.w	r1, r7, #210	@ 0xd2
 80007ec:	f04f 33ff 	mov.w	r3, #4294967295
 80007f0:	2201      	movs	r2, #1
 80007f2:	48a4      	ldr	r0, [pc, #656]	@ (8000a84 <ProcessUserInputTask+0x2bc>)
 80007f4:	f001 fe49 	bl	800248a <HAL_UART_Receive>
 80007f8:	4603      	mov	r3, r0
 80007fa:	2b00      	cmp	r3, #0
 80007fc:	f040 813c 	bne.w	8000a78 <ProcessUserInputTask+0x2b0>
        {
        	// Ignore newline characters
            if (receivedChar != '\r' && receivedChar != '\n')
 8000800:	f897 30d2 	ldrb.w	r3, [r7, #210]	@ 0xd2
 8000804:	2b0d      	cmp	r3, #13
 8000806:	d016      	beq.n	8000836 <ProcessUserInputTask+0x6e>
 8000808:	f897 30d2 	ldrb.w	r3, [r7, #210]	@ 0xd2
 800080c:	2b0a      	cmp	r3, #10
 800080e:	d012      	beq.n	8000836 <ProcessUserInputTask+0x6e>
            {
                inputBuffer[inputLen++] = receivedChar; // Add the character to input buffer
 8000810:	f8d7 30d4 	ldr.w	r3, [r7, #212]	@ 0xd4
 8000814:	1c5a      	adds	r2, r3, #1
 8000816:	f8c7 20d4 	str.w	r2, [r7, #212]	@ 0xd4
 800081a:	f897 20d2 	ldrb.w	r2, [r7, #210]	@ 0xd2
 800081e:	33d8      	adds	r3, #216	@ 0xd8
 8000820:	443b      	add	r3, r7
 8000822:	f803 2cd0 	strb.w	r2, [r3, #-208]
                inputBuffer[inputLen] = '\0'; // Null-terminate the string
 8000826:	f107 0208 	add.w	r2, r7, #8
 800082a:	f8d7 30d4 	ldr.w	r3, [r7, #212]	@ 0xd4
 800082e:	4413      	add	r3, r2
 8000830:	2200      	movs	r2, #0
 8000832:	701a      	strb	r2, [r3, #0]
 8000834:	e120      	b.n	8000a78 <ProcessUserInputTask+0x2b0>
            }
            else
            {
                // Process the command
                switch (inputBuffer[0])
 8000836:	7a3b      	ldrb	r3, [r7, #8]
 8000838:	2b6f      	cmp	r3, #111	@ 0x6f
 800083a:	d010      	beq.n	800085e <ProcessUserInputTask+0x96>
 800083c:	2b6f      	cmp	r3, #111	@ 0x6f
 800083e:	f300 8107 	bgt.w	8000a50 <ProcessUserInputTask+0x288>
 8000842:	2b63      	cmp	r3, #99	@ 0x63
 8000844:	d042      	beq.n	80008cc <ProcessUserInputTask+0x104>
 8000846:	2b63      	cmp	r3, #99	@ 0x63
 8000848:	f300 8102 	bgt.w	8000a50 <ProcessUserInputTask+0x288>
 800084c:	2b34      	cmp	r3, #52	@ 0x34
 800084e:	dc02      	bgt.n	8000856 <ProcessUserInputTask+0x8e>
 8000850:	2b31      	cmp	r3, #49	@ 0x31
 8000852:	da62      	bge.n	800091a <ProcessUserInputTask+0x152>
 8000854:	e0fc      	b.n	8000a50 <ProcessUserInputTask+0x288>
 8000856:	2b4d      	cmp	r3, #77	@ 0x4d
 8000858:	f000 80e3 	beq.w	8000a22 <ProcessUserInputTask+0x25a>
 800085c:	e0f8      	b.n	8000a50 <ProcessUserInputTask+0x288>
                {
                // Open the elevator door
                case 'o':
                	if (strcmp(elevatorState, "Emergency Mode") == 0) break;
 800085e:	498a      	ldr	r1, [pc, #552]	@ (8000a88 <ProcessUserInputTask+0x2c0>)
 8000860:	488a      	ldr	r0, [pc, #552]	@ (8000a8c <ProcessUserInputTask+0x2c4>)
 8000862:	f7ff fc75 	bl	8000150 <strcmp>
 8000866:	4603      	mov	r3, r0
 8000868:	2b00      	cmp	r3, #0
 800086a:	f000 80f9 	beq.w	8000a60 <ProcessUserInputTask+0x298>
                    strcpy(elevatorState, "Door opened");
 800086e:	4b87      	ldr	r3, [pc, #540]	@ (8000a8c <ProcessUserInputTask+0x2c4>)
 8000870:	4a87      	ldr	r2, [pc, #540]	@ (8000a90 <ProcessUserInputTask+0x2c8>)
 8000872:	ca07      	ldmia	r2, {r0, r1, r2}
 8000874:	e883 0007 	stmia.w	r3, {r0, r1, r2}
                    elapsedTime++;
 8000878:	4b86      	ldr	r3, [pc, #536]	@ (8000a94 <ProcessUserInputTask+0x2cc>)
 800087a:	681b      	ldr	r3, [r3, #0]
 800087c:	3301      	adds	r3, #1
 800087e:	4a85      	ldr	r2, [pc, #532]	@ (8000a94 <ProcessUserInputTask+0x2cc>)
 8000880:	6013      	str	r3, [r2, #0]
                    UpdateStatusWindow();
 8000882:	f7ff fc6f 	bl	8000164 <UpdateStatusWindow>
                    HAL_Delay(1500);
 8000886:	f240 50dc 	movw	r0, #1500	@ 0x5dc
 800088a:	f000 fae1 	bl	8000e50 <HAL_Delay>
                    strcpy(elevatorState, "Door closed");
 800088e:	4b7f      	ldr	r3, [pc, #508]	@ (8000a8c <ProcessUserInputTask+0x2c4>)
 8000890:	4a81      	ldr	r2, [pc, #516]	@ (8000a98 <ProcessUserInputTask+0x2d0>)
 8000892:	ca07      	ldmia	r2, {r0, r1, r2}
 8000894:	e883 0007 	stmia.w	r3, {r0, r1, r2}
                    elapsedTime++;
 8000898:	4b7e      	ldr	r3, [pc, #504]	@ (8000a94 <ProcessUserInputTask+0x2cc>)
 800089a:	681b      	ldr	r3, [r3, #0]
 800089c:	3301      	adds	r3, #1
 800089e:	4a7d      	ldr	r2, [pc, #500]	@ (8000a94 <ProcessUserInputTask+0x2cc>)
 80008a0:	6013      	str	r3, [r2, #0]
                    UpdateStatusWindow();
 80008a2:	f7ff fc5f 	bl	8000164 <UpdateStatusWindow>
                    HAL_Delay(1500);
 80008a6:	f240 50dc 	movw	r0, #1500	@ 0x5dc
 80008aa:	f000 fad1 	bl	8000e50 <HAL_Delay>
                    strcpy(elevatorState, "Idle");
 80008ae:	4b77      	ldr	r3, [pc, #476]	@ (8000a8c <ProcessUserInputTask+0x2c4>)
 80008b0:	4a7a      	ldr	r2, [pc, #488]	@ (8000a9c <ProcessUserInputTask+0x2d4>)
 80008b2:	e892 0003 	ldmia.w	r2, {r0, r1}
 80008b6:	6018      	str	r0, [r3, #0]
 80008b8:	3304      	adds	r3, #4
 80008ba:	7019      	strb	r1, [r3, #0]
                    elapsedTime++;
 80008bc:	4b75      	ldr	r3, [pc, #468]	@ (8000a94 <ProcessUserInputTask+0x2cc>)
 80008be:	681b      	ldr	r3, [r3, #0]
 80008c0:	3301      	adds	r3, #1
 80008c2:	4a74      	ldr	r2, [pc, #464]	@ (8000a94 <ProcessUserInputTask+0x2cc>)
 80008c4:	6013      	str	r3, [r2, #0]
                    UpdateStatusWindow();
 80008c6:	f7ff fc4d 	bl	8000164 <UpdateStatusWindow>
                    break;
 80008ca:	e0d0      	b.n	8000a6e <ProcessUserInputTask+0x2a6>
                // Close the elevator door
                case 'c':
                	if (strcmp(elevatorState, "Emergency Mode") == 0) break;
 80008cc:	496e      	ldr	r1, [pc, #440]	@ (8000a88 <ProcessUserInputTask+0x2c0>)
 80008ce:	486f      	ldr	r0, [pc, #444]	@ (8000a8c <ProcessUserInputTask+0x2c4>)
 80008d0:	f7ff fc3e 	bl	8000150 <strcmp>
 80008d4:	4603      	mov	r3, r0
 80008d6:	2b00      	cmp	r3, #0
 80008d8:	f000 80c4 	beq.w	8000a64 <ProcessUserInputTask+0x29c>
                    strcpy(elevatorState, "Door closed");
 80008dc:	4b6b      	ldr	r3, [pc, #428]	@ (8000a8c <ProcessUserInputTask+0x2c4>)
 80008de:	4a6e      	ldr	r2, [pc, #440]	@ (8000a98 <ProcessUserInputTask+0x2d0>)
 80008e0:	ca07      	ldmia	r2, {r0, r1, r2}
 80008e2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
                    elapsedTime++;
 80008e6:	4b6b      	ldr	r3, [pc, #428]	@ (8000a94 <ProcessUserInputTask+0x2cc>)
 80008e8:	681b      	ldr	r3, [r3, #0]
 80008ea:	3301      	adds	r3, #1
 80008ec:	4a69      	ldr	r2, [pc, #420]	@ (8000a94 <ProcessUserInputTask+0x2cc>)
 80008ee:	6013      	str	r3, [r2, #0]
                    UpdateStatusWindow();
 80008f0:	f7ff fc38 	bl	8000164 <UpdateStatusWindow>
                    HAL_Delay(1500);
 80008f4:	f240 50dc 	movw	r0, #1500	@ 0x5dc
 80008f8:	f000 faaa 	bl	8000e50 <HAL_Delay>
                    strcpy(elevatorState, "Idle");
 80008fc:	4b63      	ldr	r3, [pc, #396]	@ (8000a8c <ProcessUserInputTask+0x2c4>)
 80008fe:	4a67      	ldr	r2, [pc, #412]	@ (8000a9c <ProcessUserInputTask+0x2d4>)
 8000900:	e892 0003 	ldmia.w	r2, {r0, r1}
 8000904:	6018      	str	r0, [r3, #0]
 8000906:	3304      	adds	r3, #4
 8000908:	7019      	strb	r1, [r3, #0]
                    elapsedTime++;
 800090a:	4b62      	ldr	r3, [pc, #392]	@ (8000a94 <ProcessUserInputTask+0x2cc>)
 800090c:	681b      	ldr	r3, [r3, #0]
 800090e:	3301      	adds	r3, #1
 8000910:	4a60      	ldr	r2, [pc, #384]	@ (8000a94 <ProcessUserInputTask+0x2cc>)
 8000912:	6013      	str	r3, [r2, #0]
                    UpdateStatusWindow();
 8000914:	f7ff fc26 	bl	8000164 <UpdateStatusWindow>
                    break;
 8000918:	e0a9      	b.n	8000a6e <ProcessUserInputTask+0x2a6>
                case '1': // Move to floor 1
                case '2': // Move to floor 2
                case '3': // Move to floor 3
                case '4': // Move to floor 4
                	if (strcmp(elevatorState, "Emergency Mode") == 0) break;
 800091a:	495b      	ldr	r1, [pc, #364]	@ (8000a88 <ProcessUserInputTask+0x2c0>)
 800091c:	485b      	ldr	r0, [pc, #364]	@ (8000a8c <ProcessUserInputTask+0x2c4>)
 800091e:	f7ff fc17 	bl	8000150 <strcmp>
 8000922:	4603      	mov	r3, r0
 8000924:	2b00      	cmp	r3, #0
 8000926:	f000 809f 	beq.w	8000a68 <ProcessUserInputTask+0x2a0>
                	uint8_t targetFloor = inputBuffer[0] - '0';
 800092a:	7a3b      	ldrb	r3, [r7, #8]
 800092c:	3b30      	subs	r3, #48	@ 0x30
 800092e:	f887 30d3 	strb.w	r3, [r7, #211]	@ 0xd3
                	while (currentFloor != targetFloor)
 8000932:	e039      	b.n	80009a8 <ProcessUserInputTask+0x1e0>
					{
                		if (strcmp(elevatorState, "Emergency Mode") == 0) {
 8000934:	4954      	ldr	r1, [pc, #336]	@ (8000a88 <ProcessUserInputTask+0x2c0>)
 8000936:	4855      	ldr	r0, [pc, #340]	@ (8000a8c <ProcessUserInputTask+0x2c4>)
 8000938:	f7ff fc0a 	bl	8000150 <strcmp>
 800093c:	4603      	mov	r3, r0
 800093e:	2b00      	cmp	r3, #0
 8000940:	d104      	bne.n	800094c <ProcessUserInputTask+0x184>
                			targetFloor = currentFloor; // In case of emergency
 8000942:	4b57      	ldr	r3, [pc, #348]	@ (8000aa0 <ProcessUserInputTask+0x2d8>)
 8000944:	781b      	ldrb	r3, [r3, #0]
 8000946:	f887 30d3 	strb.w	r3, [r7, #211]	@ 0xd3
                			break;
 800094a:	e034      	b.n	80009b6 <ProcessUserInputTask+0x1ee>
                		}
						if (currentFloor < targetFloor)
 800094c:	4b54      	ldr	r3, [pc, #336]	@ (8000aa0 <ProcessUserInputTask+0x2d8>)
 800094e:	781b      	ldrb	r3, [r3, #0]
 8000950:	b2db      	uxtb	r3, r3
 8000952:	f897 20d3 	ldrb.w	r2, [r7, #211]	@ 0xd3
 8000956:	429a      	cmp	r2, r3
 8000958:	d907      	bls.n	800096a <ProcessUserInputTask+0x1a2>
							currentFloor++;
 800095a:	4b51      	ldr	r3, [pc, #324]	@ (8000aa0 <ProcessUserInputTask+0x2d8>)
 800095c:	781b      	ldrb	r3, [r3, #0]
 800095e:	b2db      	uxtb	r3, r3
 8000960:	3301      	adds	r3, #1
 8000962:	b2da      	uxtb	r2, r3
 8000964:	4b4e      	ldr	r3, [pc, #312]	@ (8000aa0 <ProcessUserInputTask+0x2d8>)
 8000966:	701a      	strb	r2, [r3, #0]
 8000968:	e00d      	b.n	8000986 <ProcessUserInputTask+0x1be>
						else if (currentFloor > targetFloor)
 800096a:	4b4d      	ldr	r3, [pc, #308]	@ (8000aa0 <ProcessUserInputTask+0x2d8>)
 800096c:	781b      	ldrb	r3, [r3, #0]
 800096e:	b2db      	uxtb	r3, r3
 8000970:	f897 20d3 	ldrb.w	r2, [r7, #211]	@ 0xd3
 8000974:	429a      	cmp	r2, r3
 8000976:	d206      	bcs.n	8000986 <ProcessUserInputTask+0x1be>
							currentFloor--;
 8000978:	4b49      	ldr	r3, [pc, #292]	@ (8000aa0 <ProcessUserInputTask+0x2d8>)
 800097a:	781b      	ldrb	r3, [r3, #0]
 800097c:	b2db      	uxtb	r3, r3
 800097e:	3b01      	subs	r3, #1
 8000980:	b2da      	uxtb	r2, r3
 8000982:	4b47      	ldr	r3, [pc, #284]	@ (8000aa0 <ProcessUserInputTask+0x2d8>)
 8000984:	701a      	strb	r2, [r3, #0]
						// Update visuals and status for each floor
						strcpy(elevatorState, "Elevator moving");
 8000986:	4a41      	ldr	r2, [pc, #260]	@ (8000a8c <ProcessUserInputTask+0x2c4>)
 8000988:	4b46      	ldr	r3, [pc, #280]	@ (8000aa4 <ProcessUserInputTask+0x2dc>)
 800098a:	4614      	mov	r4, r2
 800098c:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 800098e:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
						elapsedTime++;
 8000992:	4b40      	ldr	r3, [pc, #256]	@ (8000a94 <ProcessUserInputTask+0x2cc>)
 8000994:	681b      	ldr	r3, [r3, #0]
 8000996:	3301      	adds	r3, #1
 8000998:	4a3e      	ldr	r2, [pc, #248]	@ (8000a94 <ProcessUserInputTask+0x2cc>)
 800099a:	6013      	str	r3, [r2, #0]
						UpdateStatusWindow();
 800099c:	f7ff fbe2 	bl	8000164 <UpdateStatusWindow>
						HAL_Delay(1300);
 80009a0:	f240 5014 	movw	r0, #1300	@ 0x514
 80009a4:	f000 fa54 	bl	8000e50 <HAL_Delay>
                	while (currentFloor != targetFloor)
 80009a8:	4b3d      	ldr	r3, [pc, #244]	@ (8000aa0 <ProcessUserInputTask+0x2d8>)
 80009aa:	781b      	ldrb	r3, [r3, #0]
 80009ac:	b2db      	uxtb	r3, r3
 80009ae:	f897 20d3 	ldrb.w	r2, [r7, #211]	@ 0xd3
 80009b2:	429a      	cmp	r2, r3
 80009b4:	d1be      	bne.n	8000934 <ProcessUserInputTask+0x16c>
					}
                	if (strcmp(elevatorState, "Emergency Mode") == 0) break;
 80009b6:	4934      	ldr	r1, [pc, #208]	@ (8000a88 <ProcessUserInputTask+0x2c0>)
 80009b8:	4834      	ldr	r0, [pc, #208]	@ (8000a8c <ProcessUserInputTask+0x2c4>)
 80009ba:	f7ff fbc9 	bl	8000150 <strcmp>
 80009be:	4603      	mov	r3, r0
 80009c0:	2b00      	cmp	r3, #0
 80009c2:	d053      	beq.n	8000a6c <ProcessUserInputTask+0x2a4>
					// Door operations after reaching the target floor
					strcpy(elevatorState, "Door opened");
 80009c4:	4b31      	ldr	r3, [pc, #196]	@ (8000a8c <ProcessUserInputTask+0x2c4>)
 80009c6:	4a32      	ldr	r2, [pc, #200]	@ (8000a90 <ProcessUserInputTask+0x2c8>)
 80009c8:	ca07      	ldmia	r2, {r0, r1, r2}
 80009ca:	e883 0007 	stmia.w	r3, {r0, r1, r2}
					elapsedTime++;
 80009ce:	4b31      	ldr	r3, [pc, #196]	@ (8000a94 <ProcessUserInputTask+0x2cc>)
 80009d0:	681b      	ldr	r3, [r3, #0]
 80009d2:	3301      	adds	r3, #1
 80009d4:	4a2f      	ldr	r2, [pc, #188]	@ (8000a94 <ProcessUserInputTask+0x2cc>)
 80009d6:	6013      	str	r3, [r2, #0]
					UpdateStatusWindow();
 80009d8:	f7ff fbc4 	bl	8000164 <UpdateStatusWindow>
					HAL_Delay(1500);
 80009dc:	f240 50dc 	movw	r0, #1500	@ 0x5dc
 80009e0:	f000 fa36 	bl	8000e50 <HAL_Delay>

					strcpy(elevatorState, "Door closed");
 80009e4:	4b29      	ldr	r3, [pc, #164]	@ (8000a8c <ProcessUserInputTask+0x2c4>)
 80009e6:	4a2c      	ldr	r2, [pc, #176]	@ (8000a98 <ProcessUserInputTask+0x2d0>)
 80009e8:	ca07      	ldmia	r2, {r0, r1, r2}
 80009ea:	e883 0007 	stmia.w	r3, {r0, r1, r2}
					elapsedTime++;
 80009ee:	4b29      	ldr	r3, [pc, #164]	@ (8000a94 <ProcessUserInputTask+0x2cc>)
 80009f0:	681b      	ldr	r3, [r3, #0]
 80009f2:	3301      	adds	r3, #1
 80009f4:	4a27      	ldr	r2, [pc, #156]	@ (8000a94 <ProcessUserInputTask+0x2cc>)
 80009f6:	6013      	str	r3, [r2, #0]
					UpdateStatusWindow();
 80009f8:	f7ff fbb4 	bl	8000164 <UpdateStatusWindow>
					HAL_Delay(1500);
 80009fc:	f240 50dc 	movw	r0, #1500	@ 0x5dc
 8000a00:	f000 fa26 	bl	8000e50 <HAL_Delay>

					strcpy(elevatorState, "Idle");
 8000a04:	4b21      	ldr	r3, [pc, #132]	@ (8000a8c <ProcessUserInputTask+0x2c4>)
 8000a06:	4a25      	ldr	r2, [pc, #148]	@ (8000a9c <ProcessUserInputTask+0x2d4>)
 8000a08:	e892 0003 	ldmia.w	r2, {r0, r1}
 8000a0c:	6018      	str	r0, [r3, #0]
 8000a0e:	3304      	adds	r3, #4
 8000a10:	7019      	strb	r1, [r3, #0]
					elapsedTime++;
 8000a12:	4b20      	ldr	r3, [pc, #128]	@ (8000a94 <ProcessUserInputTask+0x2cc>)
 8000a14:	681b      	ldr	r3, [r3, #0]
 8000a16:	3301      	adds	r3, #1
 8000a18:	4a1e      	ldr	r2, [pc, #120]	@ (8000a94 <ProcessUserInputTask+0x2cc>)
 8000a1a:	6013      	str	r3, [r2, #0]
					UpdateStatusWindow();
 8000a1c:	f7ff fba2 	bl	8000164 <UpdateStatusWindow>
                    break;
 8000a20:	e025      	b.n	8000a6e <ProcessUserInputTask+0x2a6>
                case 'M': // Enter maintenance mode
                    strcpy(elevatorState, "Maintenance Mode");
 8000a22:	4a1a      	ldr	r2, [pc, #104]	@ (8000a8c <ProcessUserInputTask+0x2c4>)
 8000a24:	4b20      	ldr	r3, [pc, #128]	@ (8000aa8 <ProcessUserInputTask+0x2e0>)
 8000a26:	4614      	mov	r4, r2
 8000a28:	461d      	mov	r5, r3
 8000a2a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8000a2c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8000a2e:	682b      	ldr	r3, [r5, #0]
 8000a30:	7023      	strb	r3, [r4, #0]
                    UpdateStatusWindow();
 8000a32:	f7ff fb97 	bl	8000164 <UpdateStatusWindow>
                    while (1)
                    {
                    	HAL_Delay(1000);
 8000a36:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 8000a3a:	f000 fa09 	bl	8000e50 <HAL_Delay>
                    	elapsedTime++;
 8000a3e:	4b15      	ldr	r3, [pc, #84]	@ (8000a94 <ProcessUserInputTask+0x2cc>)
 8000a40:	681b      	ldr	r3, [r3, #0]
 8000a42:	3301      	adds	r3, #1
 8000a44:	4a13      	ldr	r2, [pc, #76]	@ (8000a94 <ProcessUserInputTask+0x2cc>)
 8000a46:	6013      	str	r3, [r2, #0]
                    	UpdateStatusWindow();
 8000a48:	f7ff fb8c 	bl	8000164 <UpdateStatusWindow>
                    	HAL_Delay(1000);
 8000a4c:	bf00      	nop
 8000a4e:	e7f2      	b.n	8000a36 <ProcessUserInputTask+0x26e>
                    }
                    break;
				// Handle invalid input
                default:
                	invalidEntry();
 8000a50:	f7ff fca6 	bl	80003a0 <invalidEntry>
                	elapsedTime++;
 8000a54:	4b0f      	ldr	r3, [pc, #60]	@ (8000a94 <ProcessUserInputTask+0x2cc>)
 8000a56:	681b      	ldr	r3, [r3, #0]
 8000a58:	3301      	adds	r3, #1
 8000a5a:	4a0e      	ldr	r2, [pc, #56]	@ (8000a94 <ProcessUserInputTask+0x2cc>)
 8000a5c:	6013      	str	r3, [r2, #0]
                    break;
 8000a5e:	e006      	b.n	8000a6e <ProcessUserInputTask+0x2a6>
                	if (strcmp(elevatorState, "Emergency Mode") == 0) break;
 8000a60:	bf00      	nop
 8000a62:	e004      	b.n	8000a6e <ProcessUserInputTask+0x2a6>
                	if (strcmp(elevatorState, "Emergency Mode") == 0) break;
 8000a64:	bf00      	nop
 8000a66:	e002      	b.n	8000a6e <ProcessUserInputTask+0x2a6>
                	if (strcmp(elevatorState, "Emergency Mode") == 0) break;
 8000a68:	bf00      	nop
 8000a6a:	e000      	b.n	8000a6e <ProcessUserInputTask+0x2a6>
                	if (strcmp(elevatorState, "Emergency Mode") == 0) break;
 8000a6c:	bf00      	nop
                }
                // Clear the input buffer
                inputLen = 0;
 8000a6e:	2300      	movs	r3, #0
 8000a70:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
                inputBuffer[0] = '\0';
 8000a74:	2300      	movs	r3, #0
 8000a76:	723b      	strb	r3, [r7, #8]
            }
        }
        // Update the input window
		UpdateInputWindow(inputBuffer);
 8000a78:	f107 0308 	add.w	r3, r7, #8
 8000a7c:	4618      	mov	r0, r3
 8000a7e:	f7ff fc2f 	bl	80002e0 <UpdateInputWindow>
        if (HAL_UART_Receive(&huart2, &receivedChar, 1, HAL_MAX_DELAY) == HAL_OK)
 8000a82:	e6b1      	b.n	80007e8 <ProcessUserInputTask+0x20>
 8000a84:	20000330 	.word	0x20000330
 8000a88:	08004fd8 	.word	0x08004fd8
 8000a8c:	20000000 	.word	0x20000000
 8000a90:	08004ff0 	.word	0x08004ff0
 8000a94:	2000037c 	.word	0x2000037c
 8000a98:	08004ffc 	.word	0x08004ffc
 8000a9c:	08004fe8 	.word	0x08004fe8
 8000aa0:	20000014 	.word	0x20000014
 8000aa4:	08005008 	.word	0x08005008
 8000aa8:	08005018 	.word	0x08005018

08000aac <Error_Handler>:
    }
}

void Error_Handler(void)
{
 8000aac:	b480      	push	{r7}
 8000aae:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000ab0:	b672      	cpsid	i
}
 8000ab2:	bf00      	nop
    __disable_irq();
    while (1)
 8000ab4:	bf00      	nop
 8000ab6:	e7fd      	b.n	8000ab4 <Error_Handler+0x8>

08000ab8 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8000ab8:	b580      	push	{r7, lr}
 8000aba:	b084      	sub	sp, #16
 8000abc:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_AFIO_CLK_ENABLE();
 8000abe:	4b18      	ldr	r3, [pc, #96]	@ (8000b20 <HAL_MspInit+0x68>)
 8000ac0:	699b      	ldr	r3, [r3, #24]
 8000ac2:	4a17      	ldr	r2, [pc, #92]	@ (8000b20 <HAL_MspInit+0x68>)
 8000ac4:	f043 0301 	orr.w	r3, r3, #1
 8000ac8:	6193      	str	r3, [r2, #24]
 8000aca:	4b15      	ldr	r3, [pc, #84]	@ (8000b20 <HAL_MspInit+0x68>)
 8000acc:	699b      	ldr	r3, [r3, #24]
 8000ace:	f003 0301 	and.w	r3, r3, #1
 8000ad2:	60bb      	str	r3, [r7, #8]
 8000ad4:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_PWR_CLK_ENABLE();
 8000ad6:	4b12      	ldr	r3, [pc, #72]	@ (8000b20 <HAL_MspInit+0x68>)
 8000ad8:	69db      	ldr	r3, [r3, #28]
 8000ada:	4a11      	ldr	r2, [pc, #68]	@ (8000b20 <HAL_MspInit+0x68>)
 8000adc:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8000ae0:	61d3      	str	r3, [r2, #28]
 8000ae2:	4b0f      	ldr	r3, [pc, #60]	@ (8000b20 <HAL_MspInit+0x68>)
 8000ae4:	69db      	ldr	r3, [r3, #28]
 8000ae6:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8000aea:	607b      	str	r3, [r7, #4]
 8000aec:	687b      	ldr	r3, [r7, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8000aee:	2200      	movs	r2, #0
 8000af0:	210f      	movs	r1, #15
 8000af2:	f06f 0001 	mvn.w	r0, #1
 8000af6:	f000 faa6 	bl	8001046 <HAL_NVIC_SetPriority>

  /** NOJTAG: JTAG-DP Disabled and SW-DP Enabled
  */
  __HAL_AFIO_REMAP_SWJ_NOJTAG();
 8000afa:	4b0a      	ldr	r3, [pc, #40]	@ (8000b24 <HAL_MspInit+0x6c>)
 8000afc:	685b      	ldr	r3, [r3, #4]
 8000afe:	60fb      	str	r3, [r7, #12]
 8000b00:	68fb      	ldr	r3, [r7, #12]
 8000b02:	f023 63e0 	bic.w	r3, r3, #117440512	@ 0x7000000
 8000b06:	60fb      	str	r3, [r7, #12]
 8000b08:	68fb      	ldr	r3, [r7, #12]
 8000b0a:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8000b0e:	60fb      	str	r3, [r7, #12]
 8000b10:	4a04      	ldr	r2, [pc, #16]	@ (8000b24 <HAL_MspInit+0x6c>)
 8000b12:	68fb      	ldr	r3, [r7, #12]
 8000b14:	6053      	str	r3, [r2, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8000b16:	bf00      	nop
 8000b18:	3710      	adds	r7, #16
 8000b1a:	46bd      	mov	sp, r7
 8000b1c:	bd80      	pop	{r7, pc}
 8000b1e:	bf00      	nop
 8000b20:	40021000 	.word	0x40021000
 8000b24:	40010000 	.word	0x40010000

08000b28 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8000b28:	b480      	push	{r7}
 8000b2a:	b085      	sub	sp, #20
 8000b2c:	af00      	add	r7, sp, #0
 8000b2e:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM2)
 8000b30:	687b      	ldr	r3, [r7, #4]
 8000b32:	681b      	ldr	r3, [r3, #0]
 8000b34:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8000b38:	d10b      	bne.n	8000b52 <HAL_TIM_Base_MspInit+0x2a>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 8000b3a:	4b08      	ldr	r3, [pc, #32]	@ (8000b5c <HAL_TIM_Base_MspInit+0x34>)
 8000b3c:	69db      	ldr	r3, [r3, #28]
 8000b3e:	4a07      	ldr	r2, [pc, #28]	@ (8000b5c <HAL_TIM_Base_MspInit+0x34>)
 8000b40:	f043 0301 	orr.w	r3, r3, #1
 8000b44:	61d3      	str	r3, [r2, #28]
 8000b46:	4b05      	ldr	r3, [pc, #20]	@ (8000b5c <HAL_TIM_Base_MspInit+0x34>)
 8000b48:	69db      	ldr	r3, [r3, #28]
 8000b4a:	f003 0301 	and.w	r3, r3, #1
 8000b4e:	60fb      	str	r3, [r7, #12]
 8000b50:	68fb      	ldr	r3, [r7, #12]

  /* USER CODE END TIM2_MspInit 1 */

  }

}
 8000b52:	bf00      	nop
 8000b54:	3714      	adds	r7, #20
 8000b56:	46bd      	mov	sp, r7
 8000b58:	bc80      	pop	{r7}
 8000b5a:	4770      	bx	lr
 8000b5c:	40021000 	.word	0x40021000

08000b60 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8000b60:	b580      	push	{r7, lr}
 8000b62:	b088      	sub	sp, #32
 8000b64:	af00      	add	r7, sp, #0
 8000b66:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000b68:	f107 0310 	add.w	r3, r7, #16
 8000b6c:	2200      	movs	r2, #0
 8000b6e:	601a      	str	r2, [r3, #0]
 8000b70:	605a      	str	r2, [r3, #4]
 8000b72:	609a      	str	r2, [r3, #8]
 8000b74:	60da      	str	r2, [r3, #12]
  if(huart->Instance==USART2)
 8000b76:	687b      	ldr	r3, [r7, #4]
 8000b78:	681b      	ldr	r3, [r3, #0]
 8000b7a:	4a19      	ldr	r2, [pc, #100]	@ (8000be0 <HAL_UART_MspInit+0x80>)
 8000b7c:	4293      	cmp	r3, r2
 8000b7e:	d12b      	bne.n	8000bd8 <HAL_UART_MspInit+0x78>
  {
  /* USER CODE BEGIN USART2_MspInit 0 */

  /* USER CODE END USART2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART2_CLK_ENABLE();
 8000b80:	4b18      	ldr	r3, [pc, #96]	@ (8000be4 <HAL_UART_MspInit+0x84>)
 8000b82:	69db      	ldr	r3, [r3, #28]
 8000b84:	4a17      	ldr	r2, [pc, #92]	@ (8000be4 <HAL_UART_MspInit+0x84>)
 8000b86:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8000b8a:	61d3      	str	r3, [r2, #28]
 8000b8c:	4b15      	ldr	r3, [pc, #84]	@ (8000be4 <HAL_UART_MspInit+0x84>)
 8000b8e:	69db      	ldr	r3, [r3, #28]
 8000b90:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8000b94:	60fb      	str	r3, [r7, #12]
 8000b96:	68fb      	ldr	r3, [r7, #12]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8000b98:	4b12      	ldr	r3, [pc, #72]	@ (8000be4 <HAL_UART_MspInit+0x84>)
 8000b9a:	699b      	ldr	r3, [r3, #24]
 8000b9c:	4a11      	ldr	r2, [pc, #68]	@ (8000be4 <HAL_UART_MspInit+0x84>)
 8000b9e:	f043 0304 	orr.w	r3, r3, #4
 8000ba2:	6193      	str	r3, [r2, #24]
 8000ba4:	4b0f      	ldr	r3, [pc, #60]	@ (8000be4 <HAL_UART_MspInit+0x84>)
 8000ba6:	699b      	ldr	r3, [r3, #24]
 8000ba8:	f003 0304 	and.w	r3, r3, #4
 8000bac:	60bb      	str	r3, [r7, #8]
 8000bae:	68bb      	ldr	r3, [r7, #8]
    /**USART2 GPIO Configuration
    PA2     ------> USART2_TX
    PA3     ------> USART2_RX
    */
    GPIO_InitStruct.Pin = USART_TX_Pin|USART_RX_Pin;
 8000bb0:	230c      	movs	r3, #12
 8000bb2:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000bb4:	2302      	movs	r3, #2
 8000bb6:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000bb8:	2302      	movs	r3, #2
 8000bba:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000bbc:	f107 0310 	add.w	r3, r7, #16
 8000bc0:	4619      	mov	r1, r3
 8000bc2:	4809      	ldr	r0, [pc, #36]	@ (8000be8 <HAL_UART_MspInit+0x88>)
 8000bc4:	f000 fb28 	bl	8001218 <HAL_GPIO_Init>

    /* USART2 interrupt Init */
    HAL_NVIC_SetPriority(USART2_IRQn, 5, 0);
 8000bc8:	2200      	movs	r2, #0
 8000bca:	2105      	movs	r1, #5
 8000bcc:	2026      	movs	r0, #38	@ 0x26
 8000bce:	f000 fa3a 	bl	8001046 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART2_IRQn);
 8000bd2:	2026      	movs	r0, #38	@ 0x26
 8000bd4:	f000 fa53 	bl	800107e <HAL_NVIC_EnableIRQ>

  /* USER CODE END USART2_MspInit 1 */

  }

}
 8000bd8:	bf00      	nop
 8000bda:	3720      	adds	r7, #32
 8000bdc:	46bd      	mov	sp, r7
 8000bde:	bd80      	pop	{r7, pc}
 8000be0:	40004400 	.word	0x40004400
 8000be4:	40021000 	.word	0x40021000
 8000be8:	40010800 	.word	0x40010800

08000bec <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8000bec:	b480      	push	{r7}
 8000bee:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8000bf0:	bf00      	nop
 8000bf2:	e7fd      	b.n	8000bf0 <NMI_Handler+0x4>

08000bf4 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8000bf4:	b480      	push	{r7}
 8000bf6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8000bf8:	bf00      	nop
 8000bfa:	e7fd      	b.n	8000bf8 <HardFault_Handler+0x4>

08000bfc <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8000bfc:	b480      	push	{r7}
 8000bfe:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8000c00:	bf00      	nop
 8000c02:	e7fd      	b.n	8000c00 <MemManage_Handler+0x4>

08000c04 <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8000c04:	b480      	push	{r7}
 8000c06:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8000c08:	bf00      	nop
 8000c0a:	e7fd      	b.n	8000c08 <BusFault_Handler+0x4>

08000c0c <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8000c0c:	b480      	push	{r7}
 8000c0e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8000c10:	bf00      	nop
 8000c12:	e7fd      	b.n	8000c10 <UsageFault_Handler+0x4>

08000c14 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8000c14:	b480      	push	{r7}
 8000c16:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8000c18:	bf00      	nop
 8000c1a:	46bd      	mov	sp, r7
 8000c1c:	bc80      	pop	{r7}
 8000c1e:	4770      	bx	lr

08000c20 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8000c20:	b580      	push	{r7, lr}
 8000c22:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8000c24:	f000 f8f8 	bl	8000e18 <HAL_IncTick>
#if (INCLUDE_xTaskGetSchedulerState == 1 )
  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED)
 8000c28:	f002 fff4 	bl	8003c14 <xTaskGetSchedulerState>
 8000c2c:	4603      	mov	r3, r0
 8000c2e:	2b01      	cmp	r3, #1
 8000c30:	d001      	beq.n	8000c36 <SysTick_Handler+0x16>
  {
#endif /* INCLUDE_xTaskGetSchedulerState */
  xPortSysTickHandler();
 8000c32:	f003 f9e1 	bl	8003ff8 <xPortSysTickHandler>
  }
#endif /* INCLUDE_xTaskGetSchedulerState */
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8000c36:	bf00      	nop
 8000c38:	bd80      	pop	{r7, pc}
	...

08000c3c <EXTI0_IRQHandler>:
/**
  * @brief This function handles EXTI line0 interrupt.
  */

void EXTI0_IRQHandler(void)
{
 8000c3c:	b598      	push	{r3, r4, r7, lr}
 8000c3e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI0_IRQn 0 */
	// Check if the button is pressed
	if (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_0) == GPIO_PIN_RESET) {
 8000c40:	2101      	movs	r1, #1
 8000c42:	4817      	ldr	r0, [pc, #92]	@ (8000ca0 <EXTI0_IRQHandler+0x64>)
 8000c44:	f000 fc6c 	bl	8001520 <HAL_GPIO_ReadPin>
 8000c48:	4603      	mov	r3, r0
 8000c4a:	2b00      	cmp	r3, #0
 8000c4c:	d123      	bne.n	8000c96 <EXTI0_IRQHandler+0x5a>
		// Toggle emergency state
		isEmergency = !isEmergency;
 8000c4e:	4b15      	ldr	r3, [pc, #84]	@ (8000ca4 <EXTI0_IRQHandler+0x68>)
 8000c50:	781b      	ldrb	r3, [r3, #0]
 8000c52:	b2db      	uxtb	r3, r3
 8000c54:	2b00      	cmp	r3, #0
 8000c56:	bf0c      	ite	eq
 8000c58:	2301      	moveq	r3, #1
 8000c5a:	2300      	movne	r3, #0
 8000c5c:	b2db      	uxtb	r3, r3
 8000c5e:	461a      	mov	r2, r3
 8000c60:	4b10      	ldr	r3, [pc, #64]	@ (8000ca4 <EXTI0_IRQHandler+0x68>)
 8000c62:	701a      	strb	r2, [r3, #0]

		// Update elevator state
		extern char elevatorState[20];
		if (!isEmergency) {
 8000c64:	4b0f      	ldr	r3, [pc, #60]	@ (8000ca4 <EXTI0_IRQHandler+0x68>)
 8000c66:	781b      	ldrb	r3, [r3, #0]
 8000c68:	b2db      	uxtb	r3, r3
 8000c6a:	2b00      	cmp	r3, #0
 8000c6c:	d10b      	bne.n	8000c86 <EXTI0_IRQHandler+0x4a>
			strcpy(elevatorState, "Emergency Mode");
 8000c6e:	4a0e      	ldr	r2, [pc, #56]	@ (8000ca8 <EXTI0_IRQHandler+0x6c>)
 8000c70:	4b0e      	ldr	r3, [pc, #56]	@ (8000cac <EXTI0_IRQHandler+0x70>)
 8000c72:	4614      	mov	r4, r2
 8000c74:	cb07      	ldmia	r3!, {r0, r1, r2}
 8000c76:	6020      	str	r0, [r4, #0]
 8000c78:	6061      	str	r1, [r4, #4]
 8000c7a:	60a2      	str	r2, [r4, #8]
 8000c7c:	881a      	ldrh	r2, [r3, #0]
 8000c7e:	789b      	ldrb	r3, [r3, #2]
 8000c80:	81a2      	strh	r2, [r4, #12]
 8000c82:	73a3      	strb	r3, [r4, #14]
 8000c84:	e005      	b.n	8000c92 <EXTI0_IRQHandler+0x56>
		} else {
			strcpy(elevatorState, "Idle");
 8000c86:	4b08      	ldr	r3, [pc, #32]	@ (8000ca8 <EXTI0_IRQHandler+0x6c>)
 8000c88:	4a09      	ldr	r2, [pc, #36]	@ (8000cb0 <EXTI0_IRQHandler+0x74>)
 8000c8a:	6810      	ldr	r0, [r2, #0]
 8000c8c:	6018      	str	r0, [r3, #0]
 8000c8e:	7912      	ldrb	r2, [r2, #4]
 8000c90:	711a      	strb	r2, [r3, #4]
		}

		// UpdateStatusWindow to update the change
		extern void UpdateStatusWindow(void);
		UpdateStatusWindow();
 8000c92:	f7ff fa67 	bl	8000164 <UpdateStatusWindow>
	}

  /* USER CODE END EXTI0_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_0);
 8000c96:	2001      	movs	r0, #1
 8000c98:	f000 fc72 	bl	8001580 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI0_IRQn 1 */

  /* USER CODE END EXTI0_IRQn 1 */
}
 8000c9c:	bf00      	nop
 8000c9e:	bd98      	pop	{r3, r4, r7, pc}
 8000ca0:	40010c00 	.word	0x40010c00
 8000ca4:	20000015 	.word	0x20000015
 8000ca8:	20000000 	.word	0x20000000
 8000cac:	0800502c 	.word	0x0800502c
 8000cb0:	0800503c 	.word	0x0800503c

08000cb4 <USART2_IRQHandler>:

/**
  * @brief This function handles USART2 global interrupt.
  */
void USART2_IRQHandler(void)
{
 8000cb4:	b580      	push	{r7, lr}
 8000cb6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART2_IRQn 0 */

  /* USER CODE END USART2_IRQn 0 */
  HAL_UART_IRQHandler(&huart2);
 8000cb8:	4802      	ldr	r0, [pc, #8]	@ (8000cc4 <USART2_IRQHandler+0x10>)
 8000cba:	f001 fc7d 	bl	80025b8 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART2_IRQn 1 */

  /* USER CODE END USART2_IRQn 1 */
}
 8000cbe:	bf00      	nop
 8000cc0:	bd80      	pop	{r7, pc}
 8000cc2:	bf00      	nop
 8000cc4:	20000330 	.word	0x20000330

08000cc8 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000cc8:	b580      	push	{r7, lr}
 8000cca:	b086      	sub	sp, #24
 8000ccc:	af00      	add	r7, sp, #0
 8000cce:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000cd0:	4a14      	ldr	r2, [pc, #80]	@ (8000d24 <_sbrk+0x5c>)
 8000cd2:	4b15      	ldr	r3, [pc, #84]	@ (8000d28 <_sbrk+0x60>)
 8000cd4:	1ad3      	subs	r3, r2, r3
 8000cd6:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000cd8:	697b      	ldr	r3, [r7, #20]
 8000cda:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000cdc:	4b13      	ldr	r3, [pc, #76]	@ (8000d2c <_sbrk+0x64>)
 8000cde:	681b      	ldr	r3, [r3, #0]
 8000ce0:	2b00      	cmp	r3, #0
 8000ce2:	d102      	bne.n	8000cea <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000ce4:	4b11      	ldr	r3, [pc, #68]	@ (8000d2c <_sbrk+0x64>)
 8000ce6:	4a12      	ldr	r2, [pc, #72]	@ (8000d30 <_sbrk+0x68>)
 8000ce8:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000cea:	4b10      	ldr	r3, [pc, #64]	@ (8000d2c <_sbrk+0x64>)
 8000cec:	681a      	ldr	r2, [r3, #0]
 8000cee:	687b      	ldr	r3, [r7, #4]
 8000cf0:	4413      	add	r3, r2
 8000cf2:	693a      	ldr	r2, [r7, #16]
 8000cf4:	429a      	cmp	r2, r3
 8000cf6:	d207      	bcs.n	8000d08 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000cf8:	f003 fbea 	bl	80044d0 <__errno>
 8000cfc:	4603      	mov	r3, r0
 8000cfe:	220c      	movs	r2, #12
 8000d00:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000d02:	f04f 33ff 	mov.w	r3, #4294967295
 8000d06:	e009      	b.n	8000d1c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000d08:	4b08      	ldr	r3, [pc, #32]	@ (8000d2c <_sbrk+0x64>)
 8000d0a:	681b      	ldr	r3, [r3, #0]
 8000d0c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000d0e:	4b07      	ldr	r3, [pc, #28]	@ (8000d2c <_sbrk+0x64>)
 8000d10:	681a      	ldr	r2, [r3, #0]
 8000d12:	687b      	ldr	r3, [r7, #4]
 8000d14:	4413      	add	r3, r2
 8000d16:	4a05      	ldr	r2, [pc, #20]	@ (8000d2c <_sbrk+0x64>)
 8000d18:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000d1a:	68fb      	ldr	r3, [r7, #12]
}
 8000d1c:	4618      	mov	r0, r3
 8000d1e:	3718      	adds	r7, #24
 8000d20:	46bd      	mov	sp, r7
 8000d22:	bd80      	pop	{r7, pc}
 8000d24:	20005000 	.word	0x20005000
 8000d28:	00000400 	.word	0x00000400
 8000d2c:	20000380 	.word	0x20000380
 8000d30:	20001228 	.word	0x20001228

08000d34 <SystemInit>:
  * @note   This function should be used only after reset.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 8000d34:	b480      	push	{r7}
 8000d36:	af00      	add	r7, sp, #0

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8000d38:	bf00      	nop
 8000d3a:	46bd      	mov	sp, r7
 8000d3c:	bc80      	pop	{r7}
 8000d3e:	4770      	bx	lr

08000d40 <Reset_Handler>:
 8000d40:	f7ff fff8 	bl	8000d34 <SystemInit>
 8000d44:	480b      	ldr	r0, [pc, #44]	@ (8000d74 <LoopFillZerobss+0xe>)
 8000d46:	490c      	ldr	r1, [pc, #48]	@ (8000d78 <LoopFillZerobss+0x12>)
 8000d48:	4a0c      	ldr	r2, [pc, #48]	@ (8000d7c <LoopFillZerobss+0x16>)
 8000d4a:	2300      	movs	r3, #0
 8000d4c:	e002      	b.n	8000d54 <LoopCopyDataInit>

08000d4e <CopyDataInit>:
 8000d4e:	58d4      	ldr	r4, [r2, r3]
 8000d50:	50c4      	str	r4, [r0, r3]
 8000d52:	3304      	adds	r3, #4

08000d54 <LoopCopyDataInit>:
 8000d54:	18c4      	adds	r4, r0, r3
 8000d56:	428c      	cmp	r4, r1
 8000d58:	d3f9      	bcc.n	8000d4e <CopyDataInit>
 8000d5a:	4a09      	ldr	r2, [pc, #36]	@ (8000d80 <LoopFillZerobss+0x1a>)
 8000d5c:	4c09      	ldr	r4, [pc, #36]	@ (8000d84 <LoopFillZerobss+0x1e>)
 8000d5e:	2300      	movs	r3, #0
 8000d60:	e001      	b.n	8000d66 <LoopFillZerobss>

08000d62 <FillZerobss>:
 8000d62:	6013      	str	r3, [r2, #0]
 8000d64:	3204      	adds	r2, #4

08000d66 <LoopFillZerobss>:
 8000d66:	42a2      	cmp	r2, r4
 8000d68:	d3fb      	bcc.n	8000d62 <FillZerobss>
 8000d6a:	f003 fbb7 	bl	80044dc <__libc_init_array>
 8000d6e:	f7ff fb6d 	bl	800044c <main>
 8000d72:	4770      	bx	lr
 8000d74:	20000000 	.word	0x20000000
 8000d78:	20000078 	.word	0x20000078
 8000d7c:	080050bc 	.word	0x080050bc
 8000d80:	20000078 	.word	0x20000078
 8000d84:	20001224 	.word	0x20001224

08000d88 <ADC1_2_IRQHandler>:
 8000d88:	e7fe      	b.n	8000d88 <ADC1_2_IRQHandler>
	...

08000d8c <HAL_Init>:
 8000d8c:	b580      	push	{r7, lr}
 8000d8e:	af00      	add	r7, sp, #0
 8000d90:	4b08      	ldr	r3, [pc, #32]	@ (8000db4 <HAL_Init+0x28>)
 8000d92:	681b      	ldr	r3, [r3, #0]
 8000d94:	4a07      	ldr	r2, [pc, #28]	@ (8000db4 <HAL_Init+0x28>)
 8000d96:	f043 0310 	orr.w	r3, r3, #16
 8000d9a:	6013      	str	r3, [r2, #0]
 8000d9c:	2003      	movs	r0, #3
 8000d9e:	f000 f947 	bl	8001030 <HAL_NVIC_SetPriorityGrouping>
 8000da2:	200f      	movs	r0, #15
 8000da4:	f000 f808 	bl	8000db8 <HAL_InitTick>
 8000da8:	f7ff fe86 	bl	8000ab8 <HAL_MspInit>
 8000dac:	2300      	movs	r3, #0
 8000dae:	4618      	mov	r0, r3
 8000db0:	bd80      	pop	{r7, pc}
 8000db2:	bf00      	nop
 8000db4:	40022000 	.word	0x40022000

08000db8 <HAL_InitTick>:
 8000db8:	b580      	push	{r7, lr}
 8000dba:	b082      	sub	sp, #8
 8000dbc:	af00      	add	r7, sp, #0
 8000dbe:	6078      	str	r0, [r7, #4]
 8000dc0:	4b12      	ldr	r3, [pc, #72]	@ (8000e0c <HAL_InitTick+0x54>)
 8000dc2:	681a      	ldr	r2, [r3, #0]
 8000dc4:	4b12      	ldr	r3, [pc, #72]	@ (8000e10 <HAL_InitTick+0x58>)
 8000dc6:	781b      	ldrb	r3, [r3, #0]
 8000dc8:	4619      	mov	r1, r3
 8000dca:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8000dce:	fbb3 f3f1 	udiv	r3, r3, r1
 8000dd2:	fbb2 f3f3 	udiv	r3, r2, r3
 8000dd6:	4618      	mov	r0, r3
 8000dd8:	f000 f95f 	bl	800109a <HAL_SYSTICK_Config>
 8000ddc:	4603      	mov	r3, r0
 8000dde:	2b00      	cmp	r3, #0
 8000de0:	d001      	beq.n	8000de6 <HAL_InitTick+0x2e>
 8000de2:	2301      	movs	r3, #1
 8000de4:	e00e      	b.n	8000e04 <HAL_InitTick+0x4c>
 8000de6:	687b      	ldr	r3, [r7, #4]
 8000de8:	2b0f      	cmp	r3, #15
 8000dea:	d80a      	bhi.n	8000e02 <HAL_InitTick+0x4a>
 8000dec:	2200      	movs	r2, #0
 8000dee:	6879      	ldr	r1, [r7, #4]
 8000df0:	f04f 30ff 	mov.w	r0, #4294967295
 8000df4:	f000 f927 	bl	8001046 <HAL_NVIC_SetPriority>
 8000df8:	4a06      	ldr	r2, [pc, #24]	@ (8000e14 <HAL_InitTick+0x5c>)
 8000dfa:	687b      	ldr	r3, [r7, #4]
 8000dfc:	6013      	str	r3, [r2, #0]
 8000dfe:	2300      	movs	r3, #0
 8000e00:	e000      	b.n	8000e04 <HAL_InitTick+0x4c>
 8000e02:	2301      	movs	r3, #1
 8000e04:	4618      	mov	r0, r3
 8000e06:	3708      	adds	r7, #8
 8000e08:	46bd      	mov	sp, r7
 8000e0a:	bd80      	pop	{r7, pc}
 8000e0c:	20000018 	.word	0x20000018
 8000e10:	20000020 	.word	0x20000020
 8000e14:	2000001c 	.word	0x2000001c

08000e18 <HAL_IncTick>:
 8000e18:	b480      	push	{r7}
 8000e1a:	af00      	add	r7, sp, #0
 8000e1c:	4b05      	ldr	r3, [pc, #20]	@ (8000e34 <HAL_IncTick+0x1c>)
 8000e1e:	781b      	ldrb	r3, [r3, #0]
 8000e20:	461a      	mov	r2, r3
 8000e22:	4b05      	ldr	r3, [pc, #20]	@ (8000e38 <HAL_IncTick+0x20>)
 8000e24:	681b      	ldr	r3, [r3, #0]
 8000e26:	4413      	add	r3, r2
 8000e28:	4a03      	ldr	r2, [pc, #12]	@ (8000e38 <HAL_IncTick+0x20>)
 8000e2a:	6013      	str	r3, [r2, #0]
 8000e2c:	bf00      	nop
 8000e2e:	46bd      	mov	sp, r7
 8000e30:	bc80      	pop	{r7}
 8000e32:	4770      	bx	lr
 8000e34:	20000020 	.word	0x20000020
 8000e38:	20000384 	.word	0x20000384

08000e3c <HAL_GetTick>:
 8000e3c:	b480      	push	{r7}
 8000e3e:	af00      	add	r7, sp, #0
 8000e40:	4b02      	ldr	r3, [pc, #8]	@ (8000e4c <HAL_GetTick+0x10>)
 8000e42:	681b      	ldr	r3, [r3, #0]
 8000e44:	4618      	mov	r0, r3
 8000e46:	46bd      	mov	sp, r7
 8000e48:	bc80      	pop	{r7}
 8000e4a:	4770      	bx	lr
 8000e4c:	20000384 	.word	0x20000384

08000e50 <HAL_Delay>:
 8000e50:	b580      	push	{r7, lr}
 8000e52:	b084      	sub	sp, #16
 8000e54:	af00      	add	r7, sp, #0
 8000e56:	6078      	str	r0, [r7, #4]
 8000e58:	f7ff fff0 	bl	8000e3c <HAL_GetTick>
 8000e5c:	60b8      	str	r0, [r7, #8]
 8000e5e:	687b      	ldr	r3, [r7, #4]
 8000e60:	60fb      	str	r3, [r7, #12]
 8000e62:	68fb      	ldr	r3, [r7, #12]
 8000e64:	f1b3 3fff 	cmp.w	r3, #4294967295
 8000e68:	d005      	beq.n	8000e76 <HAL_Delay+0x26>
 8000e6a:	4b0a      	ldr	r3, [pc, #40]	@ (8000e94 <HAL_Delay+0x44>)
 8000e6c:	781b      	ldrb	r3, [r3, #0]
 8000e6e:	461a      	mov	r2, r3
 8000e70:	68fb      	ldr	r3, [r7, #12]
 8000e72:	4413      	add	r3, r2
 8000e74:	60fb      	str	r3, [r7, #12]
 8000e76:	bf00      	nop
 8000e78:	f7ff ffe0 	bl	8000e3c <HAL_GetTick>
 8000e7c:	4602      	mov	r2, r0
 8000e7e:	68bb      	ldr	r3, [r7, #8]
 8000e80:	1ad3      	subs	r3, r2, r3
 8000e82:	68fa      	ldr	r2, [r7, #12]
 8000e84:	429a      	cmp	r2, r3
 8000e86:	d8f7      	bhi.n	8000e78 <HAL_Delay+0x28>
 8000e88:	bf00      	nop
 8000e8a:	bf00      	nop
 8000e8c:	3710      	adds	r7, #16
 8000e8e:	46bd      	mov	sp, r7
 8000e90:	bd80      	pop	{r7, pc}
 8000e92:	bf00      	nop
 8000e94:	20000020 	.word	0x20000020

08000e98 <__NVIC_SetPriorityGrouping>:
 8000e98:	b480      	push	{r7}
 8000e9a:	b085      	sub	sp, #20
 8000e9c:	af00      	add	r7, sp, #0
 8000e9e:	6078      	str	r0, [r7, #4]
 8000ea0:	687b      	ldr	r3, [r7, #4]
 8000ea2:	f003 0307 	and.w	r3, r3, #7
 8000ea6:	60fb      	str	r3, [r7, #12]
 8000ea8:	4b0c      	ldr	r3, [pc, #48]	@ (8000edc <__NVIC_SetPriorityGrouping+0x44>)
 8000eaa:	68db      	ldr	r3, [r3, #12]
 8000eac:	60bb      	str	r3, [r7, #8]
 8000eae:	68ba      	ldr	r2, [r7, #8]
 8000eb0:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8000eb4:	4013      	ands	r3, r2
 8000eb6:	60bb      	str	r3, [r7, #8]
 8000eb8:	68fb      	ldr	r3, [r7, #12]
 8000eba:	021a      	lsls	r2, r3, #8
 8000ebc:	68bb      	ldr	r3, [r7, #8]
 8000ebe:	4313      	orrs	r3, r2
 8000ec0:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8000ec4:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8000ec8:	60bb      	str	r3, [r7, #8]
 8000eca:	4a04      	ldr	r2, [pc, #16]	@ (8000edc <__NVIC_SetPriorityGrouping+0x44>)
 8000ecc:	68bb      	ldr	r3, [r7, #8]
 8000ece:	60d3      	str	r3, [r2, #12]
 8000ed0:	bf00      	nop
 8000ed2:	3714      	adds	r7, #20
 8000ed4:	46bd      	mov	sp, r7
 8000ed6:	bc80      	pop	{r7}
 8000ed8:	4770      	bx	lr
 8000eda:	bf00      	nop
 8000edc:	e000ed00 	.word	0xe000ed00

08000ee0 <__NVIC_GetPriorityGrouping>:
 8000ee0:	b480      	push	{r7}
 8000ee2:	af00      	add	r7, sp, #0
 8000ee4:	4b04      	ldr	r3, [pc, #16]	@ (8000ef8 <__NVIC_GetPriorityGrouping+0x18>)
 8000ee6:	68db      	ldr	r3, [r3, #12]
 8000ee8:	0a1b      	lsrs	r3, r3, #8
 8000eea:	f003 0307 	and.w	r3, r3, #7
 8000eee:	4618      	mov	r0, r3
 8000ef0:	46bd      	mov	sp, r7
 8000ef2:	bc80      	pop	{r7}
 8000ef4:	4770      	bx	lr
 8000ef6:	bf00      	nop
 8000ef8:	e000ed00 	.word	0xe000ed00

08000efc <__NVIC_EnableIRQ>:
 8000efc:	b480      	push	{r7}
 8000efe:	b083      	sub	sp, #12
 8000f00:	af00      	add	r7, sp, #0
 8000f02:	4603      	mov	r3, r0
 8000f04:	71fb      	strb	r3, [r7, #7]
 8000f06:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000f0a:	2b00      	cmp	r3, #0
 8000f0c:	db0b      	blt.n	8000f26 <__NVIC_EnableIRQ+0x2a>
 8000f0e:	79fb      	ldrb	r3, [r7, #7]
 8000f10:	f003 021f 	and.w	r2, r3, #31
 8000f14:	4906      	ldr	r1, [pc, #24]	@ (8000f30 <__NVIC_EnableIRQ+0x34>)
 8000f16:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000f1a:	095b      	lsrs	r3, r3, #5
 8000f1c:	2001      	movs	r0, #1
 8000f1e:	fa00 f202 	lsl.w	r2, r0, r2
 8000f22:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8000f26:	bf00      	nop
 8000f28:	370c      	adds	r7, #12
 8000f2a:	46bd      	mov	sp, r7
 8000f2c:	bc80      	pop	{r7}
 8000f2e:	4770      	bx	lr
 8000f30:	e000e100 	.word	0xe000e100

08000f34 <__NVIC_SetPriority>:
 8000f34:	b480      	push	{r7}
 8000f36:	b083      	sub	sp, #12
 8000f38:	af00      	add	r7, sp, #0
 8000f3a:	4603      	mov	r3, r0
 8000f3c:	6039      	str	r1, [r7, #0]
 8000f3e:	71fb      	strb	r3, [r7, #7]
 8000f40:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000f44:	2b00      	cmp	r3, #0
 8000f46:	db0a      	blt.n	8000f5e <__NVIC_SetPriority+0x2a>
 8000f48:	683b      	ldr	r3, [r7, #0]
 8000f4a:	b2da      	uxtb	r2, r3
 8000f4c:	490c      	ldr	r1, [pc, #48]	@ (8000f80 <__NVIC_SetPriority+0x4c>)
 8000f4e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000f52:	0112      	lsls	r2, r2, #4
 8000f54:	b2d2      	uxtb	r2, r2
 8000f56:	440b      	add	r3, r1
 8000f58:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8000f5c:	e00a      	b.n	8000f74 <__NVIC_SetPriority+0x40>
 8000f5e:	683b      	ldr	r3, [r7, #0]
 8000f60:	b2da      	uxtb	r2, r3
 8000f62:	4908      	ldr	r1, [pc, #32]	@ (8000f84 <__NVIC_SetPriority+0x50>)
 8000f64:	79fb      	ldrb	r3, [r7, #7]
 8000f66:	f003 030f 	and.w	r3, r3, #15
 8000f6a:	3b04      	subs	r3, #4
 8000f6c:	0112      	lsls	r2, r2, #4
 8000f6e:	b2d2      	uxtb	r2, r2
 8000f70:	440b      	add	r3, r1
 8000f72:	761a      	strb	r2, [r3, #24]
 8000f74:	bf00      	nop
 8000f76:	370c      	adds	r7, #12
 8000f78:	46bd      	mov	sp, r7
 8000f7a:	bc80      	pop	{r7}
 8000f7c:	4770      	bx	lr
 8000f7e:	bf00      	nop
 8000f80:	e000e100 	.word	0xe000e100
 8000f84:	e000ed00 	.word	0xe000ed00

08000f88 <NVIC_EncodePriority>:
 8000f88:	b480      	push	{r7}
 8000f8a:	b089      	sub	sp, #36	@ 0x24
 8000f8c:	af00      	add	r7, sp, #0
 8000f8e:	60f8      	str	r0, [r7, #12]
 8000f90:	60b9      	str	r1, [r7, #8]
 8000f92:	607a      	str	r2, [r7, #4]
 8000f94:	68fb      	ldr	r3, [r7, #12]
 8000f96:	f003 0307 	and.w	r3, r3, #7
 8000f9a:	61fb      	str	r3, [r7, #28]
 8000f9c:	69fb      	ldr	r3, [r7, #28]
 8000f9e:	f1c3 0307 	rsb	r3, r3, #7
 8000fa2:	2b04      	cmp	r3, #4
 8000fa4:	bf28      	it	cs
 8000fa6:	2304      	movcs	r3, #4
 8000fa8:	61bb      	str	r3, [r7, #24]
 8000faa:	69fb      	ldr	r3, [r7, #28]
 8000fac:	3304      	adds	r3, #4
 8000fae:	2b06      	cmp	r3, #6
 8000fb0:	d902      	bls.n	8000fb8 <NVIC_EncodePriority+0x30>
 8000fb2:	69fb      	ldr	r3, [r7, #28]
 8000fb4:	3b03      	subs	r3, #3
 8000fb6:	e000      	b.n	8000fba <NVIC_EncodePriority+0x32>
 8000fb8:	2300      	movs	r3, #0
 8000fba:	617b      	str	r3, [r7, #20]
 8000fbc:	f04f 32ff 	mov.w	r2, #4294967295
 8000fc0:	69bb      	ldr	r3, [r7, #24]
 8000fc2:	fa02 f303 	lsl.w	r3, r2, r3
 8000fc6:	43da      	mvns	r2, r3
 8000fc8:	68bb      	ldr	r3, [r7, #8]
 8000fca:	401a      	ands	r2, r3
 8000fcc:	697b      	ldr	r3, [r7, #20]
 8000fce:	409a      	lsls	r2, r3
 8000fd0:	f04f 31ff 	mov.w	r1, #4294967295
 8000fd4:	697b      	ldr	r3, [r7, #20]
 8000fd6:	fa01 f303 	lsl.w	r3, r1, r3
 8000fda:	43d9      	mvns	r1, r3
 8000fdc:	687b      	ldr	r3, [r7, #4]
 8000fde:	400b      	ands	r3, r1
 8000fe0:	4313      	orrs	r3, r2
 8000fe2:	4618      	mov	r0, r3
 8000fe4:	3724      	adds	r7, #36	@ 0x24
 8000fe6:	46bd      	mov	sp, r7
 8000fe8:	bc80      	pop	{r7}
 8000fea:	4770      	bx	lr

08000fec <SysTick_Config>:
 8000fec:	b580      	push	{r7, lr}
 8000fee:	b082      	sub	sp, #8
 8000ff0:	af00      	add	r7, sp, #0
 8000ff2:	6078      	str	r0, [r7, #4]
 8000ff4:	687b      	ldr	r3, [r7, #4]
 8000ff6:	3b01      	subs	r3, #1
 8000ff8:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8000ffc:	d301      	bcc.n	8001002 <SysTick_Config+0x16>
 8000ffe:	2301      	movs	r3, #1
 8001000:	e00f      	b.n	8001022 <SysTick_Config+0x36>
 8001002:	4a0a      	ldr	r2, [pc, #40]	@ (800102c <SysTick_Config+0x40>)
 8001004:	687b      	ldr	r3, [r7, #4]
 8001006:	3b01      	subs	r3, #1
 8001008:	6053      	str	r3, [r2, #4]
 800100a:	210f      	movs	r1, #15
 800100c:	f04f 30ff 	mov.w	r0, #4294967295
 8001010:	f7ff ff90 	bl	8000f34 <__NVIC_SetPriority>
 8001014:	4b05      	ldr	r3, [pc, #20]	@ (800102c <SysTick_Config+0x40>)
 8001016:	2200      	movs	r2, #0
 8001018:	609a      	str	r2, [r3, #8]
 800101a:	4b04      	ldr	r3, [pc, #16]	@ (800102c <SysTick_Config+0x40>)
 800101c:	2207      	movs	r2, #7
 800101e:	601a      	str	r2, [r3, #0]
 8001020:	2300      	movs	r3, #0
 8001022:	4618      	mov	r0, r3
 8001024:	3708      	adds	r7, #8
 8001026:	46bd      	mov	sp, r7
 8001028:	bd80      	pop	{r7, pc}
 800102a:	bf00      	nop
 800102c:	e000e010 	.word	0xe000e010

08001030 <HAL_NVIC_SetPriorityGrouping>:
 8001030:	b580      	push	{r7, lr}
 8001032:	b082      	sub	sp, #8
 8001034:	af00      	add	r7, sp, #0
 8001036:	6078      	str	r0, [r7, #4]
 8001038:	6878      	ldr	r0, [r7, #4]
 800103a:	f7ff ff2d 	bl	8000e98 <__NVIC_SetPriorityGrouping>
 800103e:	bf00      	nop
 8001040:	3708      	adds	r7, #8
 8001042:	46bd      	mov	sp, r7
 8001044:	bd80      	pop	{r7, pc}

08001046 <HAL_NVIC_SetPriority>:
 8001046:	b580      	push	{r7, lr}
 8001048:	b086      	sub	sp, #24
 800104a:	af00      	add	r7, sp, #0
 800104c:	4603      	mov	r3, r0
 800104e:	60b9      	str	r1, [r7, #8]
 8001050:	607a      	str	r2, [r7, #4]
 8001052:	73fb      	strb	r3, [r7, #15]
 8001054:	2300      	movs	r3, #0
 8001056:	617b      	str	r3, [r7, #20]
 8001058:	f7ff ff42 	bl	8000ee0 <__NVIC_GetPriorityGrouping>
 800105c:	6178      	str	r0, [r7, #20]
 800105e:	687a      	ldr	r2, [r7, #4]
 8001060:	68b9      	ldr	r1, [r7, #8]
 8001062:	6978      	ldr	r0, [r7, #20]
 8001064:	f7ff ff90 	bl	8000f88 <NVIC_EncodePriority>
 8001068:	4602      	mov	r2, r0
 800106a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800106e:	4611      	mov	r1, r2
 8001070:	4618      	mov	r0, r3
 8001072:	f7ff ff5f 	bl	8000f34 <__NVIC_SetPriority>
 8001076:	bf00      	nop
 8001078:	3718      	adds	r7, #24
 800107a:	46bd      	mov	sp, r7
 800107c:	bd80      	pop	{r7, pc}

0800107e <HAL_NVIC_EnableIRQ>:
 800107e:	b580      	push	{r7, lr}
 8001080:	b082      	sub	sp, #8
 8001082:	af00      	add	r7, sp, #0
 8001084:	4603      	mov	r3, r0
 8001086:	71fb      	strb	r3, [r7, #7]
 8001088:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800108c:	4618      	mov	r0, r3
 800108e:	f7ff ff35 	bl	8000efc <__NVIC_EnableIRQ>
 8001092:	bf00      	nop
 8001094:	3708      	adds	r7, #8
 8001096:	46bd      	mov	sp, r7
 8001098:	bd80      	pop	{r7, pc}

0800109a <HAL_SYSTICK_Config>:
 800109a:	b580      	push	{r7, lr}
 800109c:	b082      	sub	sp, #8
 800109e:	af00      	add	r7, sp, #0
 80010a0:	6078      	str	r0, [r7, #4]
 80010a2:	6878      	ldr	r0, [r7, #4]
 80010a4:	f7ff ffa2 	bl	8000fec <SysTick_Config>
 80010a8:	4603      	mov	r3, r0
 80010aa:	4618      	mov	r0, r3
 80010ac:	3708      	adds	r7, #8
 80010ae:	46bd      	mov	sp, r7
 80010b0:	bd80      	pop	{r7, pc}

080010b2 <HAL_DMA_Abort>:
 80010b2:	b480      	push	{r7}
 80010b4:	b085      	sub	sp, #20
 80010b6:	af00      	add	r7, sp, #0
 80010b8:	6078      	str	r0, [r7, #4]
 80010ba:	2300      	movs	r3, #0
 80010bc:	73fb      	strb	r3, [r7, #15]
 80010be:	687b      	ldr	r3, [r7, #4]
 80010c0:	f893 3021 	ldrb.w	r3, [r3, #33]	@ 0x21
 80010c4:	b2db      	uxtb	r3, r3
 80010c6:	2b02      	cmp	r3, #2
 80010c8:	d008      	beq.n	80010dc <HAL_DMA_Abort+0x2a>
 80010ca:	687b      	ldr	r3, [r7, #4]
 80010cc:	2204      	movs	r2, #4
 80010ce:	639a      	str	r2, [r3, #56]	@ 0x38
 80010d0:	687b      	ldr	r3, [r7, #4]
 80010d2:	2200      	movs	r2, #0
 80010d4:	f883 2020 	strb.w	r2, [r3, #32]
 80010d8:	2301      	movs	r3, #1
 80010da:	e020      	b.n	800111e <HAL_DMA_Abort+0x6c>
 80010dc:	687b      	ldr	r3, [r7, #4]
 80010de:	681b      	ldr	r3, [r3, #0]
 80010e0:	681a      	ldr	r2, [r3, #0]
 80010e2:	687b      	ldr	r3, [r7, #4]
 80010e4:	681b      	ldr	r3, [r3, #0]
 80010e6:	f022 020e 	bic.w	r2, r2, #14
 80010ea:	601a      	str	r2, [r3, #0]
 80010ec:	687b      	ldr	r3, [r7, #4]
 80010ee:	681b      	ldr	r3, [r3, #0]
 80010f0:	681a      	ldr	r2, [r3, #0]
 80010f2:	687b      	ldr	r3, [r7, #4]
 80010f4:	681b      	ldr	r3, [r3, #0]
 80010f6:	f022 0201 	bic.w	r2, r2, #1
 80010fa:	601a      	str	r2, [r3, #0]
 80010fc:	687b      	ldr	r3, [r7, #4]
 80010fe:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8001100:	687b      	ldr	r3, [r7, #4]
 8001102:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8001104:	2101      	movs	r1, #1
 8001106:	fa01 f202 	lsl.w	r2, r1, r2
 800110a:	605a      	str	r2, [r3, #4]
 800110c:	687b      	ldr	r3, [r7, #4]
 800110e:	2201      	movs	r2, #1
 8001110:	f883 2021 	strb.w	r2, [r3, #33]	@ 0x21
 8001114:	687b      	ldr	r3, [r7, #4]
 8001116:	2200      	movs	r2, #0
 8001118:	f883 2020 	strb.w	r2, [r3, #32]
 800111c:	7bfb      	ldrb	r3, [r7, #15]
 800111e:	4618      	mov	r0, r3
 8001120:	3714      	adds	r7, #20
 8001122:	46bd      	mov	sp, r7
 8001124:	bc80      	pop	{r7}
 8001126:	4770      	bx	lr

08001128 <HAL_DMA_Abort_IT>:
 8001128:	b580      	push	{r7, lr}
 800112a:	b084      	sub	sp, #16
 800112c:	af00      	add	r7, sp, #0
 800112e:	6078      	str	r0, [r7, #4]
 8001130:	2300      	movs	r3, #0
 8001132:	73fb      	strb	r3, [r7, #15]
 8001134:	687b      	ldr	r3, [r7, #4]
 8001136:	f893 3021 	ldrb.w	r3, [r3, #33]	@ 0x21
 800113a:	b2db      	uxtb	r3, r3
 800113c:	2b02      	cmp	r3, #2
 800113e:	d005      	beq.n	800114c <HAL_DMA_Abort_IT+0x24>
 8001140:	687b      	ldr	r3, [r7, #4]
 8001142:	2204      	movs	r2, #4
 8001144:	639a      	str	r2, [r3, #56]	@ 0x38
 8001146:	2301      	movs	r3, #1
 8001148:	73fb      	strb	r3, [r7, #15]
 800114a:	e051      	b.n	80011f0 <HAL_DMA_Abort_IT+0xc8>
 800114c:	687b      	ldr	r3, [r7, #4]
 800114e:	681b      	ldr	r3, [r3, #0]
 8001150:	681a      	ldr	r2, [r3, #0]
 8001152:	687b      	ldr	r3, [r7, #4]
 8001154:	681b      	ldr	r3, [r3, #0]
 8001156:	f022 020e 	bic.w	r2, r2, #14
 800115a:	601a      	str	r2, [r3, #0]
 800115c:	687b      	ldr	r3, [r7, #4]
 800115e:	681b      	ldr	r3, [r3, #0]
 8001160:	681a      	ldr	r2, [r3, #0]
 8001162:	687b      	ldr	r3, [r7, #4]
 8001164:	681b      	ldr	r3, [r3, #0]
 8001166:	f022 0201 	bic.w	r2, r2, #1
 800116a:	601a      	str	r2, [r3, #0]
 800116c:	687b      	ldr	r3, [r7, #4]
 800116e:	681b      	ldr	r3, [r3, #0]
 8001170:	4a22      	ldr	r2, [pc, #136]	@ (80011fc <HAL_DMA_Abort_IT+0xd4>)
 8001172:	4293      	cmp	r3, r2
 8001174:	d029      	beq.n	80011ca <HAL_DMA_Abort_IT+0xa2>
 8001176:	687b      	ldr	r3, [r7, #4]
 8001178:	681b      	ldr	r3, [r3, #0]
 800117a:	4a21      	ldr	r2, [pc, #132]	@ (8001200 <HAL_DMA_Abort_IT+0xd8>)
 800117c:	4293      	cmp	r3, r2
 800117e:	d022      	beq.n	80011c6 <HAL_DMA_Abort_IT+0x9e>
 8001180:	687b      	ldr	r3, [r7, #4]
 8001182:	681b      	ldr	r3, [r3, #0]
 8001184:	4a1f      	ldr	r2, [pc, #124]	@ (8001204 <HAL_DMA_Abort_IT+0xdc>)
 8001186:	4293      	cmp	r3, r2
 8001188:	d01a      	beq.n	80011c0 <HAL_DMA_Abort_IT+0x98>
 800118a:	687b      	ldr	r3, [r7, #4]
 800118c:	681b      	ldr	r3, [r3, #0]
 800118e:	4a1e      	ldr	r2, [pc, #120]	@ (8001208 <HAL_DMA_Abort_IT+0xe0>)
 8001190:	4293      	cmp	r3, r2
 8001192:	d012      	beq.n	80011ba <HAL_DMA_Abort_IT+0x92>
 8001194:	687b      	ldr	r3, [r7, #4]
 8001196:	681b      	ldr	r3, [r3, #0]
 8001198:	4a1c      	ldr	r2, [pc, #112]	@ (800120c <HAL_DMA_Abort_IT+0xe4>)
 800119a:	4293      	cmp	r3, r2
 800119c:	d00a      	beq.n	80011b4 <HAL_DMA_Abort_IT+0x8c>
 800119e:	687b      	ldr	r3, [r7, #4]
 80011a0:	681b      	ldr	r3, [r3, #0]
 80011a2:	4a1b      	ldr	r2, [pc, #108]	@ (8001210 <HAL_DMA_Abort_IT+0xe8>)
 80011a4:	4293      	cmp	r3, r2
 80011a6:	d102      	bne.n	80011ae <HAL_DMA_Abort_IT+0x86>
 80011a8:	f44f 1380 	mov.w	r3, #1048576	@ 0x100000
 80011ac:	e00e      	b.n	80011cc <HAL_DMA_Abort_IT+0xa4>
 80011ae:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 80011b2:	e00b      	b.n	80011cc <HAL_DMA_Abort_IT+0xa4>
 80011b4:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 80011b8:	e008      	b.n	80011cc <HAL_DMA_Abort_IT+0xa4>
 80011ba:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80011be:	e005      	b.n	80011cc <HAL_DMA_Abort_IT+0xa4>
 80011c0:	f44f 7380 	mov.w	r3, #256	@ 0x100
 80011c4:	e002      	b.n	80011cc <HAL_DMA_Abort_IT+0xa4>
 80011c6:	2310      	movs	r3, #16
 80011c8:	e000      	b.n	80011cc <HAL_DMA_Abort_IT+0xa4>
 80011ca:	2301      	movs	r3, #1
 80011cc:	4a11      	ldr	r2, [pc, #68]	@ (8001214 <HAL_DMA_Abort_IT+0xec>)
 80011ce:	6053      	str	r3, [r2, #4]
 80011d0:	687b      	ldr	r3, [r7, #4]
 80011d2:	2201      	movs	r2, #1
 80011d4:	f883 2021 	strb.w	r2, [r3, #33]	@ 0x21
 80011d8:	687b      	ldr	r3, [r7, #4]
 80011da:	2200      	movs	r2, #0
 80011dc:	f883 2020 	strb.w	r2, [r3, #32]
 80011e0:	687b      	ldr	r3, [r7, #4]
 80011e2:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80011e4:	2b00      	cmp	r3, #0
 80011e6:	d003      	beq.n	80011f0 <HAL_DMA_Abort_IT+0xc8>
 80011e8:	687b      	ldr	r3, [r7, #4]
 80011ea:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80011ec:	6878      	ldr	r0, [r7, #4]
 80011ee:	4798      	blx	r3
 80011f0:	7bfb      	ldrb	r3, [r7, #15]
 80011f2:	4618      	mov	r0, r3
 80011f4:	3710      	adds	r7, #16
 80011f6:	46bd      	mov	sp, r7
 80011f8:	bd80      	pop	{r7, pc}
 80011fa:	bf00      	nop
 80011fc:	40020008 	.word	0x40020008
 8001200:	4002001c 	.word	0x4002001c
 8001204:	40020030 	.word	0x40020030
 8001208:	40020044 	.word	0x40020044
 800120c:	40020058 	.word	0x40020058
 8001210:	4002006c 	.word	0x4002006c
 8001214:	40020000 	.word	0x40020000

08001218 <HAL_GPIO_Init>:
 8001218:	b480      	push	{r7}
 800121a:	b08b      	sub	sp, #44	@ 0x2c
 800121c:	af00      	add	r7, sp, #0
 800121e:	6078      	str	r0, [r7, #4]
 8001220:	6039      	str	r1, [r7, #0]
 8001222:	2300      	movs	r3, #0
 8001224:	627b      	str	r3, [r7, #36]	@ 0x24
 8001226:	2300      	movs	r3, #0
 8001228:	623b      	str	r3, [r7, #32]
 800122a:	e169      	b.n	8001500 <HAL_GPIO_Init+0x2e8>
 800122c:	2201      	movs	r2, #1
 800122e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001230:	fa02 f303 	lsl.w	r3, r2, r3
 8001234:	61fb      	str	r3, [r7, #28]
 8001236:	683b      	ldr	r3, [r7, #0]
 8001238:	681b      	ldr	r3, [r3, #0]
 800123a:	69fa      	ldr	r2, [r7, #28]
 800123c:	4013      	ands	r3, r2
 800123e:	61bb      	str	r3, [r7, #24]
 8001240:	69ba      	ldr	r2, [r7, #24]
 8001242:	69fb      	ldr	r3, [r7, #28]
 8001244:	429a      	cmp	r2, r3
 8001246:	f040 8158 	bne.w	80014fa <HAL_GPIO_Init+0x2e2>
 800124a:	683b      	ldr	r3, [r7, #0]
 800124c:	685b      	ldr	r3, [r3, #4]
 800124e:	4a9a      	ldr	r2, [pc, #616]	@ (80014b8 <HAL_GPIO_Init+0x2a0>)
 8001250:	4293      	cmp	r3, r2
 8001252:	d05e      	beq.n	8001312 <HAL_GPIO_Init+0xfa>
 8001254:	4a98      	ldr	r2, [pc, #608]	@ (80014b8 <HAL_GPIO_Init+0x2a0>)
 8001256:	4293      	cmp	r3, r2
 8001258:	d875      	bhi.n	8001346 <HAL_GPIO_Init+0x12e>
 800125a:	4a98      	ldr	r2, [pc, #608]	@ (80014bc <HAL_GPIO_Init+0x2a4>)
 800125c:	4293      	cmp	r3, r2
 800125e:	d058      	beq.n	8001312 <HAL_GPIO_Init+0xfa>
 8001260:	4a96      	ldr	r2, [pc, #600]	@ (80014bc <HAL_GPIO_Init+0x2a4>)
 8001262:	4293      	cmp	r3, r2
 8001264:	d86f      	bhi.n	8001346 <HAL_GPIO_Init+0x12e>
 8001266:	4a96      	ldr	r2, [pc, #600]	@ (80014c0 <HAL_GPIO_Init+0x2a8>)
 8001268:	4293      	cmp	r3, r2
 800126a:	d052      	beq.n	8001312 <HAL_GPIO_Init+0xfa>
 800126c:	4a94      	ldr	r2, [pc, #592]	@ (80014c0 <HAL_GPIO_Init+0x2a8>)
 800126e:	4293      	cmp	r3, r2
 8001270:	d869      	bhi.n	8001346 <HAL_GPIO_Init+0x12e>
 8001272:	4a94      	ldr	r2, [pc, #592]	@ (80014c4 <HAL_GPIO_Init+0x2ac>)
 8001274:	4293      	cmp	r3, r2
 8001276:	d04c      	beq.n	8001312 <HAL_GPIO_Init+0xfa>
 8001278:	4a92      	ldr	r2, [pc, #584]	@ (80014c4 <HAL_GPIO_Init+0x2ac>)
 800127a:	4293      	cmp	r3, r2
 800127c:	d863      	bhi.n	8001346 <HAL_GPIO_Init+0x12e>
 800127e:	4a92      	ldr	r2, [pc, #584]	@ (80014c8 <HAL_GPIO_Init+0x2b0>)
 8001280:	4293      	cmp	r3, r2
 8001282:	d046      	beq.n	8001312 <HAL_GPIO_Init+0xfa>
 8001284:	4a90      	ldr	r2, [pc, #576]	@ (80014c8 <HAL_GPIO_Init+0x2b0>)
 8001286:	4293      	cmp	r3, r2
 8001288:	d85d      	bhi.n	8001346 <HAL_GPIO_Init+0x12e>
 800128a:	2b12      	cmp	r3, #18
 800128c:	d82a      	bhi.n	80012e4 <HAL_GPIO_Init+0xcc>
 800128e:	2b12      	cmp	r3, #18
 8001290:	d859      	bhi.n	8001346 <HAL_GPIO_Init+0x12e>
 8001292:	a201      	add	r2, pc, #4	@ (adr r2, 8001298 <HAL_GPIO_Init+0x80>)
 8001294:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001298:	08001313 	.word	0x08001313
 800129c:	080012ed 	.word	0x080012ed
 80012a0:	080012ff 	.word	0x080012ff
 80012a4:	08001341 	.word	0x08001341
 80012a8:	08001347 	.word	0x08001347
 80012ac:	08001347 	.word	0x08001347
 80012b0:	08001347 	.word	0x08001347
 80012b4:	08001347 	.word	0x08001347
 80012b8:	08001347 	.word	0x08001347
 80012bc:	08001347 	.word	0x08001347
 80012c0:	08001347 	.word	0x08001347
 80012c4:	08001347 	.word	0x08001347
 80012c8:	08001347 	.word	0x08001347
 80012cc:	08001347 	.word	0x08001347
 80012d0:	08001347 	.word	0x08001347
 80012d4:	08001347 	.word	0x08001347
 80012d8:	08001347 	.word	0x08001347
 80012dc:	080012f5 	.word	0x080012f5
 80012e0:	08001309 	.word	0x08001309
 80012e4:	4a79      	ldr	r2, [pc, #484]	@ (80014cc <HAL_GPIO_Init+0x2b4>)
 80012e6:	4293      	cmp	r3, r2
 80012e8:	d013      	beq.n	8001312 <HAL_GPIO_Init+0xfa>
 80012ea:	e02c      	b.n	8001346 <HAL_GPIO_Init+0x12e>
 80012ec:	683b      	ldr	r3, [r7, #0]
 80012ee:	68db      	ldr	r3, [r3, #12]
 80012f0:	623b      	str	r3, [r7, #32]
 80012f2:	e029      	b.n	8001348 <HAL_GPIO_Init+0x130>
 80012f4:	683b      	ldr	r3, [r7, #0]
 80012f6:	68db      	ldr	r3, [r3, #12]
 80012f8:	3304      	adds	r3, #4
 80012fa:	623b      	str	r3, [r7, #32]
 80012fc:	e024      	b.n	8001348 <HAL_GPIO_Init+0x130>
 80012fe:	683b      	ldr	r3, [r7, #0]
 8001300:	68db      	ldr	r3, [r3, #12]
 8001302:	3308      	adds	r3, #8
 8001304:	623b      	str	r3, [r7, #32]
 8001306:	e01f      	b.n	8001348 <HAL_GPIO_Init+0x130>
 8001308:	683b      	ldr	r3, [r7, #0]
 800130a:	68db      	ldr	r3, [r3, #12]
 800130c:	330c      	adds	r3, #12
 800130e:	623b      	str	r3, [r7, #32]
 8001310:	e01a      	b.n	8001348 <HAL_GPIO_Init+0x130>
 8001312:	683b      	ldr	r3, [r7, #0]
 8001314:	689b      	ldr	r3, [r3, #8]
 8001316:	2b00      	cmp	r3, #0
 8001318:	d102      	bne.n	8001320 <HAL_GPIO_Init+0x108>
 800131a:	2304      	movs	r3, #4
 800131c:	623b      	str	r3, [r7, #32]
 800131e:	e013      	b.n	8001348 <HAL_GPIO_Init+0x130>
 8001320:	683b      	ldr	r3, [r7, #0]
 8001322:	689b      	ldr	r3, [r3, #8]
 8001324:	2b01      	cmp	r3, #1
 8001326:	d105      	bne.n	8001334 <HAL_GPIO_Init+0x11c>
 8001328:	2308      	movs	r3, #8
 800132a:	623b      	str	r3, [r7, #32]
 800132c:	687b      	ldr	r3, [r7, #4]
 800132e:	69fa      	ldr	r2, [r7, #28]
 8001330:	611a      	str	r2, [r3, #16]
 8001332:	e009      	b.n	8001348 <HAL_GPIO_Init+0x130>
 8001334:	2308      	movs	r3, #8
 8001336:	623b      	str	r3, [r7, #32]
 8001338:	687b      	ldr	r3, [r7, #4]
 800133a:	69fa      	ldr	r2, [r7, #28]
 800133c:	615a      	str	r2, [r3, #20]
 800133e:	e003      	b.n	8001348 <HAL_GPIO_Init+0x130>
 8001340:	2300      	movs	r3, #0
 8001342:	623b      	str	r3, [r7, #32]
 8001344:	e000      	b.n	8001348 <HAL_GPIO_Init+0x130>
 8001346:	bf00      	nop
 8001348:	69bb      	ldr	r3, [r7, #24]
 800134a:	2bff      	cmp	r3, #255	@ 0xff
 800134c:	d801      	bhi.n	8001352 <HAL_GPIO_Init+0x13a>
 800134e:	687b      	ldr	r3, [r7, #4]
 8001350:	e001      	b.n	8001356 <HAL_GPIO_Init+0x13e>
 8001352:	687b      	ldr	r3, [r7, #4]
 8001354:	3304      	adds	r3, #4
 8001356:	617b      	str	r3, [r7, #20]
 8001358:	69bb      	ldr	r3, [r7, #24]
 800135a:	2bff      	cmp	r3, #255	@ 0xff
 800135c:	d802      	bhi.n	8001364 <HAL_GPIO_Init+0x14c>
 800135e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001360:	009b      	lsls	r3, r3, #2
 8001362:	e002      	b.n	800136a <HAL_GPIO_Init+0x152>
 8001364:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001366:	3b08      	subs	r3, #8
 8001368:	009b      	lsls	r3, r3, #2
 800136a:	613b      	str	r3, [r7, #16]
 800136c:	697b      	ldr	r3, [r7, #20]
 800136e:	681a      	ldr	r2, [r3, #0]
 8001370:	210f      	movs	r1, #15
 8001372:	693b      	ldr	r3, [r7, #16]
 8001374:	fa01 f303 	lsl.w	r3, r1, r3
 8001378:	43db      	mvns	r3, r3
 800137a:	401a      	ands	r2, r3
 800137c:	6a39      	ldr	r1, [r7, #32]
 800137e:	693b      	ldr	r3, [r7, #16]
 8001380:	fa01 f303 	lsl.w	r3, r1, r3
 8001384:	431a      	orrs	r2, r3
 8001386:	697b      	ldr	r3, [r7, #20]
 8001388:	601a      	str	r2, [r3, #0]
 800138a:	683b      	ldr	r3, [r7, #0]
 800138c:	685b      	ldr	r3, [r3, #4]
 800138e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001392:	2b00      	cmp	r3, #0
 8001394:	f000 80b1 	beq.w	80014fa <HAL_GPIO_Init+0x2e2>
 8001398:	4b4d      	ldr	r3, [pc, #308]	@ (80014d0 <HAL_GPIO_Init+0x2b8>)
 800139a:	699b      	ldr	r3, [r3, #24]
 800139c:	4a4c      	ldr	r2, [pc, #304]	@ (80014d0 <HAL_GPIO_Init+0x2b8>)
 800139e:	f043 0301 	orr.w	r3, r3, #1
 80013a2:	6193      	str	r3, [r2, #24]
 80013a4:	4b4a      	ldr	r3, [pc, #296]	@ (80014d0 <HAL_GPIO_Init+0x2b8>)
 80013a6:	699b      	ldr	r3, [r3, #24]
 80013a8:	f003 0301 	and.w	r3, r3, #1
 80013ac:	60bb      	str	r3, [r7, #8]
 80013ae:	68bb      	ldr	r3, [r7, #8]
 80013b0:	4a48      	ldr	r2, [pc, #288]	@ (80014d4 <HAL_GPIO_Init+0x2bc>)
 80013b2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80013b4:	089b      	lsrs	r3, r3, #2
 80013b6:	3302      	adds	r3, #2
 80013b8:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80013bc:	60fb      	str	r3, [r7, #12]
 80013be:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80013c0:	f003 0303 	and.w	r3, r3, #3
 80013c4:	009b      	lsls	r3, r3, #2
 80013c6:	220f      	movs	r2, #15
 80013c8:	fa02 f303 	lsl.w	r3, r2, r3
 80013cc:	43db      	mvns	r3, r3
 80013ce:	68fa      	ldr	r2, [r7, #12]
 80013d0:	4013      	ands	r3, r2
 80013d2:	60fb      	str	r3, [r7, #12]
 80013d4:	687b      	ldr	r3, [r7, #4]
 80013d6:	4a40      	ldr	r2, [pc, #256]	@ (80014d8 <HAL_GPIO_Init+0x2c0>)
 80013d8:	4293      	cmp	r3, r2
 80013da:	d013      	beq.n	8001404 <HAL_GPIO_Init+0x1ec>
 80013dc:	687b      	ldr	r3, [r7, #4]
 80013de:	4a3f      	ldr	r2, [pc, #252]	@ (80014dc <HAL_GPIO_Init+0x2c4>)
 80013e0:	4293      	cmp	r3, r2
 80013e2:	d00d      	beq.n	8001400 <HAL_GPIO_Init+0x1e8>
 80013e4:	687b      	ldr	r3, [r7, #4]
 80013e6:	4a3e      	ldr	r2, [pc, #248]	@ (80014e0 <HAL_GPIO_Init+0x2c8>)
 80013e8:	4293      	cmp	r3, r2
 80013ea:	d007      	beq.n	80013fc <HAL_GPIO_Init+0x1e4>
 80013ec:	687b      	ldr	r3, [r7, #4]
 80013ee:	4a3d      	ldr	r2, [pc, #244]	@ (80014e4 <HAL_GPIO_Init+0x2cc>)
 80013f0:	4293      	cmp	r3, r2
 80013f2:	d101      	bne.n	80013f8 <HAL_GPIO_Init+0x1e0>
 80013f4:	2303      	movs	r3, #3
 80013f6:	e006      	b.n	8001406 <HAL_GPIO_Init+0x1ee>
 80013f8:	2304      	movs	r3, #4
 80013fa:	e004      	b.n	8001406 <HAL_GPIO_Init+0x1ee>
 80013fc:	2302      	movs	r3, #2
 80013fe:	e002      	b.n	8001406 <HAL_GPIO_Init+0x1ee>
 8001400:	2301      	movs	r3, #1
 8001402:	e000      	b.n	8001406 <HAL_GPIO_Init+0x1ee>
 8001404:	2300      	movs	r3, #0
 8001406:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8001408:	f002 0203 	and.w	r2, r2, #3
 800140c:	0092      	lsls	r2, r2, #2
 800140e:	4093      	lsls	r3, r2
 8001410:	68fa      	ldr	r2, [r7, #12]
 8001412:	4313      	orrs	r3, r2
 8001414:	60fb      	str	r3, [r7, #12]
 8001416:	492f      	ldr	r1, [pc, #188]	@ (80014d4 <HAL_GPIO_Init+0x2bc>)
 8001418:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800141a:	089b      	lsrs	r3, r3, #2
 800141c:	3302      	adds	r3, #2
 800141e:	68fa      	ldr	r2, [r7, #12]
 8001420:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001424:	683b      	ldr	r3, [r7, #0]
 8001426:	685b      	ldr	r3, [r3, #4]
 8001428:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 800142c:	2b00      	cmp	r3, #0
 800142e:	d006      	beq.n	800143e <HAL_GPIO_Init+0x226>
 8001430:	4b2d      	ldr	r3, [pc, #180]	@ (80014e8 <HAL_GPIO_Init+0x2d0>)
 8001432:	689a      	ldr	r2, [r3, #8]
 8001434:	492c      	ldr	r1, [pc, #176]	@ (80014e8 <HAL_GPIO_Init+0x2d0>)
 8001436:	69bb      	ldr	r3, [r7, #24]
 8001438:	4313      	orrs	r3, r2
 800143a:	608b      	str	r3, [r1, #8]
 800143c:	e006      	b.n	800144c <HAL_GPIO_Init+0x234>
 800143e:	4b2a      	ldr	r3, [pc, #168]	@ (80014e8 <HAL_GPIO_Init+0x2d0>)
 8001440:	689a      	ldr	r2, [r3, #8]
 8001442:	69bb      	ldr	r3, [r7, #24]
 8001444:	43db      	mvns	r3, r3
 8001446:	4928      	ldr	r1, [pc, #160]	@ (80014e8 <HAL_GPIO_Init+0x2d0>)
 8001448:	4013      	ands	r3, r2
 800144a:	608b      	str	r3, [r1, #8]
 800144c:	683b      	ldr	r3, [r7, #0]
 800144e:	685b      	ldr	r3, [r3, #4]
 8001450:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8001454:	2b00      	cmp	r3, #0
 8001456:	d006      	beq.n	8001466 <HAL_GPIO_Init+0x24e>
 8001458:	4b23      	ldr	r3, [pc, #140]	@ (80014e8 <HAL_GPIO_Init+0x2d0>)
 800145a:	68da      	ldr	r2, [r3, #12]
 800145c:	4922      	ldr	r1, [pc, #136]	@ (80014e8 <HAL_GPIO_Init+0x2d0>)
 800145e:	69bb      	ldr	r3, [r7, #24]
 8001460:	4313      	orrs	r3, r2
 8001462:	60cb      	str	r3, [r1, #12]
 8001464:	e006      	b.n	8001474 <HAL_GPIO_Init+0x25c>
 8001466:	4b20      	ldr	r3, [pc, #128]	@ (80014e8 <HAL_GPIO_Init+0x2d0>)
 8001468:	68da      	ldr	r2, [r3, #12]
 800146a:	69bb      	ldr	r3, [r7, #24]
 800146c:	43db      	mvns	r3, r3
 800146e:	491e      	ldr	r1, [pc, #120]	@ (80014e8 <HAL_GPIO_Init+0x2d0>)
 8001470:	4013      	ands	r3, r2
 8001472:	60cb      	str	r3, [r1, #12]
 8001474:	683b      	ldr	r3, [r7, #0]
 8001476:	685b      	ldr	r3, [r3, #4]
 8001478:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800147c:	2b00      	cmp	r3, #0
 800147e:	d006      	beq.n	800148e <HAL_GPIO_Init+0x276>
 8001480:	4b19      	ldr	r3, [pc, #100]	@ (80014e8 <HAL_GPIO_Init+0x2d0>)
 8001482:	685a      	ldr	r2, [r3, #4]
 8001484:	4918      	ldr	r1, [pc, #96]	@ (80014e8 <HAL_GPIO_Init+0x2d0>)
 8001486:	69bb      	ldr	r3, [r7, #24]
 8001488:	4313      	orrs	r3, r2
 800148a:	604b      	str	r3, [r1, #4]
 800148c:	e006      	b.n	800149c <HAL_GPIO_Init+0x284>
 800148e:	4b16      	ldr	r3, [pc, #88]	@ (80014e8 <HAL_GPIO_Init+0x2d0>)
 8001490:	685a      	ldr	r2, [r3, #4]
 8001492:	69bb      	ldr	r3, [r7, #24]
 8001494:	43db      	mvns	r3, r3
 8001496:	4914      	ldr	r1, [pc, #80]	@ (80014e8 <HAL_GPIO_Init+0x2d0>)
 8001498:	4013      	ands	r3, r2
 800149a:	604b      	str	r3, [r1, #4]
 800149c:	683b      	ldr	r3, [r7, #0]
 800149e:	685b      	ldr	r3, [r3, #4]
 80014a0:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80014a4:	2b00      	cmp	r3, #0
 80014a6:	d021      	beq.n	80014ec <HAL_GPIO_Init+0x2d4>
 80014a8:	4b0f      	ldr	r3, [pc, #60]	@ (80014e8 <HAL_GPIO_Init+0x2d0>)
 80014aa:	681a      	ldr	r2, [r3, #0]
 80014ac:	490e      	ldr	r1, [pc, #56]	@ (80014e8 <HAL_GPIO_Init+0x2d0>)
 80014ae:	69bb      	ldr	r3, [r7, #24]
 80014b0:	4313      	orrs	r3, r2
 80014b2:	600b      	str	r3, [r1, #0]
 80014b4:	e021      	b.n	80014fa <HAL_GPIO_Init+0x2e2>
 80014b6:	bf00      	nop
 80014b8:	10320000 	.word	0x10320000
 80014bc:	10310000 	.word	0x10310000
 80014c0:	10220000 	.word	0x10220000
 80014c4:	10210000 	.word	0x10210000
 80014c8:	10120000 	.word	0x10120000
 80014cc:	10110000 	.word	0x10110000
 80014d0:	40021000 	.word	0x40021000
 80014d4:	40010000 	.word	0x40010000
 80014d8:	40010800 	.word	0x40010800
 80014dc:	40010c00 	.word	0x40010c00
 80014e0:	40011000 	.word	0x40011000
 80014e4:	40011400 	.word	0x40011400
 80014e8:	40010400 	.word	0x40010400
 80014ec:	4b0b      	ldr	r3, [pc, #44]	@ (800151c <HAL_GPIO_Init+0x304>)
 80014ee:	681a      	ldr	r2, [r3, #0]
 80014f0:	69bb      	ldr	r3, [r7, #24]
 80014f2:	43db      	mvns	r3, r3
 80014f4:	4909      	ldr	r1, [pc, #36]	@ (800151c <HAL_GPIO_Init+0x304>)
 80014f6:	4013      	ands	r3, r2
 80014f8:	600b      	str	r3, [r1, #0]
 80014fa:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80014fc:	3301      	adds	r3, #1
 80014fe:	627b      	str	r3, [r7, #36]	@ 0x24
 8001500:	683b      	ldr	r3, [r7, #0]
 8001502:	681a      	ldr	r2, [r3, #0]
 8001504:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001506:	fa22 f303 	lsr.w	r3, r2, r3
 800150a:	2b00      	cmp	r3, #0
 800150c:	f47f ae8e 	bne.w	800122c <HAL_GPIO_Init+0x14>
 8001510:	bf00      	nop
 8001512:	bf00      	nop
 8001514:	372c      	adds	r7, #44	@ 0x2c
 8001516:	46bd      	mov	sp, r7
 8001518:	bc80      	pop	{r7}
 800151a:	4770      	bx	lr
 800151c:	40010400 	.word	0x40010400

08001520 <HAL_GPIO_ReadPin>:
 8001520:	b480      	push	{r7}
 8001522:	b085      	sub	sp, #20
 8001524:	af00      	add	r7, sp, #0
 8001526:	6078      	str	r0, [r7, #4]
 8001528:	460b      	mov	r3, r1
 800152a:	807b      	strh	r3, [r7, #2]
 800152c:	687b      	ldr	r3, [r7, #4]
 800152e:	689a      	ldr	r2, [r3, #8]
 8001530:	887b      	ldrh	r3, [r7, #2]
 8001532:	4013      	ands	r3, r2
 8001534:	2b00      	cmp	r3, #0
 8001536:	d002      	beq.n	800153e <HAL_GPIO_ReadPin+0x1e>
 8001538:	2301      	movs	r3, #1
 800153a:	73fb      	strb	r3, [r7, #15]
 800153c:	e001      	b.n	8001542 <HAL_GPIO_ReadPin+0x22>
 800153e:	2300      	movs	r3, #0
 8001540:	73fb      	strb	r3, [r7, #15]
 8001542:	7bfb      	ldrb	r3, [r7, #15]
 8001544:	4618      	mov	r0, r3
 8001546:	3714      	adds	r7, #20
 8001548:	46bd      	mov	sp, r7
 800154a:	bc80      	pop	{r7}
 800154c:	4770      	bx	lr

0800154e <HAL_GPIO_WritePin>:
 800154e:	b480      	push	{r7}
 8001550:	b083      	sub	sp, #12
 8001552:	af00      	add	r7, sp, #0
 8001554:	6078      	str	r0, [r7, #4]
 8001556:	460b      	mov	r3, r1
 8001558:	807b      	strh	r3, [r7, #2]
 800155a:	4613      	mov	r3, r2
 800155c:	707b      	strb	r3, [r7, #1]
 800155e:	787b      	ldrb	r3, [r7, #1]
 8001560:	2b00      	cmp	r3, #0
 8001562:	d003      	beq.n	800156c <HAL_GPIO_WritePin+0x1e>
 8001564:	887a      	ldrh	r2, [r7, #2]
 8001566:	687b      	ldr	r3, [r7, #4]
 8001568:	611a      	str	r2, [r3, #16]
 800156a:	e003      	b.n	8001574 <HAL_GPIO_WritePin+0x26>
 800156c:	887b      	ldrh	r3, [r7, #2]
 800156e:	041a      	lsls	r2, r3, #16
 8001570:	687b      	ldr	r3, [r7, #4]
 8001572:	611a      	str	r2, [r3, #16]
 8001574:	bf00      	nop
 8001576:	370c      	adds	r7, #12
 8001578:	46bd      	mov	sp, r7
 800157a:	bc80      	pop	{r7}
 800157c:	4770      	bx	lr
	...

08001580 <HAL_GPIO_EXTI_IRQHandler>:
 8001580:	b580      	push	{r7, lr}
 8001582:	b082      	sub	sp, #8
 8001584:	af00      	add	r7, sp, #0
 8001586:	4603      	mov	r3, r0
 8001588:	80fb      	strh	r3, [r7, #6]
 800158a:	4b08      	ldr	r3, [pc, #32]	@ (80015ac <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 800158c:	695a      	ldr	r2, [r3, #20]
 800158e:	88fb      	ldrh	r3, [r7, #6]
 8001590:	4013      	ands	r3, r2
 8001592:	2b00      	cmp	r3, #0
 8001594:	d006      	beq.n	80015a4 <HAL_GPIO_EXTI_IRQHandler+0x24>
 8001596:	4a05      	ldr	r2, [pc, #20]	@ (80015ac <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8001598:	88fb      	ldrh	r3, [r7, #6]
 800159a:	6153      	str	r3, [r2, #20]
 800159c:	88fb      	ldrh	r3, [r7, #6]
 800159e:	4618      	mov	r0, r3
 80015a0:	f000 f806 	bl	80015b0 <HAL_GPIO_EXTI_Callback>
 80015a4:	bf00      	nop
 80015a6:	3708      	adds	r7, #8
 80015a8:	46bd      	mov	sp, r7
 80015aa:	bd80      	pop	{r7, pc}
 80015ac:	40010400 	.word	0x40010400

080015b0 <HAL_GPIO_EXTI_Callback>:
 80015b0:	b480      	push	{r7}
 80015b2:	b083      	sub	sp, #12
 80015b4:	af00      	add	r7, sp, #0
 80015b6:	4603      	mov	r3, r0
 80015b8:	80fb      	strh	r3, [r7, #6]
 80015ba:	bf00      	nop
 80015bc:	370c      	adds	r7, #12
 80015be:	46bd      	mov	sp, r7
 80015c0:	bc80      	pop	{r7}
 80015c2:	4770      	bx	lr

080015c4 <HAL_RCC_OscConfig>:
 80015c4:	b580      	push	{r7, lr}
 80015c6:	b086      	sub	sp, #24
 80015c8:	af00      	add	r7, sp, #0
 80015ca:	6078      	str	r0, [r7, #4]
 80015cc:	687b      	ldr	r3, [r7, #4]
 80015ce:	2b00      	cmp	r3, #0
 80015d0:	d101      	bne.n	80015d6 <HAL_RCC_OscConfig+0x12>
 80015d2:	2301      	movs	r3, #1
 80015d4:	e272      	b.n	8001abc <HAL_RCC_OscConfig+0x4f8>
 80015d6:	687b      	ldr	r3, [r7, #4]
 80015d8:	681b      	ldr	r3, [r3, #0]
 80015da:	f003 0301 	and.w	r3, r3, #1
 80015de:	2b00      	cmp	r3, #0
 80015e0:	f000 8087 	beq.w	80016f2 <HAL_RCC_OscConfig+0x12e>
 80015e4:	4b92      	ldr	r3, [pc, #584]	@ (8001830 <HAL_RCC_OscConfig+0x26c>)
 80015e6:	685b      	ldr	r3, [r3, #4]
 80015e8:	f003 030c 	and.w	r3, r3, #12
 80015ec:	2b04      	cmp	r3, #4
 80015ee:	d00c      	beq.n	800160a <HAL_RCC_OscConfig+0x46>
 80015f0:	4b8f      	ldr	r3, [pc, #572]	@ (8001830 <HAL_RCC_OscConfig+0x26c>)
 80015f2:	685b      	ldr	r3, [r3, #4]
 80015f4:	f003 030c 	and.w	r3, r3, #12
 80015f8:	2b08      	cmp	r3, #8
 80015fa:	d112      	bne.n	8001622 <HAL_RCC_OscConfig+0x5e>
 80015fc:	4b8c      	ldr	r3, [pc, #560]	@ (8001830 <HAL_RCC_OscConfig+0x26c>)
 80015fe:	685b      	ldr	r3, [r3, #4]
 8001600:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8001604:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8001608:	d10b      	bne.n	8001622 <HAL_RCC_OscConfig+0x5e>
 800160a:	4b89      	ldr	r3, [pc, #548]	@ (8001830 <HAL_RCC_OscConfig+0x26c>)
 800160c:	681b      	ldr	r3, [r3, #0]
 800160e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001612:	2b00      	cmp	r3, #0
 8001614:	d06c      	beq.n	80016f0 <HAL_RCC_OscConfig+0x12c>
 8001616:	687b      	ldr	r3, [r7, #4]
 8001618:	685b      	ldr	r3, [r3, #4]
 800161a:	2b00      	cmp	r3, #0
 800161c:	d168      	bne.n	80016f0 <HAL_RCC_OscConfig+0x12c>
 800161e:	2301      	movs	r3, #1
 8001620:	e24c      	b.n	8001abc <HAL_RCC_OscConfig+0x4f8>
 8001622:	687b      	ldr	r3, [r7, #4]
 8001624:	685b      	ldr	r3, [r3, #4]
 8001626:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800162a:	d106      	bne.n	800163a <HAL_RCC_OscConfig+0x76>
 800162c:	4b80      	ldr	r3, [pc, #512]	@ (8001830 <HAL_RCC_OscConfig+0x26c>)
 800162e:	681b      	ldr	r3, [r3, #0]
 8001630:	4a7f      	ldr	r2, [pc, #508]	@ (8001830 <HAL_RCC_OscConfig+0x26c>)
 8001632:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8001636:	6013      	str	r3, [r2, #0]
 8001638:	e02e      	b.n	8001698 <HAL_RCC_OscConfig+0xd4>
 800163a:	687b      	ldr	r3, [r7, #4]
 800163c:	685b      	ldr	r3, [r3, #4]
 800163e:	2b00      	cmp	r3, #0
 8001640:	d10c      	bne.n	800165c <HAL_RCC_OscConfig+0x98>
 8001642:	4b7b      	ldr	r3, [pc, #492]	@ (8001830 <HAL_RCC_OscConfig+0x26c>)
 8001644:	681b      	ldr	r3, [r3, #0]
 8001646:	4a7a      	ldr	r2, [pc, #488]	@ (8001830 <HAL_RCC_OscConfig+0x26c>)
 8001648:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 800164c:	6013      	str	r3, [r2, #0]
 800164e:	4b78      	ldr	r3, [pc, #480]	@ (8001830 <HAL_RCC_OscConfig+0x26c>)
 8001650:	681b      	ldr	r3, [r3, #0]
 8001652:	4a77      	ldr	r2, [pc, #476]	@ (8001830 <HAL_RCC_OscConfig+0x26c>)
 8001654:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8001658:	6013      	str	r3, [r2, #0]
 800165a:	e01d      	b.n	8001698 <HAL_RCC_OscConfig+0xd4>
 800165c:	687b      	ldr	r3, [r7, #4]
 800165e:	685b      	ldr	r3, [r3, #4]
 8001660:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8001664:	d10c      	bne.n	8001680 <HAL_RCC_OscConfig+0xbc>
 8001666:	4b72      	ldr	r3, [pc, #456]	@ (8001830 <HAL_RCC_OscConfig+0x26c>)
 8001668:	681b      	ldr	r3, [r3, #0]
 800166a:	4a71      	ldr	r2, [pc, #452]	@ (8001830 <HAL_RCC_OscConfig+0x26c>)
 800166c:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8001670:	6013      	str	r3, [r2, #0]
 8001672:	4b6f      	ldr	r3, [pc, #444]	@ (8001830 <HAL_RCC_OscConfig+0x26c>)
 8001674:	681b      	ldr	r3, [r3, #0]
 8001676:	4a6e      	ldr	r2, [pc, #440]	@ (8001830 <HAL_RCC_OscConfig+0x26c>)
 8001678:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800167c:	6013      	str	r3, [r2, #0]
 800167e:	e00b      	b.n	8001698 <HAL_RCC_OscConfig+0xd4>
 8001680:	4b6b      	ldr	r3, [pc, #428]	@ (8001830 <HAL_RCC_OscConfig+0x26c>)
 8001682:	681b      	ldr	r3, [r3, #0]
 8001684:	4a6a      	ldr	r2, [pc, #424]	@ (8001830 <HAL_RCC_OscConfig+0x26c>)
 8001686:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 800168a:	6013      	str	r3, [r2, #0]
 800168c:	4b68      	ldr	r3, [pc, #416]	@ (8001830 <HAL_RCC_OscConfig+0x26c>)
 800168e:	681b      	ldr	r3, [r3, #0]
 8001690:	4a67      	ldr	r2, [pc, #412]	@ (8001830 <HAL_RCC_OscConfig+0x26c>)
 8001692:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8001696:	6013      	str	r3, [r2, #0]
 8001698:	687b      	ldr	r3, [r7, #4]
 800169a:	685b      	ldr	r3, [r3, #4]
 800169c:	2b00      	cmp	r3, #0
 800169e:	d013      	beq.n	80016c8 <HAL_RCC_OscConfig+0x104>
 80016a0:	f7ff fbcc 	bl	8000e3c <HAL_GetTick>
 80016a4:	6138      	str	r0, [r7, #16]
 80016a6:	e008      	b.n	80016ba <HAL_RCC_OscConfig+0xf6>
 80016a8:	f7ff fbc8 	bl	8000e3c <HAL_GetTick>
 80016ac:	4602      	mov	r2, r0
 80016ae:	693b      	ldr	r3, [r7, #16]
 80016b0:	1ad3      	subs	r3, r2, r3
 80016b2:	2b64      	cmp	r3, #100	@ 0x64
 80016b4:	d901      	bls.n	80016ba <HAL_RCC_OscConfig+0xf6>
 80016b6:	2303      	movs	r3, #3
 80016b8:	e200      	b.n	8001abc <HAL_RCC_OscConfig+0x4f8>
 80016ba:	4b5d      	ldr	r3, [pc, #372]	@ (8001830 <HAL_RCC_OscConfig+0x26c>)
 80016bc:	681b      	ldr	r3, [r3, #0]
 80016be:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80016c2:	2b00      	cmp	r3, #0
 80016c4:	d0f0      	beq.n	80016a8 <HAL_RCC_OscConfig+0xe4>
 80016c6:	e014      	b.n	80016f2 <HAL_RCC_OscConfig+0x12e>
 80016c8:	f7ff fbb8 	bl	8000e3c <HAL_GetTick>
 80016cc:	6138      	str	r0, [r7, #16]
 80016ce:	e008      	b.n	80016e2 <HAL_RCC_OscConfig+0x11e>
 80016d0:	f7ff fbb4 	bl	8000e3c <HAL_GetTick>
 80016d4:	4602      	mov	r2, r0
 80016d6:	693b      	ldr	r3, [r7, #16]
 80016d8:	1ad3      	subs	r3, r2, r3
 80016da:	2b64      	cmp	r3, #100	@ 0x64
 80016dc:	d901      	bls.n	80016e2 <HAL_RCC_OscConfig+0x11e>
 80016de:	2303      	movs	r3, #3
 80016e0:	e1ec      	b.n	8001abc <HAL_RCC_OscConfig+0x4f8>
 80016e2:	4b53      	ldr	r3, [pc, #332]	@ (8001830 <HAL_RCC_OscConfig+0x26c>)
 80016e4:	681b      	ldr	r3, [r3, #0]
 80016e6:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80016ea:	2b00      	cmp	r3, #0
 80016ec:	d1f0      	bne.n	80016d0 <HAL_RCC_OscConfig+0x10c>
 80016ee:	e000      	b.n	80016f2 <HAL_RCC_OscConfig+0x12e>
 80016f0:	bf00      	nop
 80016f2:	687b      	ldr	r3, [r7, #4]
 80016f4:	681b      	ldr	r3, [r3, #0]
 80016f6:	f003 0302 	and.w	r3, r3, #2
 80016fa:	2b00      	cmp	r3, #0
 80016fc:	d063      	beq.n	80017c6 <HAL_RCC_OscConfig+0x202>
 80016fe:	4b4c      	ldr	r3, [pc, #304]	@ (8001830 <HAL_RCC_OscConfig+0x26c>)
 8001700:	685b      	ldr	r3, [r3, #4]
 8001702:	f003 030c 	and.w	r3, r3, #12
 8001706:	2b00      	cmp	r3, #0
 8001708:	d00b      	beq.n	8001722 <HAL_RCC_OscConfig+0x15e>
 800170a:	4b49      	ldr	r3, [pc, #292]	@ (8001830 <HAL_RCC_OscConfig+0x26c>)
 800170c:	685b      	ldr	r3, [r3, #4]
 800170e:	f003 030c 	and.w	r3, r3, #12
 8001712:	2b08      	cmp	r3, #8
 8001714:	d11c      	bne.n	8001750 <HAL_RCC_OscConfig+0x18c>
 8001716:	4b46      	ldr	r3, [pc, #280]	@ (8001830 <HAL_RCC_OscConfig+0x26c>)
 8001718:	685b      	ldr	r3, [r3, #4]
 800171a:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 800171e:	2b00      	cmp	r3, #0
 8001720:	d116      	bne.n	8001750 <HAL_RCC_OscConfig+0x18c>
 8001722:	4b43      	ldr	r3, [pc, #268]	@ (8001830 <HAL_RCC_OscConfig+0x26c>)
 8001724:	681b      	ldr	r3, [r3, #0]
 8001726:	f003 0302 	and.w	r3, r3, #2
 800172a:	2b00      	cmp	r3, #0
 800172c:	d005      	beq.n	800173a <HAL_RCC_OscConfig+0x176>
 800172e:	687b      	ldr	r3, [r7, #4]
 8001730:	691b      	ldr	r3, [r3, #16]
 8001732:	2b01      	cmp	r3, #1
 8001734:	d001      	beq.n	800173a <HAL_RCC_OscConfig+0x176>
 8001736:	2301      	movs	r3, #1
 8001738:	e1c0      	b.n	8001abc <HAL_RCC_OscConfig+0x4f8>
 800173a:	4b3d      	ldr	r3, [pc, #244]	@ (8001830 <HAL_RCC_OscConfig+0x26c>)
 800173c:	681b      	ldr	r3, [r3, #0]
 800173e:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8001742:	687b      	ldr	r3, [r7, #4]
 8001744:	695b      	ldr	r3, [r3, #20]
 8001746:	00db      	lsls	r3, r3, #3
 8001748:	4939      	ldr	r1, [pc, #228]	@ (8001830 <HAL_RCC_OscConfig+0x26c>)
 800174a:	4313      	orrs	r3, r2
 800174c:	600b      	str	r3, [r1, #0]
 800174e:	e03a      	b.n	80017c6 <HAL_RCC_OscConfig+0x202>
 8001750:	687b      	ldr	r3, [r7, #4]
 8001752:	691b      	ldr	r3, [r3, #16]
 8001754:	2b00      	cmp	r3, #0
 8001756:	d020      	beq.n	800179a <HAL_RCC_OscConfig+0x1d6>
 8001758:	4b36      	ldr	r3, [pc, #216]	@ (8001834 <HAL_RCC_OscConfig+0x270>)
 800175a:	2201      	movs	r2, #1
 800175c:	601a      	str	r2, [r3, #0]
 800175e:	f7ff fb6d 	bl	8000e3c <HAL_GetTick>
 8001762:	6138      	str	r0, [r7, #16]
 8001764:	e008      	b.n	8001778 <HAL_RCC_OscConfig+0x1b4>
 8001766:	f7ff fb69 	bl	8000e3c <HAL_GetTick>
 800176a:	4602      	mov	r2, r0
 800176c:	693b      	ldr	r3, [r7, #16]
 800176e:	1ad3      	subs	r3, r2, r3
 8001770:	2b02      	cmp	r3, #2
 8001772:	d901      	bls.n	8001778 <HAL_RCC_OscConfig+0x1b4>
 8001774:	2303      	movs	r3, #3
 8001776:	e1a1      	b.n	8001abc <HAL_RCC_OscConfig+0x4f8>
 8001778:	4b2d      	ldr	r3, [pc, #180]	@ (8001830 <HAL_RCC_OscConfig+0x26c>)
 800177a:	681b      	ldr	r3, [r3, #0]
 800177c:	f003 0302 	and.w	r3, r3, #2
 8001780:	2b00      	cmp	r3, #0
 8001782:	d0f0      	beq.n	8001766 <HAL_RCC_OscConfig+0x1a2>
 8001784:	4b2a      	ldr	r3, [pc, #168]	@ (8001830 <HAL_RCC_OscConfig+0x26c>)
 8001786:	681b      	ldr	r3, [r3, #0]
 8001788:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 800178c:	687b      	ldr	r3, [r7, #4]
 800178e:	695b      	ldr	r3, [r3, #20]
 8001790:	00db      	lsls	r3, r3, #3
 8001792:	4927      	ldr	r1, [pc, #156]	@ (8001830 <HAL_RCC_OscConfig+0x26c>)
 8001794:	4313      	orrs	r3, r2
 8001796:	600b      	str	r3, [r1, #0]
 8001798:	e015      	b.n	80017c6 <HAL_RCC_OscConfig+0x202>
 800179a:	4b26      	ldr	r3, [pc, #152]	@ (8001834 <HAL_RCC_OscConfig+0x270>)
 800179c:	2200      	movs	r2, #0
 800179e:	601a      	str	r2, [r3, #0]
 80017a0:	f7ff fb4c 	bl	8000e3c <HAL_GetTick>
 80017a4:	6138      	str	r0, [r7, #16]
 80017a6:	e008      	b.n	80017ba <HAL_RCC_OscConfig+0x1f6>
 80017a8:	f7ff fb48 	bl	8000e3c <HAL_GetTick>
 80017ac:	4602      	mov	r2, r0
 80017ae:	693b      	ldr	r3, [r7, #16]
 80017b0:	1ad3      	subs	r3, r2, r3
 80017b2:	2b02      	cmp	r3, #2
 80017b4:	d901      	bls.n	80017ba <HAL_RCC_OscConfig+0x1f6>
 80017b6:	2303      	movs	r3, #3
 80017b8:	e180      	b.n	8001abc <HAL_RCC_OscConfig+0x4f8>
 80017ba:	4b1d      	ldr	r3, [pc, #116]	@ (8001830 <HAL_RCC_OscConfig+0x26c>)
 80017bc:	681b      	ldr	r3, [r3, #0]
 80017be:	f003 0302 	and.w	r3, r3, #2
 80017c2:	2b00      	cmp	r3, #0
 80017c4:	d1f0      	bne.n	80017a8 <HAL_RCC_OscConfig+0x1e4>
 80017c6:	687b      	ldr	r3, [r7, #4]
 80017c8:	681b      	ldr	r3, [r3, #0]
 80017ca:	f003 0308 	and.w	r3, r3, #8
 80017ce:	2b00      	cmp	r3, #0
 80017d0:	d03a      	beq.n	8001848 <HAL_RCC_OscConfig+0x284>
 80017d2:	687b      	ldr	r3, [r7, #4]
 80017d4:	699b      	ldr	r3, [r3, #24]
 80017d6:	2b00      	cmp	r3, #0
 80017d8:	d019      	beq.n	800180e <HAL_RCC_OscConfig+0x24a>
 80017da:	4b17      	ldr	r3, [pc, #92]	@ (8001838 <HAL_RCC_OscConfig+0x274>)
 80017dc:	2201      	movs	r2, #1
 80017de:	601a      	str	r2, [r3, #0]
 80017e0:	f7ff fb2c 	bl	8000e3c <HAL_GetTick>
 80017e4:	6138      	str	r0, [r7, #16]
 80017e6:	e008      	b.n	80017fa <HAL_RCC_OscConfig+0x236>
 80017e8:	f7ff fb28 	bl	8000e3c <HAL_GetTick>
 80017ec:	4602      	mov	r2, r0
 80017ee:	693b      	ldr	r3, [r7, #16]
 80017f0:	1ad3      	subs	r3, r2, r3
 80017f2:	2b02      	cmp	r3, #2
 80017f4:	d901      	bls.n	80017fa <HAL_RCC_OscConfig+0x236>
 80017f6:	2303      	movs	r3, #3
 80017f8:	e160      	b.n	8001abc <HAL_RCC_OscConfig+0x4f8>
 80017fa:	4b0d      	ldr	r3, [pc, #52]	@ (8001830 <HAL_RCC_OscConfig+0x26c>)
 80017fc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80017fe:	f003 0302 	and.w	r3, r3, #2
 8001802:	2b00      	cmp	r3, #0
 8001804:	d0f0      	beq.n	80017e8 <HAL_RCC_OscConfig+0x224>
 8001806:	2001      	movs	r0, #1
 8001808:	f000 face 	bl	8001da8 <RCC_Delay>
 800180c:	e01c      	b.n	8001848 <HAL_RCC_OscConfig+0x284>
 800180e:	4b0a      	ldr	r3, [pc, #40]	@ (8001838 <HAL_RCC_OscConfig+0x274>)
 8001810:	2200      	movs	r2, #0
 8001812:	601a      	str	r2, [r3, #0]
 8001814:	f7ff fb12 	bl	8000e3c <HAL_GetTick>
 8001818:	6138      	str	r0, [r7, #16]
 800181a:	e00f      	b.n	800183c <HAL_RCC_OscConfig+0x278>
 800181c:	f7ff fb0e 	bl	8000e3c <HAL_GetTick>
 8001820:	4602      	mov	r2, r0
 8001822:	693b      	ldr	r3, [r7, #16]
 8001824:	1ad3      	subs	r3, r2, r3
 8001826:	2b02      	cmp	r3, #2
 8001828:	d908      	bls.n	800183c <HAL_RCC_OscConfig+0x278>
 800182a:	2303      	movs	r3, #3
 800182c:	e146      	b.n	8001abc <HAL_RCC_OscConfig+0x4f8>
 800182e:	bf00      	nop
 8001830:	40021000 	.word	0x40021000
 8001834:	42420000 	.word	0x42420000
 8001838:	42420480 	.word	0x42420480
 800183c:	4b92      	ldr	r3, [pc, #584]	@ (8001a88 <HAL_RCC_OscConfig+0x4c4>)
 800183e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001840:	f003 0302 	and.w	r3, r3, #2
 8001844:	2b00      	cmp	r3, #0
 8001846:	d1e9      	bne.n	800181c <HAL_RCC_OscConfig+0x258>
 8001848:	687b      	ldr	r3, [r7, #4]
 800184a:	681b      	ldr	r3, [r3, #0]
 800184c:	f003 0304 	and.w	r3, r3, #4
 8001850:	2b00      	cmp	r3, #0
 8001852:	f000 80a6 	beq.w	80019a2 <HAL_RCC_OscConfig+0x3de>
 8001856:	2300      	movs	r3, #0
 8001858:	75fb      	strb	r3, [r7, #23]
 800185a:	4b8b      	ldr	r3, [pc, #556]	@ (8001a88 <HAL_RCC_OscConfig+0x4c4>)
 800185c:	69db      	ldr	r3, [r3, #28]
 800185e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001862:	2b00      	cmp	r3, #0
 8001864:	d10d      	bne.n	8001882 <HAL_RCC_OscConfig+0x2be>
 8001866:	4b88      	ldr	r3, [pc, #544]	@ (8001a88 <HAL_RCC_OscConfig+0x4c4>)
 8001868:	69db      	ldr	r3, [r3, #28]
 800186a:	4a87      	ldr	r2, [pc, #540]	@ (8001a88 <HAL_RCC_OscConfig+0x4c4>)
 800186c:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8001870:	61d3      	str	r3, [r2, #28]
 8001872:	4b85      	ldr	r3, [pc, #532]	@ (8001a88 <HAL_RCC_OscConfig+0x4c4>)
 8001874:	69db      	ldr	r3, [r3, #28]
 8001876:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800187a:	60bb      	str	r3, [r7, #8]
 800187c:	68bb      	ldr	r3, [r7, #8]
 800187e:	2301      	movs	r3, #1
 8001880:	75fb      	strb	r3, [r7, #23]
 8001882:	4b82      	ldr	r3, [pc, #520]	@ (8001a8c <HAL_RCC_OscConfig+0x4c8>)
 8001884:	681b      	ldr	r3, [r3, #0]
 8001886:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800188a:	2b00      	cmp	r3, #0
 800188c:	d118      	bne.n	80018c0 <HAL_RCC_OscConfig+0x2fc>
 800188e:	4b7f      	ldr	r3, [pc, #508]	@ (8001a8c <HAL_RCC_OscConfig+0x4c8>)
 8001890:	681b      	ldr	r3, [r3, #0]
 8001892:	4a7e      	ldr	r2, [pc, #504]	@ (8001a8c <HAL_RCC_OscConfig+0x4c8>)
 8001894:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8001898:	6013      	str	r3, [r2, #0]
 800189a:	f7ff facf 	bl	8000e3c <HAL_GetTick>
 800189e:	6138      	str	r0, [r7, #16]
 80018a0:	e008      	b.n	80018b4 <HAL_RCC_OscConfig+0x2f0>
 80018a2:	f7ff facb 	bl	8000e3c <HAL_GetTick>
 80018a6:	4602      	mov	r2, r0
 80018a8:	693b      	ldr	r3, [r7, #16]
 80018aa:	1ad3      	subs	r3, r2, r3
 80018ac:	2b64      	cmp	r3, #100	@ 0x64
 80018ae:	d901      	bls.n	80018b4 <HAL_RCC_OscConfig+0x2f0>
 80018b0:	2303      	movs	r3, #3
 80018b2:	e103      	b.n	8001abc <HAL_RCC_OscConfig+0x4f8>
 80018b4:	4b75      	ldr	r3, [pc, #468]	@ (8001a8c <HAL_RCC_OscConfig+0x4c8>)
 80018b6:	681b      	ldr	r3, [r3, #0]
 80018b8:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80018bc:	2b00      	cmp	r3, #0
 80018be:	d0f0      	beq.n	80018a2 <HAL_RCC_OscConfig+0x2de>
 80018c0:	687b      	ldr	r3, [r7, #4]
 80018c2:	68db      	ldr	r3, [r3, #12]
 80018c4:	2b01      	cmp	r3, #1
 80018c6:	d106      	bne.n	80018d6 <HAL_RCC_OscConfig+0x312>
 80018c8:	4b6f      	ldr	r3, [pc, #444]	@ (8001a88 <HAL_RCC_OscConfig+0x4c4>)
 80018ca:	6a1b      	ldr	r3, [r3, #32]
 80018cc:	4a6e      	ldr	r2, [pc, #440]	@ (8001a88 <HAL_RCC_OscConfig+0x4c4>)
 80018ce:	f043 0301 	orr.w	r3, r3, #1
 80018d2:	6213      	str	r3, [r2, #32]
 80018d4:	e02d      	b.n	8001932 <HAL_RCC_OscConfig+0x36e>
 80018d6:	687b      	ldr	r3, [r7, #4]
 80018d8:	68db      	ldr	r3, [r3, #12]
 80018da:	2b00      	cmp	r3, #0
 80018dc:	d10c      	bne.n	80018f8 <HAL_RCC_OscConfig+0x334>
 80018de:	4b6a      	ldr	r3, [pc, #424]	@ (8001a88 <HAL_RCC_OscConfig+0x4c4>)
 80018e0:	6a1b      	ldr	r3, [r3, #32]
 80018e2:	4a69      	ldr	r2, [pc, #420]	@ (8001a88 <HAL_RCC_OscConfig+0x4c4>)
 80018e4:	f023 0301 	bic.w	r3, r3, #1
 80018e8:	6213      	str	r3, [r2, #32]
 80018ea:	4b67      	ldr	r3, [pc, #412]	@ (8001a88 <HAL_RCC_OscConfig+0x4c4>)
 80018ec:	6a1b      	ldr	r3, [r3, #32]
 80018ee:	4a66      	ldr	r2, [pc, #408]	@ (8001a88 <HAL_RCC_OscConfig+0x4c4>)
 80018f0:	f023 0304 	bic.w	r3, r3, #4
 80018f4:	6213      	str	r3, [r2, #32]
 80018f6:	e01c      	b.n	8001932 <HAL_RCC_OscConfig+0x36e>
 80018f8:	687b      	ldr	r3, [r7, #4]
 80018fa:	68db      	ldr	r3, [r3, #12]
 80018fc:	2b05      	cmp	r3, #5
 80018fe:	d10c      	bne.n	800191a <HAL_RCC_OscConfig+0x356>
 8001900:	4b61      	ldr	r3, [pc, #388]	@ (8001a88 <HAL_RCC_OscConfig+0x4c4>)
 8001902:	6a1b      	ldr	r3, [r3, #32]
 8001904:	4a60      	ldr	r2, [pc, #384]	@ (8001a88 <HAL_RCC_OscConfig+0x4c4>)
 8001906:	f043 0304 	orr.w	r3, r3, #4
 800190a:	6213      	str	r3, [r2, #32]
 800190c:	4b5e      	ldr	r3, [pc, #376]	@ (8001a88 <HAL_RCC_OscConfig+0x4c4>)
 800190e:	6a1b      	ldr	r3, [r3, #32]
 8001910:	4a5d      	ldr	r2, [pc, #372]	@ (8001a88 <HAL_RCC_OscConfig+0x4c4>)
 8001912:	f043 0301 	orr.w	r3, r3, #1
 8001916:	6213      	str	r3, [r2, #32]
 8001918:	e00b      	b.n	8001932 <HAL_RCC_OscConfig+0x36e>
 800191a:	4b5b      	ldr	r3, [pc, #364]	@ (8001a88 <HAL_RCC_OscConfig+0x4c4>)
 800191c:	6a1b      	ldr	r3, [r3, #32]
 800191e:	4a5a      	ldr	r2, [pc, #360]	@ (8001a88 <HAL_RCC_OscConfig+0x4c4>)
 8001920:	f023 0301 	bic.w	r3, r3, #1
 8001924:	6213      	str	r3, [r2, #32]
 8001926:	4b58      	ldr	r3, [pc, #352]	@ (8001a88 <HAL_RCC_OscConfig+0x4c4>)
 8001928:	6a1b      	ldr	r3, [r3, #32]
 800192a:	4a57      	ldr	r2, [pc, #348]	@ (8001a88 <HAL_RCC_OscConfig+0x4c4>)
 800192c:	f023 0304 	bic.w	r3, r3, #4
 8001930:	6213      	str	r3, [r2, #32]
 8001932:	687b      	ldr	r3, [r7, #4]
 8001934:	68db      	ldr	r3, [r3, #12]
 8001936:	2b00      	cmp	r3, #0
 8001938:	d015      	beq.n	8001966 <HAL_RCC_OscConfig+0x3a2>
 800193a:	f7ff fa7f 	bl	8000e3c <HAL_GetTick>
 800193e:	6138      	str	r0, [r7, #16]
 8001940:	e00a      	b.n	8001958 <HAL_RCC_OscConfig+0x394>
 8001942:	f7ff fa7b 	bl	8000e3c <HAL_GetTick>
 8001946:	4602      	mov	r2, r0
 8001948:	693b      	ldr	r3, [r7, #16]
 800194a:	1ad3      	subs	r3, r2, r3
 800194c:	f241 3288 	movw	r2, #5000	@ 0x1388
 8001950:	4293      	cmp	r3, r2
 8001952:	d901      	bls.n	8001958 <HAL_RCC_OscConfig+0x394>
 8001954:	2303      	movs	r3, #3
 8001956:	e0b1      	b.n	8001abc <HAL_RCC_OscConfig+0x4f8>
 8001958:	4b4b      	ldr	r3, [pc, #300]	@ (8001a88 <HAL_RCC_OscConfig+0x4c4>)
 800195a:	6a1b      	ldr	r3, [r3, #32]
 800195c:	f003 0302 	and.w	r3, r3, #2
 8001960:	2b00      	cmp	r3, #0
 8001962:	d0ee      	beq.n	8001942 <HAL_RCC_OscConfig+0x37e>
 8001964:	e014      	b.n	8001990 <HAL_RCC_OscConfig+0x3cc>
 8001966:	f7ff fa69 	bl	8000e3c <HAL_GetTick>
 800196a:	6138      	str	r0, [r7, #16]
 800196c:	e00a      	b.n	8001984 <HAL_RCC_OscConfig+0x3c0>
 800196e:	f7ff fa65 	bl	8000e3c <HAL_GetTick>
 8001972:	4602      	mov	r2, r0
 8001974:	693b      	ldr	r3, [r7, #16]
 8001976:	1ad3      	subs	r3, r2, r3
 8001978:	f241 3288 	movw	r2, #5000	@ 0x1388
 800197c:	4293      	cmp	r3, r2
 800197e:	d901      	bls.n	8001984 <HAL_RCC_OscConfig+0x3c0>
 8001980:	2303      	movs	r3, #3
 8001982:	e09b      	b.n	8001abc <HAL_RCC_OscConfig+0x4f8>
 8001984:	4b40      	ldr	r3, [pc, #256]	@ (8001a88 <HAL_RCC_OscConfig+0x4c4>)
 8001986:	6a1b      	ldr	r3, [r3, #32]
 8001988:	f003 0302 	and.w	r3, r3, #2
 800198c:	2b00      	cmp	r3, #0
 800198e:	d1ee      	bne.n	800196e <HAL_RCC_OscConfig+0x3aa>
 8001990:	7dfb      	ldrb	r3, [r7, #23]
 8001992:	2b01      	cmp	r3, #1
 8001994:	d105      	bne.n	80019a2 <HAL_RCC_OscConfig+0x3de>
 8001996:	4b3c      	ldr	r3, [pc, #240]	@ (8001a88 <HAL_RCC_OscConfig+0x4c4>)
 8001998:	69db      	ldr	r3, [r3, #28]
 800199a:	4a3b      	ldr	r2, [pc, #236]	@ (8001a88 <HAL_RCC_OscConfig+0x4c4>)
 800199c:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 80019a0:	61d3      	str	r3, [r2, #28]
 80019a2:	687b      	ldr	r3, [r7, #4]
 80019a4:	69db      	ldr	r3, [r3, #28]
 80019a6:	2b00      	cmp	r3, #0
 80019a8:	f000 8087 	beq.w	8001aba <HAL_RCC_OscConfig+0x4f6>
 80019ac:	4b36      	ldr	r3, [pc, #216]	@ (8001a88 <HAL_RCC_OscConfig+0x4c4>)
 80019ae:	685b      	ldr	r3, [r3, #4]
 80019b0:	f003 030c 	and.w	r3, r3, #12
 80019b4:	2b08      	cmp	r3, #8
 80019b6:	d061      	beq.n	8001a7c <HAL_RCC_OscConfig+0x4b8>
 80019b8:	687b      	ldr	r3, [r7, #4]
 80019ba:	69db      	ldr	r3, [r3, #28]
 80019bc:	2b02      	cmp	r3, #2
 80019be:	d146      	bne.n	8001a4e <HAL_RCC_OscConfig+0x48a>
 80019c0:	4b33      	ldr	r3, [pc, #204]	@ (8001a90 <HAL_RCC_OscConfig+0x4cc>)
 80019c2:	2200      	movs	r2, #0
 80019c4:	601a      	str	r2, [r3, #0]
 80019c6:	f7ff fa39 	bl	8000e3c <HAL_GetTick>
 80019ca:	6138      	str	r0, [r7, #16]
 80019cc:	e008      	b.n	80019e0 <HAL_RCC_OscConfig+0x41c>
 80019ce:	f7ff fa35 	bl	8000e3c <HAL_GetTick>
 80019d2:	4602      	mov	r2, r0
 80019d4:	693b      	ldr	r3, [r7, #16]
 80019d6:	1ad3      	subs	r3, r2, r3
 80019d8:	2b02      	cmp	r3, #2
 80019da:	d901      	bls.n	80019e0 <HAL_RCC_OscConfig+0x41c>
 80019dc:	2303      	movs	r3, #3
 80019de:	e06d      	b.n	8001abc <HAL_RCC_OscConfig+0x4f8>
 80019e0:	4b29      	ldr	r3, [pc, #164]	@ (8001a88 <HAL_RCC_OscConfig+0x4c4>)
 80019e2:	681b      	ldr	r3, [r3, #0]
 80019e4:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80019e8:	2b00      	cmp	r3, #0
 80019ea:	d1f0      	bne.n	80019ce <HAL_RCC_OscConfig+0x40a>
 80019ec:	687b      	ldr	r3, [r7, #4]
 80019ee:	6a1b      	ldr	r3, [r3, #32]
 80019f0:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80019f4:	d108      	bne.n	8001a08 <HAL_RCC_OscConfig+0x444>
 80019f6:	4b24      	ldr	r3, [pc, #144]	@ (8001a88 <HAL_RCC_OscConfig+0x4c4>)
 80019f8:	685b      	ldr	r3, [r3, #4]
 80019fa:	f423 3200 	bic.w	r2, r3, #131072	@ 0x20000
 80019fe:	687b      	ldr	r3, [r7, #4]
 8001a00:	689b      	ldr	r3, [r3, #8]
 8001a02:	4921      	ldr	r1, [pc, #132]	@ (8001a88 <HAL_RCC_OscConfig+0x4c4>)
 8001a04:	4313      	orrs	r3, r2
 8001a06:	604b      	str	r3, [r1, #4]
 8001a08:	4b1f      	ldr	r3, [pc, #124]	@ (8001a88 <HAL_RCC_OscConfig+0x4c4>)
 8001a0a:	685b      	ldr	r3, [r3, #4]
 8001a0c:	f423 1274 	bic.w	r2, r3, #3997696	@ 0x3d0000
 8001a10:	687b      	ldr	r3, [r7, #4]
 8001a12:	6a19      	ldr	r1, [r3, #32]
 8001a14:	687b      	ldr	r3, [r7, #4]
 8001a16:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001a18:	430b      	orrs	r3, r1
 8001a1a:	491b      	ldr	r1, [pc, #108]	@ (8001a88 <HAL_RCC_OscConfig+0x4c4>)
 8001a1c:	4313      	orrs	r3, r2
 8001a1e:	604b      	str	r3, [r1, #4]
 8001a20:	4b1b      	ldr	r3, [pc, #108]	@ (8001a90 <HAL_RCC_OscConfig+0x4cc>)
 8001a22:	2201      	movs	r2, #1
 8001a24:	601a      	str	r2, [r3, #0]
 8001a26:	f7ff fa09 	bl	8000e3c <HAL_GetTick>
 8001a2a:	6138      	str	r0, [r7, #16]
 8001a2c:	e008      	b.n	8001a40 <HAL_RCC_OscConfig+0x47c>
 8001a2e:	f7ff fa05 	bl	8000e3c <HAL_GetTick>
 8001a32:	4602      	mov	r2, r0
 8001a34:	693b      	ldr	r3, [r7, #16]
 8001a36:	1ad3      	subs	r3, r2, r3
 8001a38:	2b02      	cmp	r3, #2
 8001a3a:	d901      	bls.n	8001a40 <HAL_RCC_OscConfig+0x47c>
 8001a3c:	2303      	movs	r3, #3
 8001a3e:	e03d      	b.n	8001abc <HAL_RCC_OscConfig+0x4f8>
 8001a40:	4b11      	ldr	r3, [pc, #68]	@ (8001a88 <HAL_RCC_OscConfig+0x4c4>)
 8001a42:	681b      	ldr	r3, [r3, #0]
 8001a44:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8001a48:	2b00      	cmp	r3, #0
 8001a4a:	d0f0      	beq.n	8001a2e <HAL_RCC_OscConfig+0x46a>
 8001a4c:	e035      	b.n	8001aba <HAL_RCC_OscConfig+0x4f6>
 8001a4e:	4b10      	ldr	r3, [pc, #64]	@ (8001a90 <HAL_RCC_OscConfig+0x4cc>)
 8001a50:	2200      	movs	r2, #0
 8001a52:	601a      	str	r2, [r3, #0]
 8001a54:	f7ff f9f2 	bl	8000e3c <HAL_GetTick>
 8001a58:	6138      	str	r0, [r7, #16]
 8001a5a:	e008      	b.n	8001a6e <HAL_RCC_OscConfig+0x4aa>
 8001a5c:	f7ff f9ee 	bl	8000e3c <HAL_GetTick>
 8001a60:	4602      	mov	r2, r0
 8001a62:	693b      	ldr	r3, [r7, #16]
 8001a64:	1ad3      	subs	r3, r2, r3
 8001a66:	2b02      	cmp	r3, #2
 8001a68:	d901      	bls.n	8001a6e <HAL_RCC_OscConfig+0x4aa>
 8001a6a:	2303      	movs	r3, #3
 8001a6c:	e026      	b.n	8001abc <HAL_RCC_OscConfig+0x4f8>
 8001a6e:	4b06      	ldr	r3, [pc, #24]	@ (8001a88 <HAL_RCC_OscConfig+0x4c4>)
 8001a70:	681b      	ldr	r3, [r3, #0]
 8001a72:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8001a76:	2b00      	cmp	r3, #0
 8001a78:	d1f0      	bne.n	8001a5c <HAL_RCC_OscConfig+0x498>
 8001a7a:	e01e      	b.n	8001aba <HAL_RCC_OscConfig+0x4f6>
 8001a7c:	687b      	ldr	r3, [r7, #4]
 8001a7e:	69db      	ldr	r3, [r3, #28]
 8001a80:	2b01      	cmp	r3, #1
 8001a82:	d107      	bne.n	8001a94 <HAL_RCC_OscConfig+0x4d0>
 8001a84:	2301      	movs	r3, #1
 8001a86:	e019      	b.n	8001abc <HAL_RCC_OscConfig+0x4f8>
 8001a88:	40021000 	.word	0x40021000
 8001a8c:	40007000 	.word	0x40007000
 8001a90:	42420060 	.word	0x42420060
 8001a94:	4b0b      	ldr	r3, [pc, #44]	@ (8001ac4 <HAL_RCC_OscConfig+0x500>)
 8001a96:	685b      	ldr	r3, [r3, #4]
 8001a98:	60fb      	str	r3, [r7, #12]
 8001a9a:	68fb      	ldr	r3, [r7, #12]
 8001a9c:	f403 3280 	and.w	r2, r3, #65536	@ 0x10000
 8001aa0:	687b      	ldr	r3, [r7, #4]
 8001aa2:	6a1b      	ldr	r3, [r3, #32]
 8001aa4:	429a      	cmp	r2, r3
 8001aa6:	d106      	bne.n	8001ab6 <HAL_RCC_OscConfig+0x4f2>
 8001aa8:	68fb      	ldr	r3, [r7, #12]
 8001aaa:	f403 1270 	and.w	r2, r3, #3932160	@ 0x3c0000
 8001aae:	687b      	ldr	r3, [r7, #4]
 8001ab0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001ab2:	429a      	cmp	r2, r3
 8001ab4:	d001      	beq.n	8001aba <HAL_RCC_OscConfig+0x4f6>
 8001ab6:	2301      	movs	r3, #1
 8001ab8:	e000      	b.n	8001abc <HAL_RCC_OscConfig+0x4f8>
 8001aba:	2300      	movs	r3, #0
 8001abc:	4618      	mov	r0, r3
 8001abe:	3718      	adds	r7, #24
 8001ac0:	46bd      	mov	sp, r7
 8001ac2:	bd80      	pop	{r7, pc}
 8001ac4:	40021000 	.word	0x40021000

08001ac8 <HAL_RCC_ClockConfig>:
 8001ac8:	b580      	push	{r7, lr}
 8001aca:	b084      	sub	sp, #16
 8001acc:	af00      	add	r7, sp, #0
 8001ace:	6078      	str	r0, [r7, #4]
 8001ad0:	6039      	str	r1, [r7, #0]
 8001ad2:	687b      	ldr	r3, [r7, #4]
 8001ad4:	2b00      	cmp	r3, #0
 8001ad6:	d101      	bne.n	8001adc <HAL_RCC_ClockConfig+0x14>
 8001ad8:	2301      	movs	r3, #1
 8001ada:	e0d0      	b.n	8001c7e <HAL_RCC_ClockConfig+0x1b6>
 8001adc:	4b6a      	ldr	r3, [pc, #424]	@ (8001c88 <HAL_RCC_ClockConfig+0x1c0>)
 8001ade:	681b      	ldr	r3, [r3, #0]
 8001ae0:	f003 0307 	and.w	r3, r3, #7
 8001ae4:	683a      	ldr	r2, [r7, #0]
 8001ae6:	429a      	cmp	r2, r3
 8001ae8:	d910      	bls.n	8001b0c <HAL_RCC_ClockConfig+0x44>
 8001aea:	4b67      	ldr	r3, [pc, #412]	@ (8001c88 <HAL_RCC_ClockConfig+0x1c0>)
 8001aec:	681b      	ldr	r3, [r3, #0]
 8001aee:	f023 0207 	bic.w	r2, r3, #7
 8001af2:	4965      	ldr	r1, [pc, #404]	@ (8001c88 <HAL_RCC_ClockConfig+0x1c0>)
 8001af4:	683b      	ldr	r3, [r7, #0]
 8001af6:	4313      	orrs	r3, r2
 8001af8:	600b      	str	r3, [r1, #0]
 8001afa:	4b63      	ldr	r3, [pc, #396]	@ (8001c88 <HAL_RCC_ClockConfig+0x1c0>)
 8001afc:	681b      	ldr	r3, [r3, #0]
 8001afe:	f003 0307 	and.w	r3, r3, #7
 8001b02:	683a      	ldr	r2, [r7, #0]
 8001b04:	429a      	cmp	r2, r3
 8001b06:	d001      	beq.n	8001b0c <HAL_RCC_ClockConfig+0x44>
 8001b08:	2301      	movs	r3, #1
 8001b0a:	e0b8      	b.n	8001c7e <HAL_RCC_ClockConfig+0x1b6>
 8001b0c:	687b      	ldr	r3, [r7, #4]
 8001b0e:	681b      	ldr	r3, [r3, #0]
 8001b10:	f003 0302 	and.w	r3, r3, #2
 8001b14:	2b00      	cmp	r3, #0
 8001b16:	d020      	beq.n	8001b5a <HAL_RCC_ClockConfig+0x92>
 8001b18:	687b      	ldr	r3, [r7, #4]
 8001b1a:	681b      	ldr	r3, [r3, #0]
 8001b1c:	f003 0304 	and.w	r3, r3, #4
 8001b20:	2b00      	cmp	r3, #0
 8001b22:	d005      	beq.n	8001b30 <HAL_RCC_ClockConfig+0x68>
 8001b24:	4b59      	ldr	r3, [pc, #356]	@ (8001c8c <HAL_RCC_ClockConfig+0x1c4>)
 8001b26:	685b      	ldr	r3, [r3, #4]
 8001b28:	4a58      	ldr	r2, [pc, #352]	@ (8001c8c <HAL_RCC_ClockConfig+0x1c4>)
 8001b2a:	f443 63e0 	orr.w	r3, r3, #1792	@ 0x700
 8001b2e:	6053      	str	r3, [r2, #4]
 8001b30:	687b      	ldr	r3, [r7, #4]
 8001b32:	681b      	ldr	r3, [r3, #0]
 8001b34:	f003 0308 	and.w	r3, r3, #8
 8001b38:	2b00      	cmp	r3, #0
 8001b3a:	d005      	beq.n	8001b48 <HAL_RCC_ClockConfig+0x80>
 8001b3c:	4b53      	ldr	r3, [pc, #332]	@ (8001c8c <HAL_RCC_ClockConfig+0x1c4>)
 8001b3e:	685b      	ldr	r3, [r3, #4]
 8001b40:	4a52      	ldr	r2, [pc, #328]	@ (8001c8c <HAL_RCC_ClockConfig+0x1c4>)
 8001b42:	f443 5360 	orr.w	r3, r3, #14336	@ 0x3800
 8001b46:	6053      	str	r3, [r2, #4]
 8001b48:	4b50      	ldr	r3, [pc, #320]	@ (8001c8c <HAL_RCC_ClockConfig+0x1c4>)
 8001b4a:	685b      	ldr	r3, [r3, #4]
 8001b4c:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8001b50:	687b      	ldr	r3, [r7, #4]
 8001b52:	689b      	ldr	r3, [r3, #8]
 8001b54:	494d      	ldr	r1, [pc, #308]	@ (8001c8c <HAL_RCC_ClockConfig+0x1c4>)
 8001b56:	4313      	orrs	r3, r2
 8001b58:	604b      	str	r3, [r1, #4]
 8001b5a:	687b      	ldr	r3, [r7, #4]
 8001b5c:	681b      	ldr	r3, [r3, #0]
 8001b5e:	f003 0301 	and.w	r3, r3, #1
 8001b62:	2b00      	cmp	r3, #0
 8001b64:	d040      	beq.n	8001be8 <HAL_RCC_ClockConfig+0x120>
 8001b66:	687b      	ldr	r3, [r7, #4]
 8001b68:	685b      	ldr	r3, [r3, #4]
 8001b6a:	2b01      	cmp	r3, #1
 8001b6c:	d107      	bne.n	8001b7e <HAL_RCC_ClockConfig+0xb6>
 8001b6e:	4b47      	ldr	r3, [pc, #284]	@ (8001c8c <HAL_RCC_ClockConfig+0x1c4>)
 8001b70:	681b      	ldr	r3, [r3, #0]
 8001b72:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001b76:	2b00      	cmp	r3, #0
 8001b78:	d115      	bne.n	8001ba6 <HAL_RCC_ClockConfig+0xde>
 8001b7a:	2301      	movs	r3, #1
 8001b7c:	e07f      	b.n	8001c7e <HAL_RCC_ClockConfig+0x1b6>
 8001b7e:	687b      	ldr	r3, [r7, #4]
 8001b80:	685b      	ldr	r3, [r3, #4]
 8001b82:	2b02      	cmp	r3, #2
 8001b84:	d107      	bne.n	8001b96 <HAL_RCC_ClockConfig+0xce>
 8001b86:	4b41      	ldr	r3, [pc, #260]	@ (8001c8c <HAL_RCC_ClockConfig+0x1c4>)
 8001b88:	681b      	ldr	r3, [r3, #0]
 8001b8a:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8001b8e:	2b00      	cmp	r3, #0
 8001b90:	d109      	bne.n	8001ba6 <HAL_RCC_ClockConfig+0xde>
 8001b92:	2301      	movs	r3, #1
 8001b94:	e073      	b.n	8001c7e <HAL_RCC_ClockConfig+0x1b6>
 8001b96:	4b3d      	ldr	r3, [pc, #244]	@ (8001c8c <HAL_RCC_ClockConfig+0x1c4>)
 8001b98:	681b      	ldr	r3, [r3, #0]
 8001b9a:	f003 0302 	and.w	r3, r3, #2
 8001b9e:	2b00      	cmp	r3, #0
 8001ba0:	d101      	bne.n	8001ba6 <HAL_RCC_ClockConfig+0xde>
 8001ba2:	2301      	movs	r3, #1
 8001ba4:	e06b      	b.n	8001c7e <HAL_RCC_ClockConfig+0x1b6>
 8001ba6:	4b39      	ldr	r3, [pc, #228]	@ (8001c8c <HAL_RCC_ClockConfig+0x1c4>)
 8001ba8:	685b      	ldr	r3, [r3, #4]
 8001baa:	f023 0203 	bic.w	r2, r3, #3
 8001bae:	687b      	ldr	r3, [r7, #4]
 8001bb0:	685b      	ldr	r3, [r3, #4]
 8001bb2:	4936      	ldr	r1, [pc, #216]	@ (8001c8c <HAL_RCC_ClockConfig+0x1c4>)
 8001bb4:	4313      	orrs	r3, r2
 8001bb6:	604b      	str	r3, [r1, #4]
 8001bb8:	f7ff f940 	bl	8000e3c <HAL_GetTick>
 8001bbc:	60f8      	str	r0, [r7, #12]
 8001bbe:	e00a      	b.n	8001bd6 <HAL_RCC_ClockConfig+0x10e>
 8001bc0:	f7ff f93c 	bl	8000e3c <HAL_GetTick>
 8001bc4:	4602      	mov	r2, r0
 8001bc6:	68fb      	ldr	r3, [r7, #12]
 8001bc8:	1ad3      	subs	r3, r2, r3
 8001bca:	f241 3288 	movw	r2, #5000	@ 0x1388
 8001bce:	4293      	cmp	r3, r2
 8001bd0:	d901      	bls.n	8001bd6 <HAL_RCC_ClockConfig+0x10e>
 8001bd2:	2303      	movs	r3, #3
 8001bd4:	e053      	b.n	8001c7e <HAL_RCC_ClockConfig+0x1b6>
 8001bd6:	4b2d      	ldr	r3, [pc, #180]	@ (8001c8c <HAL_RCC_ClockConfig+0x1c4>)
 8001bd8:	685b      	ldr	r3, [r3, #4]
 8001bda:	f003 020c 	and.w	r2, r3, #12
 8001bde:	687b      	ldr	r3, [r7, #4]
 8001be0:	685b      	ldr	r3, [r3, #4]
 8001be2:	009b      	lsls	r3, r3, #2
 8001be4:	429a      	cmp	r2, r3
 8001be6:	d1eb      	bne.n	8001bc0 <HAL_RCC_ClockConfig+0xf8>
 8001be8:	4b27      	ldr	r3, [pc, #156]	@ (8001c88 <HAL_RCC_ClockConfig+0x1c0>)
 8001bea:	681b      	ldr	r3, [r3, #0]
 8001bec:	f003 0307 	and.w	r3, r3, #7
 8001bf0:	683a      	ldr	r2, [r7, #0]
 8001bf2:	429a      	cmp	r2, r3
 8001bf4:	d210      	bcs.n	8001c18 <HAL_RCC_ClockConfig+0x150>
 8001bf6:	4b24      	ldr	r3, [pc, #144]	@ (8001c88 <HAL_RCC_ClockConfig+0x1c0>)
 8001bf8:	681b      	ldr	r3, [r3, #0]
 8001bfa:	f023 0207 	bic.w	r2, r3, #7
 8001bfe:	4922      	ldr	r1, [pc, #136]	@ (8001c88 <HAL_RCC_ClockConfig+0x1c0>)
 8001c00:	683b      	ldr	r3, [r7, #0]
 8001c02:	4313      	orrs	r3, r2
 8001c04:	600b      	str	r3, [r1, #0]
 8001c06:	4b20      	ldr	r3, [pc, #128]	@ (8001c88 <HAL_RCC_ClockConfig+0x1c0>)
 8001c08:	681b      	ldr	r3, [r3, #0]
 8001c0a:	f003 0307 	and.w	r3, r3, #7
 8001c0e:	683a      	ldr	r2, [r7, #0]
 8001c10:	429a      	cmp	r2, r3
 8001c12:	d001      	beq.n	8001c18 <HAL_RCC_ClockConfig+0x150>
 8001c14:	2301      	movs	r3, #1
 8001c16:	e032      	b.n	8001c7e <HAL_RCC_ClockConfig+0x1b6>
 8001c18:	687b      	ldr	r3, [r7, #4]
 8001c1a:	681b      	ldr	r3, [r3, #0]
 8001c1c:	f003 0304 	and.w	r3, r3, #4
 8001c20:	2b00      	cmp	r3, #0
 8001c22:	d008      	beq.n	8001c36 <HAL_RCC_ClockConfig+0x16e>
 8001c24:	4b19      	ldr	r3, [pc, #100]	@ (8001c8c <HAL_RCC_ClockConfig+0x1c4>)
 8001c26:	685b      	ldr	r3, [r3, #4]
 8001c28:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 8001c2c:	687b      	ldr	r3, [r7, #4]
 8001c2e:	68db      	ldr	r3, [r3, #12]
 8001c30:	4916      	ldr	r1, [pc, #88]	@ (8001c8c <HAL_RCC_ClockConfig+0x1c4>)
 8001c32:	4313      	orrs	r3, r2
 8001c34:	604b      	str	r3, [r1, #4]
 8001c36:	687b      	ldr	r3, [r7, #4]
 8001c38:	681b      	ldr	r3, [r3, #0]
 8001c3a:	f003 0308 	and.w	r3, r3, #8
 8001c3e:	2b00      	cmp	r3, #0
 8001c40:	d009      	beq.n	8001c56 <HAL_RCC_ClockConfig+0x18e>
 8001c42:	4b12      	ldr	r3, [pc, #72]	@ (8001c8c <HAL_RCC_ClockConfig+0x1c4>)
 8001c44:	685b      	ldr	r3, [r3, #4]
 8001c46:	f423 5260 	bic.w	r2, r3, #14336	@ 0x3800
 8001c4a:	687b      	ldr	r3, [r7, #4]
 8001c4c:	691b      	ldr	r3, [r3, #16]
 8001c4e:	00db      	lsls	r3, r3, #3
 8001c50:	490e      	ldr	r1, [pc, #56]	@ (8001c8c <HAL_RCC_ClockConfig+0x1c4>)
 8001c52:	4313      	orrs	r3, r2
 8001c54:	604b      	str	r3, [r1, #4]
 8001c56:	f000 f821 	bl	8001c9c <HAL_RCC_GetSysClockFreq>
 8001c5a:	4602      	mov	r2, r0
 8001c5c:	4b0b      	ldr	r3, [pc, #44]	@ (8001c8c <HAL_RCC_ClockConfig+0x1c4>)
 8001c5e:	685b      	ldr	r3, [r3, #4]
 8001c60:	091b      	lsrs	r3, r3, #4
 8001c62:	f003 030f 	and.w	r3, r3, #15
 8001c66:	490a      	ldr	r1, [pc, #40]	@ (8001c90 <HAL_RCC_ClockConfig+0x1c8>)
 8001c68:	5ccb      	ldrb	r3, [r1, r3]
 8001c6a:	fa22 f303 	lsr.w	r3, r2, r3
 8001c6e:	4a09      	ldr	r2, [pc, #36]	@ (8001c94 <HAL_RCC_ClockConfig+0x1cc>)
 8001c70:	6013      	str	r3, [r2, #0]
 8001c72:	4b09      	ldr	r3, [pc, #36]	@ (8001c98 <HAL_RCC_ClockConfig+0x1d0>)
 8001c74:	681b      	ldr	r3, [r3, #0]
 8001c76:	4618      	mov	r0, r3
 8001c78:	f7ff f89e 	bl	8000db8 <HAL_InitTick>
 8001c7c:	2300      	movs	r3, #0
 8001c7e:	4618      	mov	r0, r3
 8001c80:	3710      	adds	r7, #16
 8001c82:	46bd      	mov	sp, r7
 8001c84:	bd80      	pop	{r7, pc}
 8001c86:	bf00      	nop
 8001c88:	40022000 	.word	0x40022000
 8001c8c:	40021000 	.word	0x40021000
 8001c90:	0800504c 	.word	0x0800504c
 8001c94:	20000018 	.word	0x20000018
 8001c98:	2000001c 	.word	0x2000001c

08001c9c <HAL_RCC_GetSysClockFreq>:
 8001c9c:	b480      	push	{r7}
 8001c9e:	b087      	sub	sp, #28
 8001ca0:	af00      	add	r7, sp, #0
 8001ca2:	2300      	movs	r3, #0
 8001ca4:	60fb      	str	r3, [r7, #12]
 8001ca6:	2300      	movs	r3, #0
 8001ca8:	60bb      	str	r3, [r7, #8]
 8001caa:	2300      	movs	r3, #0
 8001cac:	617b      	str	r3, [r7, #20]
 8001cae:	2300      	movs	r3, #0
 8001cb0:	607b      	str	r3, [r7, #4]
 8001cb2:	2300      	movs	r3, #0
 8001cb4:	613b      	str	r3, [r7, #16]
 8001cb6:	4b1e      	ldr	r3, [pc, #120]	@ (8001d30 <HAL_RCC_GetSysClockFreq+0x94>)
 8001cb8:	685b      	ldr	r3, [r3, #4]
 8001cba:	60fb      	str	r3, [r7, #12]
 8001cbc:	68fb      	ldr	r3, [r7, #12]
 8001cbe:	f003 030c 	and.w	r3, r3, #12
 8001cc2:	2b04      	cmp	r3, #4
 8001cc4:	d002      	beq.n	8001ccc <HAL_RCC_GetSysClockFreq+0x30>
 8001cc6:	2b08      	cmp	r3, #8
 8001cc8:	d003      	beq.n	8001cd2 <HAL_RCC_GetSysClockFreq+0x36>
 8001cca:	e027      	b.n	8001d1c <HAL_RCC_GetSysClockFreq+0x80>
 8001ccc:	4b19      	ldr	r3, [pc, #100]	@ (8001d34 <HAL_RCC_GetSysClockFreq+0x98>)
 8001cce:	613b      	str	r3, [r7, #16]
 8001cd0:	e027      	b.n	8001d22 <HAL_RCC_GetSysClockFreq+0x86>
 8001cd2:	68fb      	ldr	r3, [r7, #12]
 8001cd4:	0c9b      	lsrs	r3, r3, #18
 8001cd6:	f003 030f 	and.w	r3, r3, #15
 8001cda:	4a17      	ldr	r2, [pc, #92]	@ (8001d38 <HAL_RCC_GetSysClockFreq+0x9c>)
 8001cdc:	5cd3      	ldrb	r3, [r2, r3]
 8001cde:	607b      	str	r3, [r7, #4]
 8001ce0:	68fb      	ldr	r3, [r7, #12]
 8001ce2:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8001ce6:	2b00      	cmp	r3, #0
 8001ce8:	d010      	beq.n	8001d0c <HAL_RCC_GetSysClockFreq+0x70>
 8001cea:	4b11      	ldr	r3, [pc, #68]	@ (8001d30 <HAL_RCC_GetSysClockFreq+0x94>)
 8001cec:	685b      	ldr	r3, [r3, #4]
 8001cee:	0c5b      	lsrs	r3, r3, #17
 8001cf0:	f003 0301 	and.w	r3, r3, #1
 8001cf4:	4a11      	ldr	r2, [pc, #68]	@ (8001d3c <HAL_RCC_GetSysClockFreq+0xa0>)
 8001cf6:	5cd3      	ldrb	r3, [r2, r3]
 8001cf8:	60bb      	str	r3, [r7, #8]
 8001cfa:	687b      	ldr	r3, [r7, #4]
 8001cfc:	4a0d      	ldr	r2, [pc, #52]	@ (8001d34 <HAL_RCC_GetSysClockFreq+0x98>)
 8001cfe:	fb03 f202 	mul.w	r2, r3, r2
 8001d02:	68bb      	ldr	r3, [r7, #8]
 8001d04:	fbb2 f3f3 	udiv	r3, r2, r3
 8001d08:	617b      	str	r3, [r7, #20]
 8001d0a:	e004      	b.n	8001d16 <HAL_RCC_GetSysClockFreq+0x7a>
 8001d0c:	687b      	ldr	r3, [r7, #4]
 8001d0e:	4a0c      	ldr	r2, [pc, #48]	@ (8001d40 <HAL_RCC_GetSysClockFreq+0xa4>)
 8001d10:	fb02 f303 	mul.w	r3, r2, r3
 8001d14:	617b      	str	r3, [r7, #20]
 8001d16:	697b      	ldr	r3, [r7, #20]
 8001d18:	613b      	str	r3, [r7, #16]
 8001d1a:	e002      	b.n	8001d22 <HAL_RCC_GetSysClockFreq+0x86>
 8001d1c:	4b05      	ldr	r3, [pc, #20]	@ (8001d34 <HAL_RCC_GetSysClockFreq+0x98>)
 8001d1e:	613b      	str	r3, [r7, #16]
 8001d20:	bf00      	nop
 8001d22:	693b      	ldr	r3, [r7, #16]
 8001d24:	4618      	mov	r0, r3
 8001d26:	371c      	adds	r7, #28
 8001d28:	46bd      	mov	sp, r7
 8001d2a:	bc80      	pop	{r7}
 8001d2c:	4770      	bx	lr
 8001d2e:	bf00      	nop
 8001d30:	40021000 	.word	0x40021000
 8001d34:	007a1200 	.word	0x007a1200
 8001d38:	08005064 	.word	0x08005064
 8001d3c:	08005074 	.word	0x08005074
 8001d40:	003d0900 	.word	0x003d0900

08001d44 <HAL_RCC_GetHCLKFreq>:
 8001d44:	b480      	push	{r7}
 8001d46:	af00      	add	r7, sp, #0
 8001d48:	4b02      	ldr	r3, [pc, #8]	@ (8001d54 <HAL_RCC_GetHCLKFreq+0x10>)
 8001d4a:	681b      	ldr	r3, [r3, #0]
 8001d4c:	4618      	mov	r0, r3
 8001d4e:	46bd      	mov	sp, r7
 8001d50:	bc80      	pop	{r7}
 8001d52:	4770      	bx	lr
 8001d54:	20000018 	.word	0x20000018

08001d58 <HAL_RCC_GetPCLK1Freq>:
 8001d58:	b580      	push	{r7, lr}
 8001d5a:	af00      	add	r7, sp, #0
 8001d5c:	f7ff fff2 	bl	8001d44 <HAL_RCC_GetHCLKFreq>
 8001d60:	4602      	mov	r2, r0
 8001d62:	4b05      	ldr	r3, [pc, #20]	@ (8001d78 <HAL_RCC_GetPCLK1Freq+0x20>)
 8001d64:	685b      	ldr	r3, [r3, #4]
 8001d66:	0a1b      	lsrs	r3, r3, #8
 8001d68:	f003 0307 	and.w	r3, r3, #7
 8001d6c:	4903      	ldr	r1, [pc, #12]	@ (8001d7c <HAL_RCC_GetPCLK1Freq+0x24>)
 8001d6e:	5ccb      	ldrb	r3, [r1, r3]
 8001d70:	fa22 f303 	lsr.w	r3, r2, r3
 8001d74:	4618      	mov	r0, r3
 8001d76:	bd80      	pop	{r7, pc}
 8001d78:	40021000 	.word	0x40021000
 8001d7c:	0800505c 	.word	0x0800505c

08001d80 <HAL_RCC_GetPCLK2Freq>:
 8001d80:	b580      	push	{r7, lr}
 8001d82:	af00      	add	r7, sp, #0
 8001d84:	f7ff ffde 	bl	8001d44 <HAL_RCC_GetHCLKFreq>
 8001d88:	4602      	mov	r2, r0
 8001d8a:	4b05      	ldr	r3, [pc, #20]	@ (8001da0 <HAL_RCC_GetPCLK2Freq+0x20>)
 8001d8c:	685b      	ldr	r3, [r3, #4]
 8001d8e:	0adb      	lsrs	r3, r3, #11
 8001d90:	f003 0307 	and.w	r3, r3, #7
 8001d94:	4903      	ldr	r1, [pc, #12]	@ (8001da4 <HAL_RCC_GetPCLK2Freq+0x24>)
 8001d96:	5ccb      	ldrb	r3, [r1, r3]
 8001d98:	fa22 f303 	lsr.w	r3, r2, r3
 8001d9c:	4618      	mov	r0, r3
 8001d9e:	bd80      	pop	{r7, pc}
 8001da0:	40021000 	.word	0x40021000
 8001da4:	0800505c 	.word	0x0800505c

08001da8 <RCC_Delay>:
 8001da8:	b480      	push	{r7}
 8001daa:	b085      	sub	sp, #20
 8001dac:	af00      	add	r7, sp, #0
 8001dae:	6078      	str	r0, [r7, #4]
 8001db0:	4b0a      	ldr	r3, [pc, #40]	@ (8001ddc <RCC_Delay+0x34>)
 8001db2:	681b      	ldr	r3, [r3, #0]
 8001db4:	4a0a      	ldr	r2, [pc, #40]	@ (8001de0 <RCC_Delay+0x38>)
 8001db6:	fba2 2303 	umull	r2, r3, r2, r3
 8001dba:	0a5b      	lsrs	r3, r3, #9
 8001dbc:	687a      	ldr	r2, [r7, #4]
 8001dbe:	fb02 f303 	mul.w	r3, r2, r3
 8001dc2:	60fb      	str	r3, [r7, #12]
 8001dc4:	bf00      	nop
 8001dc6:	68fb      	ldr	r3, [r7, #12]
 8001dc8:	1e5a      	subs	r2, r3, #1
 8001dca:	60fa      	str	r2, [r7, #12]
 8001dcc:	2b00      	cmp	r3, #0
 8001dce:	d1f9      	bne.n	8001dc4 <RCC_Delay+0x1c>
 8001dd0:	bf00      	nop
 8001dd2:	bf00      	nop
 8001dd4:	3714      	adds	r7, #20
 8001dd6:	46bd      	mov	sp, r7
 8001dd8:	bc80      	pop	{r7}
 8001dda:	4770      	bx	lr
 8001ddc:	20000018 	.word	0x20000018
 8001de0:	10624dd3 	.word	0x10624dd3

08001de4 <HAL_TIM_Base_Init>:
 8001de4:	b580      	push	{r7, lr}
 8001de6:	b082      	sub	sp, #8
 8001de8:	af00      	add	r7, sp, #0
 8001dea:	6078      	str	r0, [r7, #4]
 8001dec:	687b      	ldr	r3, [r7, #4]
 8001dee:	2b00      	cmp	r3, #0
 8001df0:	d101      	bne.n	8001df6 <HAL_TIM_Base_Init+0x12>
 8001df2:	2301      	movs	r3, #1
 8001df4:	e041      	b.n	8001e7a <HAL_TIM_Base_Init+0x96>
 8001df6:	687b      	ldr	r3, [r7, #4]
 8001df8:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8001dfc:	b2db      	uxtb	r3, r3
 8001dfe:	2b00      	cmp	r3, #0
 8001e00:	d106      	bne.n	8001e10 <HAL_TIM_Base_Init+0x2c>
 8001e02:	687b      	ldr	r3, [r7, #4]
 8001e04:	2200      	movs	r2, #0
 8001e06:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8001e0a:	6878      	ldr	r0, [r7, #4]
 8001e0c:	f7fe fe8c 	bl	8000b28 <HAL_TIM_Base_MspInit>
 8001e10:	687b      	ldr	r3, [r7, #4]
 8001e12:	2202      	movs	r2, #2
 8001e14:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8001e18:	687b      	ldr	r3, [r7, #4]
 8001e1a:	681a      	ldr	r2, [r3, #0]
 8001e1c:	687b      	ldr	r3, [r7, #4]
 8001e1e:	3304      	adds	r3, #4
 8001e20:	4619      	mov	r1, r3
 8001e22:	4610      	mov	r0, r2
 8001e24:	f000 f8f4 	bl	8002010 <TIM_Base_SetConfig>
 8001e28:	687b      	ldr	r3, [r7, #4]
 8001e2a:	2201      	movs	r2, #1
 8001e2c:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8001e30:	687b      	ldr	r3, [r7, #4]
 8001e32:	2201      	movs	r2, #1
 8001e34:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8001e38:	687b      	ldr	r3, [r7, #4]
 8001e3a:	2201      	movs	r2, #1
 8001e3c:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8001e40:	687b      	ldr	r3, [r7, #4]
 8001e42:	2201      	movs	r2, #1
 8001e44:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8001e48:	687b      	ldr	r3, [r7, #4]
 8001e4a:	2201      	movs	r2, #1
 8001e4c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8001e50:	687b      	ldr	r3, [r7, #4]
 8001e52:	2201      	movs	r2, #1
 8001e54:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8001e58:	687b      	ldr	r3, [r7, #4]
 8001e5a:	2201      	movs	r2, #1
 8001e5c:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8001e60:	687b      	ldr	r3, [r7, #4]
 8001e62:	2201      	movs	r2, #1
 8001e64:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8001e68:	687b      	ldr	r3, [r7, #4]
 8001e6a:	2201      	movs	r2, #1
 8001e6c:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8001e70:	687b      	ldr	r3, [r7, #4]
 8001e72:	2201      	movs	r2, #1
 8001e74:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8001e78:	2300      	movs	r3, #0
 8001e7a:	4618      	mov	r0, r3
 8001e7c:	3708      	adds	r7, #8
 8001e7e:	46bd      	mov	sp, r7
 8001e80:	bd80      	pop	{r7, pc}

08001e82 <HAL_TIM_ConfigClockSource>:
 8001e82:	b580      	push	{r7, lr}
 8001e84:	b084      	sub	sp, #16
 8001e86:	af00      	add	r7, sp, #0
 8001e88:	6078      	str	r0, [r7, #4]
 8001e8a:	6039      	str	r1, [r7, #0]
 8001e8c:	2300      	movs	r3, #0
 8001e8e:	73fb      	strb	r3, [r7, #15]
 8001e90:	687b      	ldr	r3, [r7, #4]
 8001e92:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8001e96:	2b01      	cmp	r3, #1
 8001e98:	d101      	bne.n	8001e9e <HAL_TIM_ConfigClockSource+0x1c>
 8001e9a:	2302      	movs	r3, #2
 8001e9c:	e0b4      	b.n	8002008 <HAL_TIM_ConfigClockSource+0x186>
 8001e9e:	687b      	ldr	r3, [r7, #4]
 8001ea0:	2201      	movs	r2, #1
 8001ea2:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8001ea6:	687b      	ldr	r3, [r7, #4]
 8001ea8:	2202      	movs	r2, #2
 8001eaa:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8001eae:	687b      	ldr	r3, [r7, #4]
 8001eb0:	681b      	ldr	r3, [r3, #0]
 8001eb2:	689b      	ldr	r3, [r3, #8]
 8001eb4:	60bb      	str	r3, [r7, #8]
 8001eb6:	68bb      	ldr	r3, [r7, #8]
 8001eb8:	f023 0377 	bic.w	r3, r3, #119	@ 0x77
 8001ebc:	60bb      	str	r3, [r7, #8]
 8001ebe:	68bb      	ldr	r3, [r7, #8]
 8001ec0:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8001ec4:	60bb      	str	r3, [r7, #8]
 8001ec6:	687b      	ldr	r3, [r7, #4]
 8001ec8:	681b      	ldr	r3, [r3, #0]
 8001eca:	68ba      	ldr	r2, [r7, #8]
 8001ecc:	609a      	str	r2, [r3, #8]
 8001ece:	683b      	ldr	r3, [r7, #0]
 8001ed0:	681b      	ldr	r3, [r3, #0]
 8001ed2:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8001ed6:	d03e      	beq.n	8001f56 <HAL_TIM_ConfigClockSource+0xd4>
 8001ed8:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8001edc:	f200 8087 	bhi.w	8001fee <HAL_TIM_ConfigClockSource+0x16c>
 8001ee0:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8001ee4:	f000 8086 	beq.w	8001ff4 <HAL_TIM_ConfigClockSource+0x172>
 8001ee8:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8001eec:	d87f      	bhi.n	8001fee <HAL_TIM_ConfigClockSource+0x16c>
 8001eee:	2b70      	cmp	r3, #112	@ 0x70
 8001ef0:	d01a      	beq.n	8001f28 <HAL_TIM_ConfigClockSource+0xa6>
 8001ef2:	2b70      	cmp	r3, #112	@ 0x70
 8001ef4:	d87b      	bhi.n	8001fee <HAL_TIM_ConfigClockSource+0x16c>
 8001ef6:	2b60      	cmp	r3, #96	@ 0x60
 8001ef8:	d050      	beq.n	8001f9c <HAL_TIM_ConfigClockSource+0x11a>
 8001efa:	2b60      	cmp	r3, #96	@ 0x60
 8001efc:	d877      	bhi.n	8001fee <HAL_TIM_ConfigClockSource+0x16c>
 8001efe:	2b50      	cmp	r3, #80	@ 0x50
 8001f00:	d03c      	beq.n	8001f7c <HAL_TIM_ConfigClockSource+0xfa>
 8001f02:	2b50      	cmp	r3, #80	@ 0x50
 8001f04:	d873      	bhi.n	8001fee <HAL_TIM_ConfigClockSource+0x16c>
 8001f06:	2b40      	cmp	r3, #64	@ 0x40
 8001f08:	d058      	beq.n	8001fbc <HAL_TIM_ConfigClockSource+0x13a>
 8001f0a:	2b40      	cmp	r3, #64	@ 0x40
 8001f0c:	d86f      	bhi.n	8001fee <HAL_TIM_ConfigClockSource+0x16c>
 8001f0e:	2b30      	cmp	r3, #48	@ 0x30
 8001f10:	d064      	beq.n	8001fdc <HAL_TIM_ConfigClockSource+0x15a>
 8001f12:	2b30      	cmp	r3, #48	@ 0x30
 8001f14:	d86b      	bhi.n	8001fee <HAL_TIM_ConfigClockSource+0x16c>
 8001f16:	2b20      	cmp	r3, #32
 8001f18:	d060      	beq.n	8001fdc <HAL_TIM_ConfigClockSource+0x15a>
 8001f1a:	2b20      	cmp	r3, #32
 8001f1c:	d867      	bhi.n	8001fee <HAL_TIM_ConfigClockSource+0x16c>
 8001f1e:	2b00      	cmp	r3, #0
 8001f20:	d05c      	beq.n	8001fdc <HAL_TIM_ConfigClockSource+0x15a>
 8001f22:	2b10      	cmp	r3, #16
 8001f24:	d05a      	beq.n	8001fdc <HAL_TIM_ConfigClockSource+0x15a>
 8001f26:	e062      	b.n	8001fee <HAL_TIM_ConfigClockSource+0x16c>
 8001f28:	687b      	ldr	r3, [r7, #4]
 8001f2a:	6818      	ldr	r0, [r3, #0]
 8001f2c:	683b      	ldr	r3, [r7, #0]
 8001f2e:	6899      	ldr	r1, [r3, #8]
 8001f30:	683b      	ldr	r3, [r7, #0]
 8001f32:	685a      	ldr	r2, [r3, #4]
 8001f34:	683b      	ldr	r3, [r7, #0]
 8001f36:	68db      	ldr	r3, [r3, #12]
 8001f38:	f000 f94f 	bl	80021da <TIM_ETR_SetConfig>
 8001f3c:	687b      	ldr	r3, [r7, #4]
 8001f3e:	681b      	ldr	r3, [r3, #0]
 8001f40:	689b      	ldr	r3, [r3, #8]
 8001f42:	60bb      	str	r3, [r7, #8]
 8001f44:	68bb      	ldr	r3, [r7, #8]
 8001f46:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 8001f4a:	60bb      	str	r3, [r7, #8]
 8001f4c:	687b      	ldr	r3, [r7, #4]
 8001f4e:	681b      	ldr	r3, [r3, #0]
 8001f50:	68ba      	ldr	r2, [r7, #8]
 8001f52:	609a      	str	r2, [r3, #8]
 8001f54:	e04f      	b.n	8001ff6 <HAL_TIM_ConfigClockSource+0x174>
 8001f56:	687b      	ldr	r3, [r7, #4]
 8001f58:	6818      	ldr	r0, [r3, #0]
 8001f5a:	683b      	ldr	r3, [r7, #0]
 8001f5c:	6899      	ldr	r1, [r3, #8]
 8001f5e:	683b      	ldr	r3, [r7, #0]
 8001f60:	685a      	ldr	r2, [r3, #4]
 8001f62:	683b      	ldr	r3, [r7, #0]
 8001f64:	68db      	ldr	r3, [r3, #12]
 8001f66:	f000 f938 	bl	80021da <TIM_ETR_SetConfig>
 8001f6a:	687b      	ldr	r3, [r7, #4]
 8001f6c:	681b      	ldr	r3, [r3, #0]
 8001f6e:	689a      	ldr	r2, [r3, #8]
 8001f70:	687b      	ldr	r3, [r7, #4]
 8001f72:	681b      	ldr	r3, [r3, #0]
 8001f74:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8001f78:	609a      	str	r2, [r3, #8]
 8001f7a:	e03c      	b.n	8001ff6 <HAL_TIM_ConfigClockSource+0x174>
 8001f7c:	687b      	ldr	r3, [r7, #4]
 8001f7e:	6818      	ldr	r0, [r3, #0]
 8001f80:	683b      	ldr	r3, [r7, #0]
 8001f82:	6859      	ldr	r1, [r3, #4]
 8001f84:	683b      	ldr	r3, [r7, #0]
 8001f86:	68db      	ldr	r3, [r3, #12]
 8001f88:	461a      	mov	r2, r3
 8001f8a:	f000 f8af 	bl	80020ec <TIM_TI1_ConfigInputStage>
 8001f8e:	687b      	ldr	r3, [r7, #4]
 8001f90:	681b      	ldr	r3, [r3, #0]
 8001f92:	2150      	movs	r1, #80	@ 0x50
 8001f94:	4618      	mov	r0, r3
 8001f96:	f000 f906 	bl	80021a6 <TIM_ITRx_SetConfig>
 8001f9a:	e02c      	b.n	8001ff6 <HAL_TIM_ConfigClockSource+0x174>
 8001f9c:	687b      	ldr	r3, [r7, #4]
 8001f9e:	6818      	ldr	r0, [r3, #0]
 8001fa0:	683b      	ldr	r3, [r7, #0]
 8001fa2:	6859      	ldr	r1, [r3, #4]
 8001fa4:	683b      	ldr	r3, [r7, #0]
 8001fa6:	68db      	ldr	r3, [r3, #12]
 8001fa8:	461a      	mov	r2, r3
 8001faa:	f000 f8cd 	bl	8002148 <TIM_TI2_ConfigInputStage>
 8001fae:	687b      	ldr	r3, [r7, #4]
 8001fb0:	681b      	ldr	r3, [r3, #0]
 8001fb2:	2160      	movs	r1, #96	@ 0x60
 8001fb4:	4618      	mov	r0, r3
 8001fb6:	f000 f8f6 	bl	80021a6 <TIM_ITRx_SetConfig>
 8001fba:	e01c      	b.n	8001ff6 <HAL_TIM_ConfigClockSource+0x174>
 8001fbc:	687b      	ldr	r3, [r7, #4]
 8001fbe:	6818      	ldr	r0, [r3, #0]
 8001fc0:	683b      	ldr	r3, [r7, #0]
 8001fc2:	6859      	ldr	r1, [r3, #4]
 8001fc4:	683b      	ldr	r3, [r7, #0]
 8001fc6:	68db      	ldr	r3, [r3, #12]
 8001fc8:	461a      	mov	r2, r3
 8001fca:	f000 f88f 	bl	80020ec <TIM_TI1_ConfigInputStage>
 8001fce:	687b      	ldr	r3, [r7, #4]
 8001fd0:	681b      	ldr	r3, [r3, #0]
 8001fd2:	2140      	movs	r1, #64	@ 0x40
 8001fd4:	4618      	mov	r0, r3
 8001fd6:	f000 f8e6 	bl	80021a6 <TIM_ITRx_SetConfig>
 8001fda:	e00c      	b.n	8001ff6 <HAL_TIM_ConfigClockSource+0x174>
 8001fdc:	687b      	ldr	r3, [r7, #4]
 8001fde:	681a      	ldr	r2, [r3, #0]
 8001fe0:	683b      	ldr	r3, [r7, #0]
 8001fe2:	681b      	ldr	r3, [r3, #0]
 8001fe4:	4619      	mov	r1, r3
 8001fe6:	4610      	mov	r0, r2
 8001fe8:	f000 f8dd 	bl	80021a6 <TIM_ITRx_SetConfig>
 8001fec:	e003      	b.n	8001ff6 <HAL_TIM_ConfigClockSource+0x174>
 8001fee:	2301      	movs	r3, #1
 8001ff0:	73fb      	strb	r3, [r7, #15]
 8001ff2:	e000      	b.n	8001ff6 <HAL_TIM_ConfigClockSource+0x174>
 8001ff4:	bf00      	nop
 8001ff6:	687b      	ldr	r3, [r7, #4]
 8001ff8:	2201      	movs	r2, #1
 8001ffa:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8001ffe:	687b      	ldr	r3, [r7, #4]
 8002000:	2200      	movs	r2, #0
 8002002:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002006:	7bfb      	ldrb	r3, [r7, #15]
 8002008:	4618      	mov	r0, r3
 800200a:	3710      	adds	r7, #16
 800200c:	46bd      	mov	sp, r7
 800200e:	bd80      	pop	{r7, pc}

08002010 <TIM_Base_SetConfig>:
 8002010:	b480      	push	{r7}
 8002012:	b085      	sub	sp, #20
 8002014:	af00      	add	r7, sp, #0
 8002016:	6078      	str	r0, [r7, #4]
 8002018:	6039      	str	r1, [r7, #0]
 800201a:	687b      	ldr	r3, [r7, #4]
 800201c:	681b      	ldr	r3, [r3, #0]
 800201e:	60fb      	str	r3, [r7, #12]
 8002020:	687b      	ldr	r3, [r7, #4]
 8002022:	4a2f      	ldr	r2, [pc, #188]	@ (80020e0 <TIM_Base_SetConfig+0xd0>)
 8002024:	4293      	cmp	r3, r2
 8002026:	d00b      	beq.n	8002040 <TIM_Base_SetConfig+0x30>
 8002028:	687b      	ldr	r3, [r7, #4]
 800202a:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800202e:	d007      	beq.n	8002040 <TIM_Base_SetConfig+0x30>
 8002030:	687b      	ldr	r3, [r7, #4]
 8002032:	4a2c      	ldr	r2, [pc, #176]	@ (80020e4 <TIM_Base_SetConfig+0xd4>)
 8002034:	4293      	cmp	r3, r2
 8002036:	d003      	beq.n	8002040 <TIM_Base_SetConfig+0x30>
 8002038:	687b      	ldr	r3, [r7, #4]
 800203a:	4a2b      	ldr	r2, [pc, #172]	@ (80020e8 <TIM_Base_SetConfig+0xd8>)
 800203c:	4293      	cmp	r3, r2
 800203e:	d108      	bne.n	8002052 <TIM_Base_SetConfig+0x42>
 8002040:	68fb      	ldr	r3, [r7, #12]
 8002042:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8002046:	60fb      	str	r3, [r7, #12]
 8002048:	683b      	ldr	r3, [r7, #0]
 800204a:	685b      	ldr	r3, [r3, #4]
 800204c:	68fa      	ldr	r2, [r7, #12]
 800204e:	4313      	orrs	r3, r2
 8002050:	60fb      	str	r3, [r7, #12]
 8002052:	687b      	ldr	r3, [r7, #4]
 8002054:	4a22      	ldr	r2, [pc, #136]	@ (80020e0 <TIM_Base_SetConfig+0xd0>)
 8002056:	4293      	cmp	r3, r2
 8002058:	d00b      	beq.n	8002072 <TIM_Base_SetConfig+0x62>
 800205a:	687b      	ldr	r3, [r7, #4]
 800205c:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8002060:	d007      	beq.n	8002072 <TIM_Base_SetConfig+0x62>
 8002062:	687b      	ldr	r3, [r7, #4]
 8002064:	4a1f      	ldr	r2, [pc, #124]	@ (80020e4 <TIM_Base_SetConfig+0xd4>)
 8002066:	4293      	cmp	r3, r2
 8002068:	d003      	beq.n	8002072 <TIM_Base_SetConfig+0x62>
 800206a:	687b      	ldr	r3, [r7, #4]
 800206c:	4a1e      	ldr	r2, [pc, #120]	@ (80020e8 <TIM_Base_SetConfig+0xd8>)
 800206e:	4293      	cmp	r3, r2
 8002070:	d108      	bne.n	8002084 <TIM_Base_SetConfig+0x74>
 8002072:	68fb      	ldr	r3, [r7, #12]
 8002074:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8002078:	60fb      	str	r3, [r7, #12]
 800207a:	683b      	ldr	r3, [r7, #0]
 800207c:	68db      	ldr	r3, [r3, #12]
 800207e:	68fa      	ldr	r2, [r7, #12]
 8002080:	4313      	orrs	r3, r2
 8002082:	60fb      	str	r3, [r7, #12]
 8002084:	68fb      	ldr	r3, [r7, #12]
 8002086:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 800208a:	683b      	ldr	r3, [r7, #0]
 800208c:	695b      	ldr	r3, [r3, #20]
 800208e:	4313      	orrs	r3, r2
 8002090:	60fb      	str	r3, [r7, #12]
 8002092:	687b      	ldr	r3, [r7, #4]
 8002094:	68fa      	ldr	r2, [r7, #12]
 8002096:	601a      	str	r2, [r3, #0]
 8002098:	683b      	ldr	r3, [r7, #0]
 800209a:	689a      	ldr	r2, [r3, #8]
 800209c:	687b      	ldr	r3, [r7, #4]
 800209e:	62da      	str	r2, [r3, #44]	@ 0x2c
 80020a0:	683b      	ldr	r3, [r7, #0]
 80020a2:	681a      	ldr	r2, [r3, #0]
 80020a4:	687b      	ldr	r3, [r7, #4]
 80020a6:	629a      	str	r2, [r3, #40]	@ 0x28
 80020a8:	687b      	ldr	r3, [r7, #4]
 80020aa:	4a0d      	ldr	r2, [pc, #52]	@ (80020e0 <TIM_Base_SetConfig+0xd0>)
 80020ac:	4293      	cmp	r3, r2
 80020ae:	d103      	bne.n	80020b8 <TIM_Base_SetConfig+0xa8>
 80020b0:	683b      	ldr	r3, [r7, #0]
 80020b2:	691a      	ldr	r2, [r3, #16]
 80020b4:	687b      	ldr	r3, [r7, #4]
 80020b6:	631a      	str	r2, [r3, #48]	@ 0x30
 80020b8:	687b      	ldr	r3, [r7, #4]
 80020ba:	2201      	movs	r2, #1
 80020bc:	615a      	str	r2, [r3, #20]
 80020be:	687b      	ldr	r3, [r7, #4]
 80020c0:	691b      	ldr	r3, [r3, #16]
 80020c2:	f003 0301 	and.w	r3, r3, #1
 80020c6:	2b00      	cmp	r3, #0
 80020c8:	d005      	beq.n	80020d6 <TIM_Base_SetConfig+0xc6>
 80020ca:	687b      	ldr	r3, [r7, #4]
 80020cc:	691b      	ldr	r3, [r3, #16]
 80020ce:	f023 0201 	bic.w	r2, r3, #1
 80020d2:	687b      	ldr	r3, [r7, #4]
 80020d4:	611a      	str	r2, [r3, #16]
 80020d6:	bf00      	nop
 80020d8:	3714      	adds	r7, #20
 80020da:	46bd      	mov	sp, r7
 80020dc:	bc80      	pop	{r7}
 80020de:	4770      	bx	lr
 80020e0:	40012c00 	.word	0x40012c00
 80020e4:	40000400 	.word	0x40000400
 80020e8:	40000800 	.word	0x40000800

080020ec <TIM_TI1_ConfigInputStage>:
 80020ec:	b480      	push	{r7}
 80020ee:	b087      	sub	sp, #28
 80020f0:	af00      	add	r7, sp, #0
 80020f2:	60f8      	str	r0, [r7, #12]
 80020f4:	60b9      	str	r1, [r7, #8]
 80020f6:	607a      	str	r2, [r7, #4]
 80020f8:	68fb      	ldr	r3, [r7, #12]
 80020fa:	6a1b      	ldr	r3, [r3, #32]
 80020fc:	617b      	str	r3, [r7, #20]
 80020fe:	68fb      	ldr	r3, [r7, #12]
 8002100:	6a1b      	ldr	r3, [r3, #32]
 8002102:	f023 0201 	bic.w	r2, r3, #1
 8002106:	68fb      	ldr	r3, [r7, #12]
 8002108:	621a      	str	r2, [r3, #32]
 800210a:	68fb      	ldr	r3, [r7, #12]
 800210c:	699b      	ldr	r3, [r3, #24]
 800210e:	613b      	str	r3, [r7, #16]
 8002110:	693b      	ldr	r3, [r7, #16]
 8002112:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8002116:	613b      	str	r3, [r7, #16]
 8002118:	687b      	ldr	r3, [r7, #4]
 800211a:	011b      	lsls	r3, r3, #4
 800211c:	693a      	ldr	r2, [r7, #16]
 800211e:	4313      	orrs	r3, r2
 8002120:	613b      	str	r3, [r7, #16]
 8002122:	697b      	ldr	r3, [r7, #20]
 8002124:	f023 030a 	bic.w	r3, r3, #10
 8002128:	617b      	str	r3, [r7, #20]
 800212a:	697a      	ldr	r2, [r7, #20]
 800212c:	68bb      	ldr	r3, [r7, #8]
 800212e:	4313      	orrs	r3, r2
 8002130:	617b      	str	r3, [r7, #20]
 8002132:	68fb      	ldr	r3, [r7, #12]
 8002134:	693a      	ldr	r2, [r7, #16]
 8002136:	619a      	str	r2, [r3, #24]
 8002138:	68fb      	ldr	r3, [r7, #12]
 800213a:	697a      	ldr	r2, [r7, #20]
 800213c:	621a      	str	r2, [r3, #32]
 800213e:	bf00      	nop
 8002140:	371c      	adds	r7, #28
 8002142:	46bd      	mov	sp, r7
 8002144:	bc80      	pop	{r7}
 8002146:	4770      	bx	lr

08002148 <TIM_TI2_ConfigInputStage>:
 8002148:	b480      	push	{r7}
 800214a:	b087      	sub	sp, #28
 800214c:	af00      	add	r7, sp, #0
 800214e:	60f8      	str	r0, [r7, #12]
 8002150:	60b9      	str	r1, [r7, #8]
 8002152:	607a      	str	r2, [r7, #4]
 8002154:	68fb      	ldr	r3, [r7, #12]
 8002156:	6a1b      	ldr	r3, [r3, #32]
 8002158:	617b      	str	r3, [r7, #20]
 800215a:	68fb      	ldr	r3, [r7, #12]
 800215c:	6a1b      	ldr	r3, [r3, #32]
 800215e:	f023 0210 	bic.w	r2, r3, #16
 8002162:	68fb      	ldr	r3, [r7, #12]
 8002164:	621a      	str	r2, [r3, #32]
 8002166:	68fb      	ldr	r3, [r7, #12]
 8002168:	699b      	ldr	r3, [r3, #24]
 800216a:	613b      	str	r3, [r7, #16]
 800216c:	693b      	ldr	r3, [r7, #16]
 800216e:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8002172:	613b      	str	r3, [r7, #16]
 8002174:	687b      	ldr	r3, [r7, #4]
 8002176:	031b      	lsls	r3, r3, #12
 8002178:	693a      	ldr	r2, [r7, #16]
 800217a:	4313      	orrs	r3, r2
 800217c:	613b      	str	r3, [r7, #16]
 800217e:	697b      	ldr	r3, [r7, #20]
 8002180:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 8002184:	617b      	str	r3, [r7, #20]
 8002186:	68bb      	ldr	r3, [r7, #8]
 8002188:	011b      	lsls	r3, r3, #4
 800218a:	697a      	ldr	r2, [r7, #20]
 800218c:	4313      	orrs	r3, r2
 800218e:	617b      	str	r3, [r7, #20]
 8002190:	68fb      	ldr	r3, [r7, #12]
 8002192:	693a      	ldr	r2, [r7, #16]
 8002194:	619a      	str	r2, [r3, #24]
 8002196:	68fb      	ldr	r3, [r7, #12]
 8002198:	697a      	ldr	r2, [r7, #20]
 800219a:	621a      	str	r2, [r3, #32]
 800219c:	bf00      	nop
 800219e:	371c      	adds	r7, #28
 80021a0:	46bd      	mov	sp, r7
 80021a2:	bc80      	pop	{r7}
 80021a4:	4770      	bx	lr

080021a6 <TIM_ITRx_SetConfig>:
 80021a6:	b480      	push	{r7}
 80021a8:	b085      	sub	sp, #20
 80021aa:	af00      	add	r7, sp, #0
 80021ac:	6078      	str	r0, [r7, #4]
 80021ae:	6039      	str	r1, [r7, #0]
 80021b0:	687b      	ldr	r3, [r7, #4]
 80021b2:	689b      	ldr	r3, [r3, #8]
 80021b4:	60fb      	str	r3, [r7, #12]
 80021b6:	68fb      	ldr	r3, [r7, #12]
 80021b8:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80021bc:	60fb      	str	r3, [r7, #12]
 80021be:	683a      	ldr	r2, [r7, #0]
 80021c0:	68fb      	ldr	r3, [r7, #12]
 80021c2:	4313      	orrs	r3, r2
 80021c4:	f043 0307 	orr.w	r3, r3, #7
 80021c8:	60fb      	str	r3, [r7, #12]
 80021ca:	687b      	ldr	r3, [r7, #4]
 80021cc:	68fa      	ldr	r2, [r7, #12]
 80021ce:	609a      	str	r2, [r3, #8]
 80021d0:	bf00      	nop
 80021d2:	3714      	adds	r7, #20
 80021d4:	46bd      	mov	sp, r7
 80021d6:	bc80      	pop	{r7}
 80021d8:	4770      	bx	lr

080021da <TIM_ETR_SetConfig>:
 80021da:	b480      	push	{r7}
 80021dc:	b087      	sub	sp, #28
 80021de:	af00      	add	r7, sp, #0
 80021e0:	60f8      	str	r0, [r7, #12]
 80021e2:	60b9      	str	r1, [r7, #8]
 80021e4:	607a      	str	r2, [r7, #4]
 80021e6:	603b      	str	r3, [r7, #0]
 80021e8:	68fb      	ldr	r3, [r7, #12]
 80021ea:	689b      	ldr	r3, [r3, #8]
 80021ec:	617b      	str	r3, [r7, #20]
 80021ee:	697b      	ldr	r3, [r7, #20]
 80021f0:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 80021f4:	617b      	str	r3, [r7, #20]
 80021f6:	683b      	ldr	r3, [r7, #0]
 80021f8:	021a      	lsls	r2, r3, #8
 80021fa:	687b      	ldr	r3, [r7, #4]
 80021fc:	431a      	orrs	r2, r3
 80021fe:	68bb      	ldr	r3, [r7, #8]
 8002200:	4313      	orrs	r3, r2
 8002202:	697a      	ldr	r2, [r7, #20]
 8002204:	4313      	orrs	r3, r2
 8002206:	617b      	str	r3, [r7, #20]
 8002208:	68fb      	ldr	r3, [r7, #12]
 800220a:	697a      	ldr	r2, [r7, #20]
 800220c:	609a      	str	r2, [r3, #8]
 800220e:	bf00      	nop
 8002210:	371c      	adds	r7, #28
 8002212:	46bd      	mov	sp, r7
 8002214:	bc80      	pop	{r7}
 8002216:	4770      	bx	lr

08002218 <HAL_TIMEx_MasterConfigSynchronization>:
 8002218:	b480      	push	{r7}
 800221a:	b085      	sub	sp, #20
 800221c:	af00      	add	r7, sp, #0
 800221e:	6078      	str	r0, [r7, #4]
 8002220:	6039      	str	r1, [r7, #0]
 8002222:	687b      	ldr	r3, [r7, #4]
 8002224:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8002228:	2b01      	cmp	r3, #1
 800222a:	d101      	bne.n	8002230 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 800222c:	2302      	movs	r3, #2
 800222e:	e046      	b.n	80022be <HAL_TIMEx_MasterConfigSynchronization+0xa6>
 8002230:	687b      	ldr	r3, [r7, #4]
 8002232:	2201      	movs	r2, #1
 8002234:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002238:	687b      	ldr	r3, [r7, #4]
 800223a:	2202      	movs	r2, #2
 800223c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002240:	687b      	ldr	r3, [r7, #4]
 8002242:	681b      	ldr	r3, [r3, #0]
 8002244:	685b      	ldr	r3, [r3, #4]
 8002246:	60fb      	str	r3, [r7, #12]
 8002248:	687b      	ldr	r3, [r7, #4]
 800224a:	681b      	ldr	r3, [r3, #0]
 800224c:	689b      	ldr	r3, [r3, #8]
 800224e:	60bb      	str	r3, [r7, #8]
 8002250:	68fb      	ldr	r3, [r7, #12]
 8002252:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8002256:	60fb      	str	r3, [r7, #12]
 8002258:	683b      	ldr	r3, [r7, #0]
 800225a:	681b      	ldr	r3, [r3, #0]
 800225c:	68fa      	ldr	r2, [r7, #12]
 800225e:	4313      	orrs	r3, r2
 8002260:	60fb      	str	r3, [r7, #12]
 8002262:	687b      	ldr	r3, [r7, #4]
 8002264:	681b      	ldr	r3, [r3, #0]
 8002266:	68fa      	ldr	r2, [r7, #12]
 8002268:	605a      	str	r2, [r3, #4]
 800226a:	687b      	ldr	r3, [r7, #4]
 800226c:	681b      	ldr	r3, [r3, #0]
 800226e:	4a16      	ldr	r2, [pc, #88]	@ (80022c8 <HAL_TIMEx_MasterConfigSynchronization+0xb0>)
 8002270:	4293      	cmp	r3, r2
 8002272:	d00e      	beq.n	8002292 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8002274:	687b      	ldr	r3, [r7, #4]
 8002276:	681b      	ldr	r3, [r3, #0]
 8002278:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800227c:	d009      	beq.n	8002292 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 800227e:	687b      	ldr	r3, [r7, #4]
 8002280:	681b      	ldr	r3, [r3, #0]
 8002282:	4a12      	ldr	r2, [pc, #72]	@ (80022cc <HAL_TIMEx_MasterConfigSynchronization+0xb4>)
 8002284:	4293      	cmp	r3, r2
 8002286:	d004      	beq.n	8002292 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8002288:	687b      	ldr	r3, [r7, #4]
 800228a:	681b      	ldr	r3, [r3, #0]
 800228c:	4a10      	ldr	r2, [pc, #64]	@ (80022d0 <HAL_TIMEx_MasterConfigSynchronization+0xb8>)
 800228e:	4293      	cmp	r3, r2
 8002290:	d10c      	bne.n	80022ac <HAL_TIMEx_MasterConfigSynchronization+0x94>
 8002292:	68bb      	ldr	r3, [r7, #8]
 8002294:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8002298:	60bb      	str	r3, [r7, #8]
 800229a:	683b      	ldr	r3, [r7, #0]
 800229c:	685b      	ldr	r3, [r3, #4]
 800229e:	68ba      	ldr	r2, [r7, #8]
 80022a0:	4313      	orrs	r3, r2
 80022a2:	60bb      	str	r3, [r7, #8]
 80022a4:	687b      	ldr	r3, [r7, #4]
 80022a6:	681b      	ldr	r3, [r3, #0]
 80022a8:	68ba      	ldr	r2, [r7, #8]
 80022aa:	609a      	str	r2, [r3, #8]
 80022ac:	687b      	ldr	r3, [r7, #4]
 80022ae:	2201      	movs	r2, #1
 80022b0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80022b4:	687b      	ldr	r3, [r7, #4]
 80022b6:	2200      	movs	r2, #0
 80022b8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80022bc:	2300      	movs	r3, #0
 80022be:	4618      	mov	r0, r3
 80022c0:	3714      	adds	r7, #20
 80022c2:	46bd      	mov	sp, r7
 80022c4:	bc80      	pop	{r7}
 80022c6:	4770      	bx	lr
 80022c8:	40012c00 	.word	0x40012c00
 80022cc:	40000400 	.word	0x40000400
 80022d0:	40000800 	.word	0x40000800

080022d4 <HAL_UART_Init>:
 80022d4:	b580      	push	{r7, lr}
 80022d6:	b082      	sub	sp, #8
 80022d8:	af00      	add	r7, sp, #0
 80022da:	6078      	str	r0, [r7, #4]
 80022dc:	687b      	ldr	r3, [r7, #4]
 80022de:	2b00      	cmp	r3, #0
 80022e0:	d101      	bne.n	80022e6 <HAL_UART_Init+0x12>
 80022e2:	2301      	movs	r3, #1
 80022e4:	e042      	b.n	800236c <HAL_UART_Init+0x98>
 80022e6:	687b      	ldr	r3, [r7, #4]
 80022e8:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80022ec:	b2db      	uxtb	r3, r3
 80022ee:	2b00      	cmp	r3, #0
 80022f0:	d106      	bne.n	8002300 <HAL_UART_Init+0x2c>
 80022f2:	687b      	ldr	r3, [r7, #4]
 80022f4:	2200      	movs	r2, #0
 80022f6:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80022fa:	6878      	ldr	r0, [r7, #4]
 80022fc:	f7fe fc30 	bl	8000b60 <HAL_UART_MspInit>
 8002300:	687b      	ldr	r3, [r7, #4]
 8002302:	2224      	movs	r2, #36	@ 0x24
 8002304:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8002308:	687b      	ldr	r3, [r7, #4]
 800230a:	681b      	ldr	r3, [r3, #0]
 800230c:	68da      	ldr	r2, [r3, #12]
 800230e:	687b      	ldr	r3, [r7, #4]
 8002310:	681b      	ldr	r3, [r3, #0]
 8002312:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8002316:	60da      	str	r2, [r3, #12]
 8002318:	6878      	ldr	r0, [r7, #4]
 800231a:	f000 fdf9 	bl	8002f10 <UART_SetConfig>
 800231e:	687b      	ldr	r3, [r7, #4]
 8002320:	681b      	ldr	r3, [r3, #0]
 8002322:	691a      	ldr	r2, [r3, #16]
 8002324:	687b      	ldr	r3, [r7, #4]
 8002326:	681b      	ldr	r3, [r3, #0]
 8002328:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 800232c:	611a      	str	r2, [r3, #16]
 800232e:	687b      	ldr	r3, [r7, #4]
 8002330:	681b      	ldr	r3, [r3, #0]
 8002332:	695a      	ldr	r2, [r3, #20]
 8002334:	687b      	ldr	r3, [r7, #4]
 8002336:	681b      	ldr	r3, [r3, #0]
 8002338:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 800233c:	615a      	str	r2, [r3, #20]
 800233e:	687b      	ldr	r3, [r7, #4]
 8002340:	681b      	ldr	r3, [r3, #0]
 8002342:	68da      	ldr	r2, [r3, #12]
 8002344:	687b      	ldr	r3, [r7, #4]
 8002346:	681b      	ldr	r3, [r3, #0]
 8002348:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 800234c:	60da      	str	r2, [r3, #12]
 800234e:	687b      	ldr	r3, [r7, #4]
 8002350:	2200      	movs	r2, #0
 8002352:	645a      	str	r2, [r3, #68]	@ 0x44
 8002354:	687b      	ldr	r3, [r7, #4]
 8002356:	2220      	movs	r2, #32
 8002358:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800235c:	687b      	ldr	r3, [r7, #4]
 800235e:	2220      	movs	r2, #32
 8002360:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8002364:	687b      	ldr	r3, [r7, #4]
 8002366:	2200      	movs	r2, #0
 8002368:	635a      	str	r2, [r3, #52]	@ 0x34
 800236a:	2300      	movs	r3, #0
 800236c:	4618      	mov	r0, r3
 800236e:	3708      	adds	r7, #8
 8002370:	46bd      	mov	sp, r7
 8002372:	bd80      	pop	{r7, pc}

08002374 <HAL_UART_Transmit>:
 8002374:	b580      	push	{r7, lr}
 8002376:	b08a      	sub	sp, #40	@ 0x28
 8002378:	af02      	add	r7, sp, #8
 800237a:	60f8      	str	r0, [r7, #12]
 800237c:	60b9      	str	r1, [r7, #8]
 800237e:	603b      	str	r3, [r7, #0]
 8002380:	4613      	mov	r3, r2
 8002382:	80fb      	strh	r3, [r7, #6]
 8002384:	2300      	movs	r3, #0
 8002386:	617b      	str	r3, [r7, #20]
 8002388:	68fb      	ldr	r3, [r7, #12]
 800238a:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 800238e:	b2db      	uxtb	r3, r3
 8002390:	2b20      	cmp	r3, #32
 8002392:	d175      	bne.n	8002480 <HAL_UART_Transmit+0x10c>
 8002394:	68bb      	ldr	r3, [r7, #8]
 8002396:	2b00      	cmp	r3, #0
 8002398:	d002      	beq.n	80023a0 <HAL_UART_Transmit+0x2c>
 800239a:	88fb      	ldrh	r3, [r7, #6]
 800239c:	2b00      	cmp	r3, #0
 800239e:	d101      	bne.n	80023a4 <HAL_UART_Transmit+0x30>
 80023a0:	2301      	movs	r3, #1
 80023a2:	e06e      	b.n	8002482 <HAL_UART_Transmit+0x10e>
 80023a4:	68fb      	ldr	r3, [r7, #12]
 80023a6:	2200      	movs	r2, #0
 80023a8:	645a      	str	r2, [r3, #68]	@ 0x44
 80023aa:	68fb      	ldr	r3, [r7, #12]
 80023ac:	2221      	movs	r2, #33	@ 0x21
 80023ae:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80023b2:	f7fe fd43 	bl	8000e3c <HAL_GetTick>
 80023b6:	6178      	str	r0, [r7, #20]
 80023b8:	68fb      	ldr	r3, [r7, #12]
 80023ba:	88fa      	ldrh	r2, [r7, #6]
 80023bc:	849a      	strh	r2, [r3, #36]	@ 0x24
 80023be:	68fb      	ldr	r3, [r7, #12]
 80023c0:	88fa      	ldrh	r2, [r7, #6]
 80023c2:	84da      	strh	r2, [r3, #38]	@ 0x26
 80023c4:	68fb      	ldr	r3, [r7, #12]
 80023c6:	689b      	ldr	r3, [r3, #8]
 80023c8:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80023cc:	d108      	bne.n	80023e0 <HAL_UART_Transmit+0x6c>
 80023ce:	68fb      	ldr	r3, [r7, #12]
 80023d0:	691b      	ldr	r3, [r3, #16]
 80023d2:	2b00      	cmp	r3, #0
 80023d4:	d104      	bne.n	80023e0 <HAL_UART_Transmit+0x6c>
 80023d6:	2300      	movs	r3, #0
 80023d8:	61fb      	str	r3, [r7, #28]
 80023da:	68bb      	ldr	r3, [r7, #8]
 80023dc:	61bb      	str	r3, [r7, #24]
 80023de:	e003      	b.n	80023e8 <HAL_UART_Transmit+0x74>
 80023e0:	68bb      	ldr	r3, [r7, #8]
 80023e2:	61fb      	str	r3, [r7, #28]
 80023e4:	2300      	movs	r3, #0
 80023e6:	61bb      	str	r3, [r7, #24]
 80023e8:	e02e      	b.n	8002448 <HAL_UART_Transmit+0xd4>
 80023ea:	683b      	ldr	r3, [r7, #0]
 80023ec:	9300      	str	r3, [sp, #0]
 80023ee:	697b      	ldr	r3, [r7, #20]
 80023f0:	2200      	movs	r2, #0
 80023f2:	2180      	movs	r1, #128	@ 0x80
 80023f4:	68f8      	ldr	r0, [r7, #12]
 80023f6:	f000 fb97 	bl	8002b28 <UART_WaitOnFlagUntilTimeout>
 80023fa:	4603      	mov	r3, r0
 80023fc:	2b00      	cmp	r3, #0
 80023fe:	d005      	beq.n	800240c <HAL_UART_Transmit+0x98>
 8002400:	68fb      	ldr	r3, [r7, #12]
 8002402:	2220      	movs	r2, #32
 8002404:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8002408:	2303      	movs	r3, #3
 800240a:	e03a      	b.n	8002482 <HAL_UART_Transmit+0x10e>
 800240c:	69fb      	ldr	r3, [r7, #28]
 800240e:	2b00      	cmp	r3, #0
 8002410:	d10b      	bne.n	800242a <HAL_UART_Transmit+0xb6>
 8002412:	69bb      	ldr	r3, [r7, #24]
 8002414:	881b      	ldrh	r3, [r3, #0]
 8002416:	461a      	mov	r2, r3
 8002418:	68fb      	ldr	r3, [r7, #12]
 800241a:	681b      	ldr	r3, [r3, #0]
 800241c:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8002420:	605a      	str	r2, [r3, #4]
 8002422:	69bb      	ldr	r3, [r7, #24]
 8002424:	3302      	adds	r3, #2
 8002426:	61bb      	str	r3, [r7, #24]
 8002428:	e007      	b.n	800243a <HAL_UART_Transmit+0xc6>
 800242a:	69fb      	ldr	r3, [r7, #28]
 800242c:	781a      	ldrb	r2, [r3, #0]
 800242e:	68fb      	ldr	r3, [r7, #12]
 8002430:	681b      	ldr	r3, [r3, #0]
 8002432:	605a      	str	r2, [r3, #4]
 8002434:	69fb      	ldr	r3, [r7, #28]
 8002436:	3301      	adds	r3, #1
 8002438:	61fb      	str	r3, [r7, #28]
 800243a:	68fb      	ldr	r3, [r7, #12]
 800243c:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 800243e:	b29b      	uxth	r3, r3
 8002440:	3b01      	subs	r3, #1
 8002442:	b29a      	uxth	r2, r3
 8002444:	68fb      	ldr	r3, [r7, #12]
 8002446:	84da      	strh	r2, [r3, #38]	@ 0x26
 8002448:	68fb      	ldr	r3, [r7, #12]
 800244a:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 800244c:	b29b      	uxth	r3, r3
 800244e:	2b00      	cmp	r3, #0
 8002450:	d1cb      	bne.n	80023ea <HAL_UART_Transmit+0x76>
 8002452:	683b      	ldr	r3, [r7, #0]
 8002454:	9300      	str	r3, [sp, #0]
 8002456:	697b      	ldr	r3, [r7, #20]
 8002458:	2200      	movs	r2, #0
 800245a:	2140      	movs	r1, #64	@ 0x40
 800245c:	68f8      	ldr	r0, [r7, #12]
 800245e:	f000 fb63 	bl	8002b28 <UART_WaitOnFlagUntilTimeout>
 8002462:	4603      	mov	r3, r0
 8002464:	2b00      	cmp	r3, #0
 8002466:	d005      	beq.n	8002474 <HAL_UART_Transmit+0x100>
 8002468:	68fb      	ldr	r3, [r7, #12]
 800246a:	2220      	movs	r2, #32
 800246c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8002470:	2303      	movs	r3, #3
 8002472:	e006      	b.n	8002482 <HAL_UART_Transmit+0x10e>
 8002474:	68fb      	ldr	r3, [r7, #12]
 8002476:	2220      	movs	r2, #32
 8002478:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800247c:	2300      	movs	r3, #0
 800247e:	e000      	b.n	8002482 <HAL_UART_Transmit+0x10e>
 8002480:	2302      	movs	r3, #2
 8002482:	4618      	mov	r0, r3
 8002484:	3720      	adds	r7, #32
 8002486:	46bd      	mov	sp, r7
 8002488:	bd80      	pop	{r7, pc}

0800248a <HAL_UART_Receive>:
 800248a:	b580      	push	{r7, lr}
 800248c:	b08a      	sub	sp, #40	@ 0x28
 800248e:	af02      	add	r7, sp, #8
 8002490:	60f8      	str	r0, [r7, #12]
 8002492:	60b9      	str	r1, [r7, #8]
 8002494:	603b      	str	r3, [r7, #0]
 8002496:	4613      	mov	r3, r2
 8002498:	80fb      	strh	r3, [r7, #6]
 800249a:	2300      	movs	r3, #0
 800249c:	617b      	str	r3, [r7, #20]
 800249e:	68fb      	ldr	r3, [r7, #12]
 80024a0:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 80024a4:	b2db      	uxtb	r3, r3
 80024a6:	2b20      	cmp	r3, #32
 80024a8:	f040 8081 	bne.w	80025ae <HAL_UART_Receive+0x124>
 80024ac:	68bb      	ldr	r3, [r7, #8]
 80024ae:	2b00      	cmp	r3, #0
 80024b0:	d002      	beq.n	80024b8 <HAL_UART_Receive+0x2e>
 80024b2:	88fb      	ldrh	r3, [r7, #6]
 80024b4:	2b00      	cmp	r3, #0
 80024b6:	d101      	bne.n	80024bc <HAL_UART_Receive+0x32>
 80024b8:	2301      	movs	r3, #1
 80024ba:	e079      	b.n	80025b0 <HAL_UART_Receive+0x126>
 80024bc:	68fb      	ldr	r3, [r7, #12]
 80024be:	2200      	movs	r2, #0
 80024c0:	645a      	str	r2, [r3, #68]	@ 0x44
 80024c2:	68fb      	ldr	r3, [r7, #12]
 80024c4:	2222      	movs	r2, #34	@ 0x22
 80024c6:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80024ca:	68fb      	ldr	r3, [r7, #12]
 80024cc:	2200      	movs	r2, #0
 80024ce:	631a      	str	r2, [r3, #48]	@ 0x30
 80024d0:	f7fe fcb4 	bl	8000e3c <HAL_GetTick>
 80024d4:	6178      	str	r0, [r7, #20]
 80024d6:	68fb      	ldr	r3, [r7, #12]
 80024d8:	88fa      	ldrh	r2, [r7, #6]
 80024da:	859a      	strh	r2, [r3, #44]	@ 0x2c
 80024dc:	68fb      	ldr	r3, [r7, #12]
 80024de:	88fa      	ldrh	r2, [r7, #6]
 80024e0:	85da      	strh	r2, [r3, #46]	@ 0x2e
 80024e2:	68fb      	ldr	r3, [r7, #12]
 80024e4:	689b      	ldr	r3, [r3, #8]
 80024e6:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80024ea:	d108      	bne.n	80024fe <HAL_UART_Receive+0x74>
 80024ec:	68fb      	ldr	r3, [r7, #12]
 80024ee:	691b      	ldr	r3, [r3, #16]
 80024f0:	2b00      	cmp	r3, #0
 80024f2:	d104      	bne.n	80024fe <HAL_UART_Receive+0x74>
 80024f4:	2300      	movs	r3, #0
 80024f6:	61fb      	str	r3, [r7, #28]
 80024f8:	68bb      	ldr	r3, [r7, #8]
 80024fa:	61bb      	str	r3, [r7, #24]
 80024fc:	e003      	b.n	8002506 <HAL_UART_Receive+0x7c>
 80024fe:	68bb      	ldr	r3, [r7, #8]
 8002500:	61fb      	str	r3, [r7, #28]
 8002502:	2300      	movs	r3, #0
 8002504:	61bb      	str	r3, [r7, #24]
 8002506:	e047      	b.n	8002598 <HAL_UART_Receive+0x10e>
 8002508:	683b      	ldr	r3, [r7, #0]
 800250a:	9300      	str	r3, [sp, #0]
 800250c:	697b      	ldr	r3, [r7, #20]
 800250e:	2200      	movs	r2, #0
 8002510:	2120      	movs	r1, #32
 8002512:	68f8      	ldr	r0, [r7, #12]
 8002514:	f000 fb08 	bl	8002b28 <UART_WaitOnFlagUntilTimeout>
 8002518:	4603      	mov	r3, r0
 800251a:	2b00      	cmp	r3, #0
 800251c:	d005      	beq.n	800252a <HAL_UART_Receive+0xa0>
 800251e:	68fb      	ldr	r3, [r7, #12]
 8002520:	2220      	movs	r2, #32
 8002522:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8002526:	2303      	movs	r3, #3
 8002528:	e042      	b.n	80025b0 <HAL_UART_Receive+0x126>
 800252a:	69fb      	ldr	r3, [r7, #28]
 800252c:	2b00      	cmp	r3, #0
 800252e:	d10c      	bne.n	800254a <HAL_UART_Receive+0xc0>
 8002530:	68fb      	ldr	r3, [r7, #12]
 8002532:	681b      	ldr	r3, [r3, #0]
 8002534:	685b      	ldr	r3, [r3, #4]
 8002536:	b29b      	uxth	r3, r3
 8002538:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800253c:	b29a      	uxth	r2, r3
 800253e:	69bb      	ldr	r3, [r7, #24]
 8002540:	801a      	strh	r2, [r3, #0]
 8002542:	69bb      	ldr	r3, [r7, #24]
 8002544:	3302      	adds	r3, #2
 8002546:	61bb      	str	r3, [r7, #24]
 8002548:	e01f      	b.n	800258a <HAL_UART_Receive+0x100>
 800254a:	68fb      	ldr	r3, [r7, #12]
 800254c:	689b      	ldr	r3, [r3, #8]
 800254e:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8002552:	d007      	beq.n	8002564 <HAL_UART_Receive+0xda>
 8002554:	68fb      	ldr	r3, [r7, #12]
 8002556:	689b      	ldr	r3, [r3, #8]
 8002558:	2b00      	cmp	r3, #0
 800255a:	d10a      	bne.n	8002572 <HAL_UART_Receive+0xe8>
 800255c:	68fb      	ldr	r3, [r7, #12]
 800255e:	691b      	ldr	r3, [r3, #16]
 8002560:	2b00      	cmp	r3, #0
 8002562:	d106      	bne.n	8002572 <HAL_UART_Receive+0xe8>
 8002564:	68fb      	ldr	r3, [r7, #12]
 8002566:	681b      	ldr	r3, [r3, #0]
 8002568:	685b      	ldr	r3, [r3, #4]
 800256a:	b2da      	uxtb	r2, r3
 800256c:	69fb      	ldr	r3, [r7, #28]
 800256e:	701a      	strb	r2, [r3, #0]
 8002570:	e008      	b.n	8002584 <HAL_UART_Receive+0xfa>
 8002572:	68fb      	ldr	r3, [r7, #12]
 8002574:	681b      	ldr	r3, [r3, #0]
 8002576:	685b      	ldr	r3, [r3, #4]
 8002578:	b2db      	uxtb	r3, r3
 800257a:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 800257e:	b2da      	uxtb	r2, r3
 8002580:	69fb      	ldr	r3, [r7, #28]
 8002582:	701a      	strb	r2, [r3, #0]
 8002584:	69fb      	ldr	r3, [r7, #28]
 8002586:	3301      	adds	r3, #1
 8002588:	61fb      	str	r3, [r7, #28]
 800258a:	68fb      	ldr	r3, [r7, #12]
 800258c:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 800258e:	b29b      	uxth	r3, r3
 8002590:	3b01      	subs	r3, #1
 8002592:	b29a      	uxth	r2, r3
 8002594:	68fb      	ldr	r3, [r7, #12]
 8002596:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8002598:	68fb      	ldr	r3, [r7, #12]
 800259a:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 800259c:	b29b      	uxth	r3, r3
 800259e:	2b00      	cmp	r3, #0
 80025a0:	d1b2      	bne.n	8002508 <HAL_UART_Receive+0x7e>
 80025a2:	68fb      	ldr	r3, [r7, #12]
 80025a4:	2220      	movs	r2, #32
 80025a6:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80025aa:	2300      	movs	r3, #0
 80025ac:	e000      	b.n	80025b0 <HAL_UART_Receive+0x126>
 80025ae:	2302      	movs	r3, #2
 80025b0:	4618      	mov	r0, r3
 80025b2:	3720      	adds	r7, #32
 80025b4:	46bd      	mov	sp, r7
 80025b6:	bd80      	pop	{r7, pc}

080025b8 <HAL_UART_IRQHandler>:
 80025b8:	b580      	push	{r7, lr}
 80025ba:	b0ba      	sub	sp, #232	@ 0xe8
 80025bc:	af00      	add	r7, sp, #0
 80025be:	6078      	str	r0, [r7, #4]
 80025c0:	687b      	ldr	r3, [r7, #4]
 80025c2:	681b      	ldr	r3, [r3, #0]
 80025c4:	681b      	ldr	r3, [r3, #0]
 80025c6:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 80025ca:	687b      	ldr	r3, [r7, #4]
 80025cc:	681b      	ldr	r3, [r3, #0]
 80025ce:	68db      	ldr	r3, [r3, #12]
 80025d0:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 80025d4:	687b      	ldr	r3, [r7, #4]
 80025d6:	681b      	ldr	r3, [r3, #0]
 80025d8:	695b      	ldr	r3, [r3, #20]
 80025da:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 80025de:	2300      	movs	r3, #0
 80025e0:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 80025e4:	2300      	movs	r3, #0
 80025e6:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 80025ea:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80025ee:	f003 030f 	and.w	r3, r3, #15
 80025f2:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 80025f6:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 80025fa:	2b00      	cmp	r3, #0
 80025fc:	d10f      	bne.n	800261e <HAL_UART_IRQHandler+0x66>
 80025fe:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8002602:	f003 0320 	and.w	r3, r3, #32
 8002606:	2b00      	cmp	r3, #0
 8002608:	d009      	beq.n	800261e <HAL_UART_IRQHandler+0x66>
 800260a:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 800260e:	f003 0320 	and.w	r3, r3, #32
 8002612:	2b00      	cmp	r3, #0
 8002614:	d003      	beq.n	800261e <HAL_UART_IRQHandler+0x66>
 8002616:	6878      	ldr	r0, [r7, #4]
 8002618:	f000 fbbc 	bl	8002d94 <UART_Receive_IT>
 800261c:	e25b      	b.n	8002ad6 <HAL_UART_IRQHandler+0x51e>
 800261e:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 8002622:	2b00      	cmp	r3, #0
 8002624:	f000 80de 	beq.w	80027e4 <HAL_UART_IRQHandler+0x22c>
 8002628:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 800262c:	f003 0301 	and.w	r3, r3, #1
 8002630:	2b00      	cmp	r3, #0
 8002632:	d106      	bne.n	8002642 <HAL_UART_IRQHandler+0x8a>
 8002634:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8002638:	f403 7390 	and.w	r3, r3, #288	@ 0x120
 800263c:	2b00      	cmp	r3, #0
 800263e:	f000 80d1 	beq.w	80027e4 <HAL_UART_IRQHandler+0x22c>
 8002642:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8002646:	f003 0301 	and.w	r3, r3, #1
 800264a:	2b00      	cmp	r3, #0
 800264c:	d00b      	beq.n	8002666 <HAL_UART_IRQHandler+0xae>
 800264e:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8002652:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002656:	2b00      	cmp	r3, #0
 8002658:	d005      	beq.n	8002666 <HAL_UART_IRQHandler+0xae>
 800265a:	687b      	ldr	r3, [r7, #4]
 800265c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800265e:	f043 0201 	orr.w	r2, r3, #1
 8002662:	687b      	ldr	r3, [r7, #4]
 8002664:	645a      	str	r2, [r3, #68]	@ 0x44
 8002666:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800266a:	f003 0304 	and.w	r3, r3, #4
 800266e:	2b00      	cmp	r3, #0
 8002670:	d00b      	beq.n	800268a <HAL_UART_IRQHandler+0xd2>
 8002672:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8002676:	f003 0301 	and.w	r3, r3, #1
 800267a:	2b00      	cmp	r3, #0
 800267c:	d005      	beq.n	800268a <HAL_UART_IRQHandler+0xd2>
 800267e:	687b      	ldr	r3, [r7, #4]
 8002680:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002682:	f043 0202 	orr.w	r2, r3, #2
 8002686:	687b      	ldr	r3, [r7, #4]
 8002688:	645a      	str	r2, [r3, #68]	@ 0x44
 800268a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800268e:	f003 0302 	and.w	r3, r3, #2
 8002692:	2b00      	cmp	r3, #0
 8002694:	d00b      	beq.n	80026ae <HAL_UART_IRQHandler+0xf6>
 8002696:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 800269a:	f003 0301 	and.w	r3, r3, #1
 800269e:	2b00      	cmp	r3, #0
 80026a0:	d005      	beq.n	80026ae <HAL_UART_IRQHandler+0xf6>
 80026a2:	687b      	ldr	r3, [r7, #4]
 80026a4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80026a6:	f043 0204 	orr.w	r2, r3, #4
 80026aa:	687b      	ldr	r3, [r7, #4]
 80026ac:	645a      	str	r2, [r3, #68]	@ 0x44
 80026ae:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80026b2:	f003 0308 	and.w	r3, r3, #8
 80026b6:	2b00      	cmp	r3, #0
 80026b8:	d011      	beq.n	80026de <HAL_UART_IRQHandler+0x126>
 80026ba:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80026be:	f003 0320 	and.w	r3, r3, #32
 80026c2:	2b00      	cmp	r3, #0
 80026c4:	d105      	bne.n	80026d2 <HAL_UART_IRQHandler+0x11a>
 80026c6:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 80026ca:	f003 0301 	and.w	r3, r3, #1
 80026ce:	2b00      	cmp	r3, #0
 80026d0:	d005      	beq.n	80026de <HAL_UART_IRQHandler+0x126>
 80026d2:	687b      	ldr	r3, [r7, #4]
 80026d4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80026d6:	f043 0208 	orr.w	r2, r3, #8
 80026da:	687b      	ldr	r3, [r7, #4]
 80026dc:	645a      	str	r2, [r3, #68]	@ 0x44
 80026de:	687b      	ldr	r3, [r7, #4]
 80026e0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80026e2:	2b00      	cmp	r3, #0
 80026e4:	f000 81f2 	beq.w	8002acc <HAL_UART_IRQHandler+0x514>
 80026e8:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80026ec:	f003 0320 	and.w	r3, r3, #32
 80026f0:	2b00      	cmp	r3, #0
 80026f2:	d008      	beq.n	8002706 <HAL_UART_IRQHandler+0x14e>
 80026f4:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80026f8:	f003 0320 	and.w	r3, r3, #32
 80026fc:	2b00      	cmp	r3, #0
 80026fe:	d002      	beq.n	8002706 <HAL_UART_IRQHandler+0x14e>
 8002700:	6878      	ldr	r0, [r7, #4]
 8002702:	f000 fb47 	bl	8002d94 <UART_Receive_IT>
 8002706:	687b      	ldr	r3, [r7, #4]
 8002708:	681b      	ldr	r3, [r3, #0]
 800270a:	695b      	ldr	r3, [r3, #20]
 800270c:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8002710:	2b00      	cmp	r3, #0
 8002712:	bf14      	ite	ne
 8002714:	2301      	movne	r3, #1
 8002716:	2300      	moveq	r3, #0
 8002718:	b2db      	uxtb	r3, r3
 800271a:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 800271e:	687b      	ldr	r3, [r7, #4]
 8002720:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002722:	f003 0308 	and.w	r3, r3, #8
 8002726:	2b00      	cmp	r3, #0
 8002728:	d103      	bne.n	8002732 <HAL_UART_IRQHandler+0x17a>
 800272a:	f8d7 30d4 	ldr.w	r3, [r7, #212]	@ 0xd4
 800272e:	2b00      	cmp	r3, #0
 8002730:	d04f      	beq.n	80027d2 <HAL_UART_IRQHandler+0x21a>
 8002732:	6878      	ldr	r0, [r7, #4]
 8002734:	f000 fa51 	bl	8002bda <UART_EndRxTransfer>
 8002738:	687b      	ldr	r3, [r7, #4]
 800273a:	681b      	ldr	r3, [r3, #0]
 800273c:	695b      	ldr	r3, [r3, #20]
 800273e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8002742:	2b00      	cmp	r3, #0
 8002744:	d041      	beq.n	80027ca <HAL_UART_IRQHandler+0x212>
 8002746:	687b      	ldr	r3, [r7, #4]
 8002748:	681b      	ldr	r3, [r3, #0]
 800274a:	3314      	adds	r3, #20
 800274c:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8002750:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 8002754:	e853 3f00 	ldrex	r3, [r3]
 8002758:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 800275c:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 8002760:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8002764:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8002768:	687b      	ldr	r3, [r7, #4]
 800276a:	681b      	ldr	r3, [r3, #0]
 800276c:	3314      	adds	r3, #20
 800276e:	f8d7 20d0 	ldr.w	r2, [r7, #208]	@ 0xd0
 8002772:	f8c7 20a8 	str.w	r2, [r7, #168]	@ 0xa8
 8002776:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 800277a:	f8d7 10a4 	ldr.w	r1, [r7, #164]	@ 0xa4
 800277e:	f8d7 20a8 	ldr.w	r2, [r7, #168]	@ 0xa8
 8002782:	e841 2300 	strex	r3, r2, [r1]
 8002786:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 800278a:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 800278e:	2b00      	cmp	r3, #0
 8002790:	d1d9      	bne.n	8002746 <HAL_UART_IRQHandler+0x18e>
 8002792:	687b      	ldr	r3, [r7, #4]
 8002794:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002796:	2b00      	cmp	r3, #0
 8002798:	d013      	beq.n	80027c2 <HAL_UART_IRQHandler+0x20a>
 800279a:	687b      	ldr	r3, [r7, #4]
 800279c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800279e:	4a7e      	ldr	r2, [pc, #504]	@ (8002998 <HAL_UART_IRQHandler+0x3e0>)
 80027a0:	635a      	str	r2, [r3, #52]	@ 0x34
 80027a2:	687b      	ldr	r3, [r7, #4]
 80027a4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80027a6:	4618      	mov	r0, r3
 80027a8:	f7fe fcbe 	bl	8001128 <HAL_DMA_Abort_IT>
 80027ac:	4603      	mov	r3, r0
 80027ae:	2b00      	cmp	r3, #0
 80027b0:	d016      	beq.n	80027e0 <HAL_UART_IRQHandler+0x228>
 80027b2:	687b      	ldr	r3, [r7, #4]
 80027b4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80027b6:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80027b8:	687a      	ldr	r2, [r7, #4]
 80027ba:	6bd2      	ldr	r2, [r2, #60]	@ 0x3c
 80027bc:	4610      	mov	r0, r2
 80027be:	4798      	blx	r3
 80027c0:	e00e      	b.n	80027e0 <HAL_UART_IRQHandler+0x228>
 80027c2:	6878      	ldr	r0, [r7, #4]
 80027c4:	f000 f99c 	bl	8002b00 <HAL_UART_ErrorCallback>
 80027c8:	e00a      	b.n	80027e0 <HAL_UART_IRQHandler+0x228>
 80027ca:	6878      	ldr	r0, [r7, #4]
 80027cc:	f000 f998 	bl	8002b00 <HAL_UART_ErrorCallback>
 80027d0:	e006      	b.n	80027e0 <HAL_UART_IRQHandler+0x228>
 80027d2:	6878      	ldr	r0, [r7, #4]
 80027d4:	f000 f994 	bl	8002b00 <HAL_UART_ErrorCallback>
 80027d8:	687b      	ldr	r3, [r7, #4]
 80027da:	2200      	movs	r2, #0
 80027dc:	645a      	str	r2, [r3, #68]	@ 0x44
 80027de:	e175      	b.n	8002acc <HAL_UART_IRQHandler+0x514>
 80027e0:	bf00      	nop
 80027e2:	e173      	b.n	8002acc <HAL_UART_IRQHandler+0x514>
 80027e4:	687b      	ldr	r3, [r7, #4]
 80027e6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80027e8:	2b01      	cmp	r3, #1
 80027ea:	f040 814f 	bne.w	8002a8c <HAL_UART_IRQHandler+0x4d4>
 80027ee:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80027f2:	f003 0310 	and.w	r3, r3, #16
 80027f6:	2b00      	cmp	r3, #0
 80027f8:	f000 8148 	beq.w	8002a8c <HAL_UART_IRQHandler+0x4d4>
 80027fc:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8002800:	f003 0310 	and.w	r3, r3, #16
 8002804:	2b00      	cmp	r3, #0
 8002806:	f000 8141 	beq.w	8002a8c <HAL_UART_IRQHandler+0x4d4>
 800280a:	2300      	movs	r3, #0
 800280c:	60bb      	str	r3, [r7, #8]
 800280e:	687b      	ldr	r3, [r7, #4]
 8002810:	681b      	ldr	r3, [r3, #0]
 8002812:	681b      	ldr	r3, [r3, #0]
 8002814:	60bb      	str	r3, [r7, #8]
 8002816:	687b      	ldr	r3, [r7, #4]
 8002818:	681b      	ldr	r3, [r3, #0]
 800281a:	685b      	ldr	r3, [r3, #4]
 800281c:	60bb      	str	r3, [r7, #8]
 800281e:	68bb      	ldr	r3, [r7, #8]
 8002820:	687b      	ldr	r3, [r7, #4]
 8002822:	681b      	ldr	r3, [r3, #0]
 8002824:	695b      	ldr	r3, [r3, #20]
 8002826:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800282a:	2b00      	cmp	r3, #0
 800282c:	f000 80b6 	beq.w	800299c <HAL_UART_IRQHandler+0x3e4>
 8002830:	687b      	ldr	r3, [r7, #4]
 8002832:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002834:	681b      	ldr	r3, [r3, #0]
 8002836:	685b      	ldr	r3, [r3, #4]
 8002838:	f8a7 30be 	strh.w	r3, [r7, #190]	@ 0xbe
 800283c:	f8b7 30be 	ldrh.w	r3, [r7, #190]	@ 0xbe
 8002840:	2b00      	cmp	r3, #0
 8002842:	f000 8145 	beq.w	8002ad0 <HAL_UART_IRQHandler+0x518>
 8002846:	687b      	ldr	r3, [r7, #4]
 8002848:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 800284a:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 800284e:	429a      	cmp	r2, r3
 8002850:	f080 813e 	bcs.w	8002ad0 <HAL_UART_IRQHandler+0x518>
 8002854:	687b      	ldr	r3, [r7, #4]
 8002856:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 800285a:	85da      	strh	r2, [r3, #46]	@ 0x2e
 800285c:	687b      	ldr	r3, [r7, #4]
 800285e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002860:	699b      	ldr	r3, [r3, #24]
 8002862:	2b20      	cmp	r3, #32
 8002864:	f000 8088 	beq.w	8002978 <HAL_UART_IRQHandler+0x3c0>
 8002868:	687b      	ldr	r3, [r7, #4]
 800286a:	681b      	ldr	r3, [r3, #0]
 800286c:	330c      	adds	r3, #12
 800286e:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8002872:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 8002876:	e853 3f00 	ldrex	r3, [r3]
 800287a:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 800287e:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 8002882:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8002886:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 800288a:	687b      	ldr	r3, [r7, #4]
 800288c:	681b      	ldr	r3, [r3, #0]
 800288e:	330c      	adds	r3, #12
 8002890:	f8d7 20b8 	ldr.w	r2, [r7, #184]	@ 0xb8
 8002894:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 8002898:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 800289c:	f8d7 1090 	ldr.w	r1, [r7, #144]	@ 0x90
 80028a0:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 80028a4:	e841 2300 	strex	r3, r2, [r1]
 80028a8:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 80028ac:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 80028b0:	2b00      	cmp	r3, #0
 80028b2:	d1d9      	bne.n	8002868 <HAL_UART_IRQHandler+0x2b0>
 80028b4:	687b      	ldr	r3, [r7, #4]
 80028b6:	681b      	ldr	r3, [r3, #0]
 80028b8:	3314      	adds	r3, #20
 80028ba:	677b      	str	r3, [r7, #116]	@ 0x74
 80028bc:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 80028be:	e853 3f00 	ldrex	r3, [r3]
 80028c2:	673b      	str	r3, [r7, #112]	@ 0x70
 80028c4:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 80028c6:	f023 0301 	bic.w	r3, r3, #1
 80028ca:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 80028ce:	687b      	ldr	r3, [r7, #4]
 80028d0:	681b      	ldr	r3, [r3, #0]
 80028d2:	3314      	adds	r3, #20
 80028d4:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 80028d8:	f8c7 2080 	str.w	r2, [r7, #128]	@ 0x80
 80028dc:	67fb      	str	r3, [r7, #124]	@ 0x7c
 80028de:	6ff9      	ldr	r1, [r7, #124]	@ 0x7c
 80028e0:	f8d7 2080 	ldr.w	r2, [r7, #128]	@ 0x80
 80028e4:	e841 2300 	strex	r3, r2, [r1]
 80028e8:	67bb      	str	r3, [r7, #120]	@ 0x78
 80028ea:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 80028ec:	2b00      	cmp	r3, #0
 80028ee:	d1e1      	bne.n	80028b4 <HAL_UART_IRQHandler+0x2fc>
 80028f0:	687b      	ldr	r3, [r7, #4]
 80028f2:	681b      	ldr	r3, [r3, #0]
 80028f4:	3314      	adds	r3, #20
 80028f6:	663b      	str	r3, [r7, #96]	@ 0x60
 80028f8:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 80028fa:	e853 3f00 	ldrex	r3, [r3]
 80028fe:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8002900:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8002902:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8002906:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 800290a:	687b      	ldr	r3, [r7, #4]
 800290c:	681b      	ldr	r3, [r3, #0]
 800290e:	3314      	adds	r3, #20
 8002910:	f8d7 20b0 	ldr.w	r2, [r7, #176]	@ 0xb0
 8002914:	66fa      	str	r2, [r7, #108]	@ 0x6c
 8002916:	66bb      	str	r3, [r7, #104]	@ 0x68
 8002918:	6eb9      	ldr	r1, [r7, #104]	@ 0x68
 800291a:	6efa      	ldr	r2, [r7, #108]	@ 0x6c
 800291c:	e841 2300 	strex	r3, r2, [r1]
 8002920:	667b      	str	r3, [r7, #100]	@ 0x64
 8002922:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8002924:	2b00      	cmp	r3, #0
 8002926:	d1e3      	bne.n	80028f0 <HAL_UART_IRQHandler+0x338>
 8002928:	687b      	ldr	r3, [r7, #4]
 800292a:	2220      	movs	r2, #32
 800292c:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8002930:	687b      	ldr	r3, [r7, #4]
 8002932:	2200      	movs	r2, #0
 8002934:	631a      	str	r2, [r3, #48]	@ 0x30
 8002936:	687b      	ldr	r3, [r7, #4]
 8002938:	681b      	ldr	r3, [r3, #0]
 800293a:	330c      	adds	r3, #12
 800293c:	64fb      	str	r3, [r7, #76]	@ 0x4c
 800293e:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8002940:	e853 3f00 	ldrex	r3, [r3]
 8002944:	64bb      	str	r3, [r7, #72]	@ 0x48
 8002946:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8002948:	f023 0310 	bic.w	r3, r3, #16
 800294c:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 8002950:	687b      	ldr	r3, [r7, #4]
 8002952:	681b      	ldr	r3, [r3, #0]
 8002954:	330c      	adds	r3, #12
 8002956:	f8d7 20ac 	ldr.w	r2, [r7, #172]	@ 0xac
 800295a:	65ba      	str	r2, [r7, #88]	@ 0x58
 800295c:	657b      	str	r3, [r7, #84]	@ 0x54
 800295e:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 8002960:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 8002962:	e841 2300 	strex	r3, r2, [r1]
 8002966:	653b      	str	r3, [r7, #80]	@ 0x50
 8002968:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 800296a:	2b00      	cmp	r3, #0
 800296c:	d1e3      	bne.n	8002936 <HAL_UART_IRQHandler+0x37e>
 800296e:	687b      	ldr	r3, [r7, #4]
 8002970:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002972:	4618      	mov	r0, r3
 8002974:	f7fe fb9d 	bl	80010b2 <HAL_DMA_Abort>
 8002978:	687b      	ldr	r3, [r7, #4]
 800297a:	2202      	movs	r2, #2
 800297c:	635a      	str	r2, [r3, #52]	@ 0x34
 800297e:	687b      	ldr	r3, [r7, #4]
 8002980:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 8002982:	687b      	ldr	r3, [r7, #4]
 8002984:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8002986:	b29b      	uxth	r3, r3
 8002988:	1ad3      	subs	r3, r2, r3
 800298a:	b29b      	uxth	r3, r3
 800298c:	4619      	mov	r1, r3
 800298e:	6878      	ldr	r0, [r7, #4]
 8002990:	f000 f8bf 	bl	8002b12 <HAL_UARTEx_RxEventCallback>
 8002994:	e09c      	b.n	8002ad0 <HAL_UART_IRQHandler+0x518>
 8002996:	bf00      	nop
 8002998:	08002c9f 	.word	0x08002c9f
 800299c:	687b      	ldr	r3, [r7, #4]
 800299e:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 80029a0:	687b      	ldr	r3, [r7, #4]
 80029a2:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 80029a4:	b29b      	uxth	r3, r3
 80029a6:	1ad3      	subs	r3, r2, r3
 80029a8:	f8a7 30ce 	strh.w	r3, [r7, #206]	@ 0xce
 80029ac:	687b      	ldr	r3, [r7, #4]
 80029ae:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 80029b0:	b29b      	uxth	r3, r3
 80029b2:	2b00      	cmp	r3, #0
 80029b4:	f000 808e 	beq.w	8002ad4 <HAL_UART_IRQHandler+0x51c>
 80029b8:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 80029bc:	2b00      	cmp	r3, #0
 80029be:	f000 8089 	beq.w	8002ad4 <HAL_UART_IRQHandler+0x51c>
 80029c2:	687b      	ldr	r3, [r7, #4]
 80029c4:	681b      	ldr	r3, [r3, #0]
 80029c6:	330c      	adds	r3, #12
 80029c8:	63bb      	str	r3, [r7, #56]	@ 0x38
 80029ca:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80029cc:	e853 3f00 	ldrex	r3, [r3]
 80029d0:	637b      	str	r3, [r7, #52]	@ 0x34
 80029d2:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80029d4:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 80029d8:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 80029dc:	687b      	ldr	r3, [r7, #4]
 80029de:	681b      	ldr	r3, [r3, #0]
 80029e0:	330c      	adds	r3, #12
 80029e2:	f8d7 20c8 	ldr.w	r2, [r7, #200]	@ 0xc8
 80029e6:	647a      	str	r2, [r7, #68]	@ 0x44
 80029e8:	643b      	str	r3, [r7, #64]	@ 0x40
 80029ea:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 80029ec:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 80029ee:	e841 2300 	strex	r3, r2, [r1]
 80029f2:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80029f4:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80029f6:	2b00      	cmp	r3, #0
 80029f8:	d1e3      	bne.n	80029c2 <HAL_UART_IRQHandler+0x40a>
 80029fa:	687b      	ldr	r3, [r7, #4]
 80029fc:	681b      	ldr	r3, [r3, #0]
 80029fe:	3314      	adds	r3, #20
 8002a00:	627b      	str	r3, [r7, #36]	@ 0x24
 8002a02:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002a04:	e853 3f00 	ldrex	r3, [r3]
 8002a08:	623b      	str	r3, [r7, #32]
 8002a0a:	6a3b      	ldr	r3, [r7, #32]
 8002a0c:	f023 0301 	bic.w	r3, r3, #1
 8002a10:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 8002a14:	687b      	ldr	r3, [r7, #4]
 8002a16:	681b      	ldr	r3, [r3, #0]
 8002a18:	3314      	adds	r3, #20
 8002a1a:	f8d7 20c4 	ldr.w	r2, [r7, #196]	@ 0xc4
 8002a1e:	633a      	str	r2, [r7, #48]	@ 0x30
 8002a20:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8002a22:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8002a24:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8002a26:	e841 2300 	strex	r3, r2, [r1]
 8002a2a:	62bb      	str	r3, [r7, #40]	@ 0x28
 8002a2c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8002a2e:	2b00      	cmp	r3, #0
 8002a30:	d1e3      	bne.n	80029fa <HAL_UART_IRQHandler+0x442>
 8002a32:	687b      	ldr	r3, [r7, #4]
 8002a34:	2220      	movs	r2, #32
 8002a36:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8002a3a:	687b      	ldr	r3, [r7, #4]
 8002a3c:	2200      	movs	r2, #0
 8002a3e:	631a      	str	r2, [r3, #48]	@ 0x30
 8002a40:	687b      	ldr	r3, [r7, #4]
 8002a42:	681b      	ldr	r3, [r3, #0]
 8002a44:	330c      	adds	r3, #12
 8002a46:	613b      	str	r3, [r7, #16]
 8002a48:	693b      	ldr	r3, [r7, #16]
 8002a4a:	e853 3f00 	ldrex	r3, [r3]
 8002a4e:	60fb      	str	r3, [r7, #12]
 8002a50:	68fb      	ldr	r3, [r7, #12]
 8002a52:	f023 0310 	bic.w	r3, r3, #16
 8002a56:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8002a5a:	687b      	ldr	r3, [r7, #4]
 8002a5c:	681b      	ldr	r3, [r3, #0]
 8002a5e:	330c      	adds	r3, #12
 8002a60:	f8d7 20c0 	ldr.w	r2, [r7, #192]	@ 0xc0
 8002a64:	61fa      	str	r2, [r7, #28]
 8002a66:	61bb      	str	r3, [r7, #24]
 8002a68:	69b9      	ldr	r1, [r7, #24]
 8002a6a:	69fa      	ldr	r2, [r7, #28]
 8002a6c:	e841 2300 	strex	r3, r2, [r1]
 8002a70:	617b      	str	r3, [r7, #20]
 8002a72:	697b      	ldr	r3, [r7, #20]
 8002a74:	2b00      	cmp	r3, #0
 8002a76:	d1e3      	bne.n	8002a40 <HAL_UART_IRQHandler+0x488>
 8002a78:	687b      	ldr	r3, [r7, #4]
 8002a7a:	2202      	movs	r2, #2
 8002a7c:	635a      	str	r2, [r3, #52]	@ 0x34
 8002a7e:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 8002a82:	4619      	mov	r1, r3
 8002a84:	6878      	ldr	r0, [r7, #4]
 8002a86:	f000 f844 	bl	8002b12 <HAL_UARTEx_RxEventCallback>
 8002a8a:	e023      	b.n	8002ad4 <HAL_UART_IRQHandler+0x51c>
 8002a8c:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8002a90:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8002a94:	2b00      	cmp	r3, #0
 8002a96:	d009      	beq.n	8002aac <HAL_UART_IRQHandler+0x4f4>
 8002a98:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8002a9c:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8002aa0:	2b00      	cmp	r3, #0
 8002aa2:	d003      	beq.n	8002aac <HAL_UART_IRQHandler+0x4f4>
 8002aa4:	6878      	ldr	r0, [r7, #4]
 8002aa6:	f000 f90e 	bl	8002cc6 <UART_Transmit_IT>
 8002aaa:	e014      	b.n	8002ad6 <HAL_UART_IRQHandler+0x51e>
 8002aac:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8002ab0:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8002ab4:	2b00      	cmp	r3, #0
 8002ab6:	d00e      	beq.n	8002ad6 <HAL_UART_IRQHandler+0x51e>
 8002ab8:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8002abc:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8002ac0:	2b00      	cmp	r3, #0
 8002ac2:	d008      	beq.n	8002ad6 <HAL_UART_IRQHandler+0x51e>
 8002ac4:	6878      	ldr	r0, [r7, #4]
 8002ac6:	f000 f94d 	bl	8002d64 <UART_EndTransmit_IT>
 8002aca:	e004      	b.n	8002ad6 <HAL_UART_IRQHandler+0x51e>
 8002acc:	bf00      	nop
 8002ace:	e002      	b.n	8002ad6 <HAL_UART_IRQHandler+0x51e>
 8002ad0:	bf00      	nop
 8002ad2:	e000      	b.n	8002ad6 <HAL_UART_IRQHandler+0x51e>
 8002ad4:	bf00      	nop
 8002ad6:	37e8      	adds	r7, #232	@ 0xe8
 8002ad8:	46bd      	mov	sp, r7
 8002ada:	bd80      	pop	{r7, pc}

08002adc <HAL_UART_TxCpltCallback>:
 8002adc:	b480      	push	{r7}
 8002ade:	b083      	sub	sp, #12
 8002ae0:	af00      	add	r7, sp, #0
 8002ae2:	6078      	str	r0, [r7, #4]
 8002ae4:	bf00      	nop
 8002ae6:	370c      	adds	r7, #12
 8002ae8:	46bd      	mov	sp, r7
 8002aea:	bc80      	pop	{r7}
 8002aec:	4770      	bx	lr

08002aee <HAL_UART_RxCpltCallback>:
 8002aee:	b480      	push	{r7}
 8002af0:	b083      	sub	sp, #12
 8002af2:	af00      	add	r7, sp, #0
 8002af4:	6078      	str	r0, [r7, #4]
 8002af6:	bf00      	nop
 8002af8:	370c      	adds	r7, #12
 8002afa:	46bd      	mov	sp, r7
 8002afc:	bc80      	pop	{r7}
 8002afe:	4770      	bx	lr

08002b00 <HAL_UART_ErrorCallback>:
 8002b00:	b480      	push	{r7}
 8002b02:	b083      	sub	sp, #12
 8002b04:	af00      	add	r7, sp, #0
 8002b06:	6078      	str	r0, [r7, #4]
 8002b08:	bf00      	nop
 8002b0a:	370c      	adds	r7, #12
 8002b0c:	46bd      	mov	sp, r7
 8002b0e:	bc80      	pop	{r7}
 8002b10:	4770      	bx	lr

08002b12 <HAL_UARTEx_RxEventCallback>:
 8002b12:	b480      	push	{r7}
 8002b14:	b083      	sub	sp, #12
 8002b16:	af00      	add	r7, sp, #0
 8002b18:	6078      	str	r0, [r7, #4]
 8002b1a:	460b      	mov	r3, r1
 8002b1c:	807b      	strh	r3, [r7, #2]
 8002b1e:	bf00      	nop
 8002b20:	370c      	adds	r7, #12
 8002b22:	46bd      	mov	sp, r7
 8002b24:	bc80      	pop	{r7}
 8002b26:	4770      	bx	lr

08002b28 <UART_WaitOnFlagUntilTimeout>:
 8002b28:	b580      	push	{r7, lr}
 8002b2a:	b086      	sub	sp, #24
 8002b2c:	af00      	add	r7, sp, #0
 8002b2e:	60f8      	str	r0, [r7, #12]
 8002b30:	60b9      	str	r1, [r7, #8]
 8002b32:	603b      	str	r3, [r7, #0]
 8002b34:	4613      	mov	r3, r2
 8002b36:	71fb      	strb	r3, [r7, #7]
 8002b38:	e03b      	b.n	8002bb2 <UART_WaitOnFlagUntilTimeout+0x8a>
 8002b3a:	6a3b      	ldr	r3, [r7, #32]
 8002b3c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002b40:	d037      	beq.n	8002bb2 <UART_WaitOnFlagUntilTimeout+0x8a>
 8002b42:	f7fe f97b 	bl	8000e3c <HAL_GetTick>
 8002b46:	4602      	mov	r2, r0
 8002b48:	683b      	ldr	r3, [r7, #0]
 8002b4a:	1ad3      	subs	r3, r2, r3
 8002b4c:	6a3a      	ldr	r2, [r7, #32]
 8002b4e:	429a      	cmp	r2, r3
 8002b50:	d302      	bcc.n	8002b58 <UART_WaitOnFlagUntilTimeout+0x30>
 8002b52:	6a3b      	ldr	r3, [r7, #32]
 8002b54:	2b00      	cmp	r3, #0
 8002b56:	d101      	bne.n	8002b5c <UART_WaitOnFlagUntilTimeout+0x34>
 8002b58:	2303      	movs	r3, #3
 8002b5a:	e03a      	b.n	8002bd2 <UART_WaitOnFlagUntilTimeout+0xaa>
 8002b5c:	68fb      	ldr	r3, [r7, #12]
 8002b5e:	681b      	ldr	r3, [r3, #0]
 8002b60:	68db      	ldr	r3, [r3, #12]
 8002b62:	f003 0304 	and.w	r3, r3, #4
 8002b66:	2b00      	cmp	r3, #0
 8002b68:	d023      	beq.n	8002bb2 <UART_WaitOnFlagUntilTimeout+0x8a>
 8002b6a:	68bb      	ldr	r3, [r7, #8]
 8002b6c:	2b80      	cmp	r3, #128	@ 0x80
 8002b6e:	d020      	beq.n	8002bb2 <UART_WaitOnFlagUntilTimeout+0x8a>
 8002b70:	68bb      	ldr	r3, [r7, #8]
 8002b72:	2b40      	cmp	r3, #64	@ 0x40
 8002b74:	d01d      	beq.n	8002bb2 <UART_WaitOnFlagUntilTimeout+0x8a>
 8002b76:	68fb      	ldr	r3, [r7, #12]
 8002b78:	681b      	ldr	r3, [r3, #0]
 8002b7a:	681b      	ldr	r3, [r3, #0]
 8002b7c:	f003 0308 	and.w	r3, r3, #8
 8002b80:	2b08      	cmp	r3, #8
 8002b82:	d116      	bne.n	8002bb2 <UART_WaitOnFlagUntilTimeout+0x8a>
 8002b84:	2300      	movs	r3, #0
 8002b86:	617b      	str	r3, [r7, #20]
 8002b88:	68fb      	ldr	r3, [r7, #12]
 8002b8a:	681b      	ldr	r3, [r3, #0]
 8002b8c:	681b      	ldr	r3, [r3, #0]
 8002b8e:	617b      	str	r3, [r7, #20]
 8002b90:	68fb      	ldr	r3, [r7, #12]
 8002b92:	681b      	ldr	r3, [r3, #0]
 8002b94:	685b      	ldr	r3, [r3, #4]
 8002b96:	617b      	str	r3, [r7, #20]
 8002b98:	697b      	ldr	r3, [r7, #20]
 8002b9a:	68f8      	ldr	r0, [r7, #12]
 8002b9c:	f000 f81d 	bl	8002bda <UART_EndRxTransfer>
 8002ba0:	68fb      	ldr	r3, [r7, #12]
 8002ba2:	2208      	movs	r2, #8
 8002ba4:	645a      	str	r2, [r3, #68]	@ 0x44
 8002ba6:	68fb      	ldr	r3, [r7, #12]
 8002ba8:	2200      	movs	r2, #0
 8002baa:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8002bae:	2301      	movs	r3, #1
 8002bb0:	e00f      	b.n	8002bd2 <UART_WaitOnFlagUntilTimeout+0xaa>
 8002bb2:	68fb      	ldr	r3, [r7, #12]
 8002bb4:	681b      	ldr	r3, [r3, #0]
 8002bb6:	681a      	ldr	r2, [r3, #0]
 8002bb8:	68bb      	ldr	r3, [r7, #8]
 8002bba:	4013      	ands	r3, r2
 8002bbc:	68ba      	ldr	r2, [r7, #8]
 8002bbe:	429a      	cmp	r2, r3
 8002bc0:	bf0c      	ite	eq
 8002bc2:	2301      	moveq	r3, #1
 8002bc4:	2300      	movne	r3, #0
 8002bc6:	b2db      	uxtb	r3, r3
 8002bc8:	461a      	mov	r2, r3
 8002bca:	79fb      	ldrb	r3, [r7, #7]
 8002bcc:	429a      	cmp	r2, r3
 8002bce:	d0b4      	beq.n	8002b3a <UART_WaitOnFlagUntilTimeout+0x12>
 8002bd0:	2300      	movs	r3, #0
 8002bd2:	4618      	mov	r0, r3
 8002bd4:	3718      	adds	r7, #24
 8002bd6:	46bd      	mov	sp, r7
 8002bd8:	bd80      	pop	{r7, pc}

08002bda <UART_EndRxTransfer>:
 8002bda:	b480      	push	{r7}
 8002bdc:	b095      	sub	sp, #84	@ 0x54
 8002bde:	af00      	add	r7, sp, #0
 8002be0:	6078      	str	r0, [r7, #4]
 8002be2:	687b      	ldr	r3, [r7, #4]
 8002be4:	681b      	ldr	r3, [r3, #0]
 8002be6:	330c      	adds	r3, #12
 8002be8:	637b      	str	r3, [r7, #52]	@ 0x34
 8002bea:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8002bec:	e853 3f00 	ldrex	r3, [r3]
 8002bf0:	633b      	str	r3, [r7, #48]	@ 0x30
 8002bf2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8002bf4:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8002bf8:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8002bfa:	687b      	ldr	r3, [r7, #4]
 8002bfc:	681b      	ldr	r3, [r3, #0]
 8002bfe:	330c      	adds	r3, #12
 8002c00:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 8002c02:	643a      	str	r2, [r7, #64]	@ 0x40
 8002c04:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8002c06:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 8002c08:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 8002c0a:	e841 2300 	strex	r3, r2, [r1]
 8002c0e:	63bb      	str	r3, [r7, #56]	@ 0x38
 8002c10:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8002c12:	2b00      	cmp	r3, #0
 8002c14:	d1e5      	bne.n	8002be2 <UART_EndRxTransfer+0x8>
 8002c16:	687b      	ldr	r3, [r7, #4]
 8002c18:	681b      	ldr	r3, [r3, #0]
 8002c1a:	3314      	adds	r3, #20
 8002c1c:	623b      	str	r3, [r7, #32]
 8002c1e:	6a3b      	ldr	r3, [r7, #32]
 8002c20:	e853 3f00 	ldrex	r3, [r3]
 8002c24:	61fb      	str	r3, [r7, #28]
 8002c26:	69fb      	ldr	r3, [r7, #28]
 8002c28:	f023 0301 	bic.w	r3, r3, #1
 8002c2c:	64bb      	str	r3, [r7, #72]	@ 0x48
 8002c2e:	687b      	ldr	r3, [r7, #4]
 8002c30:	681b      	ldr	r3, [r3, #0]
 8002c32:	3314      	adds	r3, #20
 8002c34:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8002c36:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8002c38:	62bb      	str	r3, [r7, #40]	@ 0x28
 8002c3a:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8002c3c:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8002c3e:	e841 2300 	strex	r3, r2, [r1]
 8002c42:	627b      	str	r3, [r7, #36]	@ 0x24
 8002c44:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002c46:	2b00      	cmp	r3, #0
 8002c48:	d1e5      	bne.n	8002c16 <UART_EndRxTransfer+0x3c>
 8002c4a:	687b      	ldr	r3, [r7, #4]
 8002c4c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002c4e:	2b01      	cmp	r3, #1
 8002c50:	d119      	bne.n	8002c86 <UART_EndRxTransfer+0xac>
 8002c52:	687b      	ldr	r3, [r7, #4]
 8002c54:	681b      	ldr	r3, [r3, #0]
 8002c56:	330c      	adds	r3, #12
 8002c58:	60fb      	str	r3, [r7, #12]
 8002c5a:	68fb      	ldr	r3, [r7, #12]
 8002c5c:	e853 3f00 	ldrex	r3, [r3]
 8002c60:	60bb      	str	r3, [r7, #8]
 8002c62:	68bb      	ldr	r3, [r7, #8]
 8002c64:	f023 0310 	bic.w	r3, r3, #16
 8002c68:	647b      	str	r3, [r7, #68]	@ 0x44
 8002c6a:	687b      	ldr	r3, [r7, #4]
 8002c6c:	681b      	ldr	r3, [r3, #0]
 8002c6e:	330c      	adds	r3, #12
 8002c70:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8002c72:	61ba      	str	r2, [r7, #24]
 8002c74:	617b      	str	r3, [r7, #20]
 8002c76:	6979      	ldr	r1, [r7, #20]
 8002c78:	69ba      	ldr	r2, [r7, #24]
 8002c7a:	e841 2300 	strex	r3, r2, [r1]
 8002c7e:	613b      	str	r3, [r7, #16]
 8002c80:	693b      	ldr	r3, [r7, #16]
 8002c82:	2b00      	cmp	r3, #0
 8002c84:	d1e5      	bne.n	8002c52 <UART_EndRxTransfer+0x78>
 8002c86:	687b      	ldr	r3, [r7, #4]
 8002c88:	2220      	movs	r2, #32
 8002c8a:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8002c8e:	687b      	ldr	r3, [r7, #4]
 8002c90:	2200      	movs	r2, #0
 8002c92:	631a      	str	r2, [r3, #48]	@ 0x30
 8002c94:	bf00      	nop
 8002c96:	3754      	adds	r7, #84	@ 0x54
 8002c98:	46bd      	mov	sp, r7
 8002c9a:	bc80      	pop	{r7}
 8002c9c:	4770      	bx	lr

08002c9e <UART_DMAAbortOnError>:
 8002c9e:	b580      	push	{r7, lr}
 8002ca0:	b084      	sub	sp, #16
 8002ca2:	af00      	add	r7, sp, #0
 8002ca4:	6078      	str	r0, [r7, #4]
 8002ca6:	687b      	ldr	r3, [r7, #4]
 8002ca8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002caa:	60fb      	str	r3, [r7, #12]
 8002cac:	68fb      	ldr	r3, [r7, #12]
 8002cae:	2200      	movs	r2, #0
 8002cb0:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8002cb2:	68fb      	ldr	r3, [r7, #12]
 8002cb4:	2200      	movs	r2, #0
 8002cb6:	84da      	strh	r2, [r3, #38]	@ 0x26
 8002cb8:	68f8      	ldr	r0, [r7, #12]
 8002cba:	f7ff ff21 	bl	8002b00 <HAL_UART_ErrorCallback>
 8002cbe:	bf00      	nop
 8002cc0:	3710      	adds	r7, #16
 8002cc2:	46bd      	mov	sp, r7
 8002cc4:	bd80      	pop	{r7, pc}

08002cc6 <UART_Transmit_IT>:
 8002cc6:	b480      	push	{r7}
 8002cc8:	b085      	sub	sp, #20
 8002cca:	af00      	add	r7, sp, #0
 8002ccc:	6078      	str	r0, [r7, #4]
 8002cce:	687b      	ldr	r3, [r7, #4]
 8002cd0:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8002cd4:	b2db      	uxtb	r3, r3
 8002cd6:	2b21      	cmp	r3, #33	@ 0x21
 8002cd8:	d13e      	bne.n	8002d58 <UART_Transmit_IT+0x92>
 8002cda:	687b      	ldr	r3, [r7, #4]
 8002cdc:	689b      	ldr	r3, [r3, #8]
 8002cde:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8002ce2:	d114      	bne.n	8002d0e <UART_Transmit_IT+0x48>
 8002ce4:	687b      	ldr	r3, [r7, #4]
 8002ce6:	691b      	ldr	r3, [r3, #16]
 8002ce8:	2b00      	cmp	r3, #0
 8002cea:	d110      	bne.n	8002d0e <UART_Transmit_IT+0x48>
 8002cec:	687b      	ldr	r3, [r7, #4]
 8002cee:	6a1b      	ldr	r3, [r3, #32]
 8002cf0:	60fb      	str	r3, [r7, #12]
 8002cf2:	68fb      	ldr	r3, [r7, #12]
 8002cf4:	881b      	ldrh	r3, [r3, #0]
 8002cf6:	461a      	mov	r2, r3
 8002cf8:	687b      	ldr	r3, [r7, #4]
 8002cfa:	681b      	ldr	r3, [r3, #0]
 8002cfc:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8002d00:	605a      	str	r2, [r3, #4]
 8002d02:	687b      	ldr	r3, [r7, #4]
 8002d04:	6a1b      	ldr	r3, [r3, #32]
 8002d06:	1c9a      	adds	r2, r3, #2
 8002d08:	687b      	ldr	r3, [r7, #4]
 8002d0a:	621a      	str	r2, [r3, #32]
 8002d0c:	e008      	b.n	8002d20 <UART_Transmit_IT+0x5a>
 8002d0e:	687b      	ldr	r3, [r7, #4]
 8002d10:	6a1b      	ldr	r3, [r3, #32]
 8002d12:	1c59      	adds	r1, r3, #1
 8002d14:	687a      	ldr	r2, [r7, #4]
 8002d16:	6211      	str	r1, [r2, #32]
 8002d18:	781a      	ldrb	r2, [r3, #0]
 8002d1a:	687b      	ldr	r3, [r7, #4]
 8002d1c:	681b      	ldr	r3, [r3, #0]
 8002d1e:	605a      	str	r2, [r3, #4]
 8002d20:	687b      	ldr	r3, [r7, #4]
 8002d22:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8002d24:	b29b      	uxth	r3, r3
 8002d26:	3b01      	subs	r3, #1
 8002d28:	b29b      	uxth	r3, r3
 8002d2a:	687a      	ldr	r2, [r7, #4]
 8002d2c:	4619      	mov	r1, r3
 8002d2e:	84d1      	strh	r1, [r2, #38]	@ 0x26
 8002d30:	2b00      	cmp	r3, #0
 8002d32:	d10f      	bne.n	8002d54 <UART_Transmit_IT+0x8e>
 8002d34:	687b      	ldr	r3, [r7, #4]
 8002d36:	681b      	ldr	r3, [r3, #0]
 8002d38:	68da      	ldr	r2, [r3, #12]
 8002d3a:	687b      	ldr	r3, [r7, #4]
 8002d3c:	681b      	ldr	r3, [r3, #0]
 8002d3e:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8002d42:	60da      	str	r2, [r3, #12]
 8002d44:	687b      	ldr	r3, [r7, #4]
 8002d46:	681b      	ldr	r3, [r3, #0]
 8002d48:	68da      	ldr	r2, [r3, #12]
 8002d4a:	687b      	ldr	r3, [r7, #4]
 8002d4c:	681b      	ldr	r3, [r3, #0]
 8002d4e:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8002d52:	60da      	str	r2, [r3, #12]
 8002d54:	2300      	movs	r3, #0
 8002d56:	e000      	b.n	8002d5a <UART_Transmit_IT+0x94>
 8002d58:	2302      	movs	r3, #2
 8002d5a:	4618      	mov	r0, r3
 8002d5c:	3714      	adds	r7, #20
 8002d5e:	46bd      	mov	sp, r7
 8002d60:	bc80      	pop	{r7}
 8002d62:	4770      	bx	lr

08002d64 <UART_EndTransmit_IT>:
 8002d64:	b580      	push	{r7, lr}
 8002d66:	b082      	sub	sp, #8
 8002d68:	af00      	add	r7, sp, #0
 8002d6a:	6078      	str	r0, [r7, #4]
 8002d6c:	687b      	ldr	r3, [r7, #4]
 8002d6e:	681b      	ldr	r3, [r3, #0]
 8002d70:	68da      	ldr	r2, [r3, #12]
 8002d72:	687b      	ldr	r3, [r7, #4]
 8002d74:	681b      	ldr	r3, [r3, #0]
 8002d76:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8002d7a:	60da      	str	r2, [r3, #12]
 8002d7c:	687b      	ldr	r3, [r7, #4]
 8002d7e:	2220      	movs	r2, #32
 8002d80:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8002d84:	6878      	ldr	r0, [r7, #4]
 8002d86:	f7ff fea9 	bl	8002adc <HAL_UART_TxCpltCallback>
 8002d8a:	2300      	movs	r3, #0
 8002d8c:	4618      	mov	r0, r3
 8002d8e:	3708      	adds	r7, #8
 8002d90:	46bd      	mov	sp, r7
 8002d92:	bd80      	pop	{r7, pc}

08002d94 <UART_Receive_IT>:
 8002d94:	b580      	push	{r7, lr}
 8002d96:	b08c      	sub	sp, #48	@ 0x30
 8002d98:	af00      	add	r7, sp, #0
 8002d9a:	6078      	str	r0, [r7, #4]
 8002d9c:	687b      	ldr	r3, [r7, #4]
 8002d9e:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8002da2:	b2db      	uxtb	r3, r3
 8002da4:	2b22      	cmp	r3, #34	@ 0x22
 8002da6:	f040 80ae 	bne.w	8002f06 <UART_Receive_IT+0x172>
 8002daa:	687b      	ldr	r3, [r7, #4]
 8002dac:	689b      	ldr	r3, [r3, #8]
 8002dae:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8002db2:	d117      	bne.n	8002de4 <UART_Receive_IT+0x50>
 8002db4:	687b      	ldr	r3, [r7, #4]
 8002db6:	691b      	ldr	r3, [r3, #16]
 8002db8:	2b00      	cmp	r3, #0
 8002dba:	d113      	bne.n	8002de4 <UART_Receive_IT+0x50>
 8002dbc:	2300      	movs	r3, #0
 8002dbe:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8002dc0:	687b      	ldr	r3, [r7, #4]
 8002dc2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002dc4:	62bb      	str	r3, [r7, #40]	@ 0x28
 8002dc6:	687b      	ldr	r3, [r7, #4]
 8002dc8:	681b      	ldr	r3, [r3, #0]
 8002dca:	685b      	ldr	r3, [r3, #4]
 8002dcc:	b29b      	uxth	r3, r3
 8002dce:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8002dd2:	b29a      	uxth	r2, r3
 8002dd4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8002dd6:	801a      	strh	r2, [r3, #0]
 8002dd8:	687b      	ldr	r3, [r7, #4]
 8002dda:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002ddc:	1c9a      	adds	r2, r3, #2
 8002dde:	687b      	ldr	r3, [r7, #4]
 8002de0:	629a      	str	r2, [r3, #40]	@ 0x28
 8002de2:	e026      	b.n	8002e32 <UART_Receive_IT+0x9e>
 8002de4:	687b      	ldr	r3, [r7, #4]
 8002de6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002de8:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8002dea:	2300      	movs	r3, #0
 8002dec:	62bb      	str	r3, [r7, #40]	@ 0x28
 8002dee:	687b      	ldr	r3, [r7, #4]
 8002df0:	689b      	ldr	r3, [r3, #8]
 8002df2:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8002df6:	d007      	beq.n	8002e08 <UART_Receive_IT+0x74>
 8002df8:	687b      	ldr	r3, [r7, #4]
 8002dfa:	689b      	ldr	r3, [r3, #8]
 8002dfc:	2b00      	cmp	r3, #0
 8002dfe:	d10a      	bne.n	8002e16 <UART_Receive_IT+0x82>
 8002e00:	687b      	ldr	r3, [r7, #4]
 8002e02:	691b      	ldr	r3, [r3, #16]
 8002e04:	2b00      	cmp	r3, #0
 8002e06:	d106      	bne.n	8002e16 <UART_Receive_IT+0x82>
 8002e08:	687b      	ldr	r3, [r7, #4]
 8002e0a:	681b      	ldr	r3, [r3, #0]
 8002e0c:	685b      	ldr	r3, [r3, #4]
 8002e0e:	b2da      	uxtb	r2, r3
 8002e10:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8002e12:	701a      	strb	r2, [r3, #0]
 8002e14:	e008      	b.n	8002e28 <UART_Receive_IT+0x94>
 8002e16:	687b      	ldr	r3, [r7, #4]
 8002e18:	681b      	ldr	r3, [r3, #0]
 8002e1a:	685b      	ldr	r3, [r3, #4]
 8002e1c:	b2db      	uxtb	r3, r3
 8002e1e:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8002e22:	b2da      	uxtb	r2, r3
 8002e24:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8002e26:	701a      	strb	r2, [r3, #0]
 8002e28:	687b      	ldr	r3, [r7, #4]
 8002e2a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002e2c:	1c5a      	adds	r2, r3, #1
 8002e2e:	687b      	ldr	r3, [r7, #4]
 8002e30:	629a      	str	r2, [r3, #40]	@ 0x28
 8002e32:	687b      	ldr	r3, [r7, #4]
 8002e34:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8002e36:	b29b      	uxth	r3, r3
 8002e38:	3b01      	subs	r3, #1
 8002e3a:	b29b      	uxth	r3, r3
 8002e3c:	687a      	ldr	r2, [r7, #4]
 8002e3e:	4619      	mov	r1, r3
 8002e40:	85d1      	strh	r1, [r2, #46]	@ 0x2e
 8002e42:	2b00      	cmp	r3, #0
 8002e44:	d15d      	bne.n	8002f02 <UART_Receive_IT+0x16e>
 8002e46:	687b      	ldr	r3, [r7, #4]
 8002e48:	681b      	ldr	r3, [r3, #0]
 8002e4a:	68da      	ldr	r2, [r3, #12]
 8002e4c:	687b      	ldr	r3, [r7, #4]
 8002e4e:	681b      	ldr	r3, [r3, #0]
 8002e50:	f022 0220 	bic.w	r2, r2, #32
 8002e54:	60da      	str	r2, [r3, #12]
 8002e56:	687b      	ldr	r3, [r7, #4]
 8002e58:	681b      	ldr	r3, [r3, #0]
 8002e5a:	68da      	ldr	r2, [r3, #12]
 8002e5c:	687b      	ldr	r3, [r7, #4]
 8002e5e:	681b      	ldr	r3, [r3, #0]
 8002e60:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8002e64:	60da      	str	r2, [r3, #12]
 8002e66:	687b      	ldr	r3, [r7, #4]
 8002e68:	681b      	ldr	r3, [r3, #0]
 8002e6a:	695a      	ldr	r2, [r3, #20]
 8002e6c:	687b      	ldr	r3, [r7, #4]
 8002e6e:	681b      	ldr	r3, [r3, #0]
 8002e70:	f022 0201 	bic.w	r2, r2, #1
 8002e74:	615a      	str	r2, [r3, #20]
 8002e76:	687b      	ldr	r3, [r7, #4]
 8002e78:	2220      	movs	r2, #32
 8002e7a:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8002e7e:	687b      	ldr	r3, [r7, #4]
 8002e80:	2200      	movs	r2, #0
 8002e82:	635a      	str	r2, [r3, #52]	@ 0x34
 8002e84:	687b      	ldr	r3, [r7, #4]
 8002e86:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002e88:	2b01      	cmp	r3, #1
 8002e8a:	d135      	bne.n	8002ef8 <UART_Receive_IT+0x164>
 8002e8c:	687b      	ldr	r3, [r7, #4]
 8002e8e:	2200      	movs	r2, #0
 8002e90:	631a      	str	r2, [r3, #48]	@ 0x30
 8002e92:	687b      	ldr	r3, [r7, #4]
 8002e94:	681b      	ldr	r3, [r3, #0]
 8002e96:	330c      	adds	r3, #12
 8002e98:	617b      	str	r3, [r7, #20]
 8002e9a:	697b      	ldr	r3, [r7, #20]
 8002e9c:	e853 3f00 	ldrex	r3, [r3]
 8002ea0:	613b      	str	r3, [r7, #16]
 8002ea2:	693b      	ldr	r3, [r7, #16]
 8002ea4:	f023 0310 	bic.w	r3, r3, #16
 8002ea8:	627b      	str	r3, [r7, #36]	@ 0x24
 8002eaa:	687b      	ldr	r3, [r7, #4]
 8002eac:	681b      	ldr	r3, [r3, #0]
 8002eae:	330c      	adds	r3, #12
 8002eb0:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8002eb2:	623a      	str	r2, [r7, #32]
 8002eb4:	61fb      	str	r3, [r7, #28]
 8002eb6:	69f9      	ldr	r1, [r7, #28]
 8002eb8:	6a3a      	ldr	r2, [r7, #32]
 8002eba:	e841 2300 	strex	r3, r2, [r1]
 8002ebe:	61bb      	str	r3, [r7, #24]
 8002ec0:	69bb      	ldr	r3, [r7, #24]
 8002ec2:	2b00      	cmp	r3, #0
 8002ec4:	d1e5      	bne.n	8002e92 <UART_Receive_IT+0xfe>
 8002ec6:	687b      	ldr	r3, [r7, #4]
 8002ec8:	681b      	ldr	r3, [r3, #0]
 8002eca:	681b      	ldr	r3, [r3, #0]
 8002ecc:	f003 0310 	and.w	r3, r3, #16
 8002ed0:	2b10      	cmp	r3, #16
 8002ed2:	d10a      	bne.n	8002eea <UART_Receive_IT+0x156>
 8002ed4:	2300      	movs	r3, #0
 8002ed6:	60fb      	str	r3, [r7, #12]
 8002ed8:	687b      	ldr	r3, [r7, #4]
 8002eda:	681b      	ldr	r3, [r3, #0]
 8002edc:	681b      	ldr	r3, [r3, #0]
 8002ede:	60fb      	str	r3, [r7, #12]
 8002ee0:	687b      	ldr	r3, [r7, #4]
 8002ee2:	681b      	ldr	r3, [r3, #0]
 8002ee4:	685b      	ldr	r3, [r3, #4]
 8002ee6:	60fb      	str	r3, [r7, #12]
 8002ee8:	68fb      	ldr	r3, [r7, #12]
 8002eea:	687b      	ldr	r3, [r7, #4]
 8002eec:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 8002eee:	4619      	mov	r1, r3
 8002ef0:	6878      	ldr	r0, [r7, #4]
 8002ef2:	f7ff fe0e 	bl	8002b12 <HAL_UARTEx_RxEventCallback>
 8002ef6:	e002      	b.n	8002efe <UART_Receive_IT+0x16a>
 8002ef8:	6878      	ldr	r0, [r7, #4]
 8002efa:	f7ff fdf8 	bl	8002aee <HAL_UART_RxCpltCallback>
 8002efe:	2300      	movs	r3, #0
 8002f00:	e002      	b.n	8002f08 <UART_Receive_IT+0x174>
 8002f02:	2300      	movs	r3, #0
 8002f04:	e000      	b.n	8002f08 <UART_Receive_IT+0x174>
 8002f06:	2302      	movs	r3, #2
 8002f08:	4618      	mov	r0, r3
 8002f0a:	3730      	adds	r7, #48	@ 0x30
 8002f0c:	46bd      	mov	sp, r7
 8002f0e:	bd80      	pop	{r7, pc}

08002f10 <UART_SetConfig>:
 8002f10:	b580      	push	{r7, lr}
 8002f12:	b084      	sub	sp, #16
 8002f14:	af00      	add	r7, sp, #0
 8002f16:	6078      	str	r0, [r7, #4]
 8002f18:	687b      	ldr	r3, [r7, #4]
 8002f1a:	681b      	ldr	r3, [r3, #0]
 8002f1c:	691b      	ldr	r3, [r3, #16]
 8002f1e:	f423 5140 	bic.w	r1, r3, #12288	@ 0x3000
 8002f22:	687b      	ldr	r3, [r7, #4]
 8002f24:	68da      	ldr	r2, [r3, #12]
 8002f26:	687b      	ldr	r3, [r7, #4]
 8002f28:	681b      	ldr	r3, [r3, #0]
 8002f2a:	430a      	orrs	r2, r1
 8002f2c:	611a      	str	r2, [r3, #16]
 8002f2e:	687b      	ldr	r3, [r7, #4]
 8002f30:	689a      	ldr	r2, [r3, #8]
 8002f32:	687b      	ldr	r3, [r7, #4]
 8002f34:	691b      	ldr	r3, [r3, #16]
 8002f36:	431a      	orrs	r2, r3
 8002f38:	687b      	ldr	r3, [r7, #4]
 8002f3a:	695b      	ldr	r3, [r3, #20]
 8002f3c:	4313      	orrs	r3, r2
 8002f3e:	60bb      	str	r3, [r7, #8]
 8002f40:	687b      	ldr	r3, [r7, #4]
 8002f42:	681b      	ldr	r3, [r3, #0]
 8002f44:	68db      	ldr	r3, [r3, #12]
 8002f46:	f423 53b0 	bic.w	r3, r3, #5632	@ 0x1600
 8002f4a:	f023 030c 	bic.w	r3, r3, #12
 8002f4e:	687a      	ldr	r2, [r7, #4]
 8002f50:	6812      	ldr	r2, [r2, #0]
 8002f52:	68b9      	ldr	r1, [r7, #8]
 8002f54:	430b      	orrs	r3, r1
 8002f56:	60d3      	str	r3, [r2, #12]
 8002f58:	687b      	ldr	r3, [r7, #4]
 8002f5a:	681b      	ldr	r3, [r3, #0]
 8002f5c:	695b      	ldr	r3, [r3, #20]
 8002f5e:	f423 7140 	bic.w	r1, r3, #768	@ 0x300
 8002f62:	687b      	ldr	r3, [r7, #4]
 8002f64:	699a      	ldr	r2, [r3, #24]
 8002f66:	687b      	ldr	r3, [r7, #4]
 8002f68:	681b      	ldr	r3, [r3, #0]
 8002f6a:	430a      	orrs	r2, r1
 8002f6c:	615a      	str	r2, [r3, #20]
 8002f6e:	687b      	ldr	r3, [r7, #4]
 8002f70:	681b      	ldr	r3, [r3, #0]
 8002f72:	4a2c      	ldr	r2, [pc, #176]	@ (8003024 <UART_SetConfig+0x114>)
 8002f74:	4293      	cmp	r3, r2
 8002f76:	d103      	bne.n	8002f80 <UART_SetConfig+0x70>
 8002f78:	f7fe ff02 	bl	8001d80 <HAL_RCC_GetPCLK2Freq>
 8002f7c:	60f8      	str	r0, [r7, #12]
 8002f7e:	e002      	b.n	8002f86 <UART_SetConfig+0x76>
 8002f80:	f7fe feea 	bl	8001d58 <HAL_RCC_GetPCLK1Freq>
 8002f84:	60f8      	str	r0, [r7, #12]
 8002f86:	68fa      	ldr	r2, [r7, #12]
 8002f88:	4613      	mov	r3, r2
 8002f8a:	009b      	lsls	r3, r3, #2
 8002f8c:	4413      	add	r3, r2
 8002f8e:	009a      	lsls	r2, r3, #2
 8002f90:	441a      	add	r2, r3
 8002f92:	687b      	ldr	r3, [r7, #4]
 8002f94:	685b      	ldr	r3, [r3, #4]
 8002f96:	009b      	lsls	r3, r3, #2
 8002f98:	fbb2 f3f3 	udiv	r3, r2, r3
 8002f9c:	4a22      	ldr	r2, [pc, #136]	@ (8003028 <UART_SetConfig+0x118>)
 8002f9e:	fba2 2303 	umull	r2, r3, r2, r3
 8002fa2:	095b      	lsrs	r3, r3, #5
 8002fa4:	0119      	lsls	r1, r3, #4
 8002fa6:	68fa      	ldr	r2, [r7, #12]
 8002fa8:	4613      	mov	r3, r2
 8002faa:	009b      	lsls	r3, r3, #2
 8002fac:	4413      	add	r3, r2
 8002fae:	009a      	lsls	r2, r3, #2
 8002fb0:	441a      	add	r2, r3
 8002fb2:	687b      	ldr	r3, [r7, #4]
 8002fb4:	685b      	ldr	r3, [r3, #4]
 8002fb6:	009b      	lsls	r3, r3, #2
 8002fb8:	fbb2 f2f3 	udiv	r2, r2, r3
 8002fbc:	4b1a      	ldr	r3, [pc, #104]	@ (8003028 <UART_SetConfig+0x118>)
 8002fbe:	fba3 0302 	umull	r0, r3, r3, r2
 8002fc2:	095b      	lsrs	r3, r3, #5
 8002fc4:	2064      	movs	r0, #100	@ 0x64
 8002fc6:	fb00 f303 	mul.w	r3, r0, r3
 8002fca:	1ad3      	subs	r3, r2, r3
 8002fcc:	011b      	lsls	r3, r3, #4
 8002fce:	3332      	adds	r3, #50	@ 0x32
 8002fd0:	4a15      	ldr	r2, [pc, #84]	@ (8003028 <UART_SetConfig+0x118>)
 8002fd2:	fba2 2303 	umull	r2, r3, r2, r3
 8002fd6:	095b      	lsrs	r3, r3, #5
 8002fd8:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8002fdc:	4419      	add	r1, r3
 8002fde:	68fa      	ldr	r2, [r7, #12]
 8002fe0:	4613      	mov	r3, r2
 8002fe2:	009b      	lsls	r3, r3, #2
 8002fe4:	4413      	add	r3, r2
 8002fe6:	009a      	lsls	r2, r3, #2
 8002fe8:	441a      	add	r2, r3
 8002fea:	687b      	ldr	r3, [r7, #4]
 8002fec:	685b      	ldr	r3, [r3, #4]
 8002fee:	009b      	lsls	r3, r3, #2
 8002ff0:	fbb2 f2f3 	udiv	r2, r2, r3
 8002ff4:	4b0c      	ldr	r3, [pc, #48]	@ (8003028 <UART_SetConfig+0x118>)
 8002ff6:	fba3 0302 	umull	r0, r3, r3, r2
 8002ffa:	095b      	lsrs	r3, r3, #5
 8002ffc:	2064      	movs	r0, #100	@ 0x64
 8002ffe:	fb00 f303 	mul.w	r3, r0, r3
 8003002:	1ad3      	subs	r3, r2, r3
 8003004:	011b      	lsls	r3, r3, #4
 8003006:	3332      	adds	r3, #50	@ 0x32
 8003008:	4a07      	ldr	r2, [pc, #28]	@ (8003028 <UART_SetConfig+0x118>)
 800300a:	fba2 2303 	umull	r2, r3, r2, r3
 800300e:	095b      	lsrs	r3, r3, #5
 8003010:	f003 020f 	and.w	r2, r3, #15
 8003014:	687b      	ldr	r3, [r7, #4]
 8003016:	681b      	ldr	r3, [r3, #0]
 8003018:	440a      	add	r2, r1
 800301a:	609a      	str	r2, [r3, #8]
 800301c:	bf00      	nop
 800301e:	3710      	adds	r7, #16
 8003020:	46bd      	mov	sp, r7
 8003022:	bd80      	pop	{r7, pc}
 8003024:	40013800 	.word	0x40013800
 8003028:	51eb851f 	.word	0x51eb851f

0800302c <makeFreeRtosPriority>:
 800302c:	b480      	push	{r7}
 800302e:	b085      	sub	sp, #20
 8003030:	af00      	add	r7, sp, #0
 8003032:	4603      	mov	r3, r0
 8003034:	80fb      	strh	r3, [r7, #6]
 8003036:	2300      	movs	r3, #0
 8003038:	60fb      	str	r3, [r7, #12]
 800303a:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800303e:	2b84      	cmp	r3, #132	@ 0x84
 8003040:	d005      	beq.n	800304e <makeFreeRtosPriority+0x22>
 8003042:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 8003046:	68fb      	ldr	r3, [r7, #12]
 8003048:	4413      	add	r3, r2
 800304a:	3303      	adds	r3, #3
 800304c:	60fb      	str	r3, [r7, #12]
 800304e:	68fb      	ldr	r3, [r7, #12]
 8003050:	4618      	mov	r0, r3
 8003052:	3714      	adds	r7, #20
 8003054:	46bd      	mov	sp, r7
 8003056:	bc80      	pop	{r7}
 8003058:	4770      	bx	lr

0800305a <osKernelStart>:
 800305a:	b580      	push	{r7, lr}
 800305c:	af00      	add	r7, sp, #0
 800305e:	f000 fadf 	bl	8003620 <vTaskStartScheduler>
 8003062:	2300      	movs	r3, #0
 8003064:	4618      	mov	r0, r3
 8003066:	bd80      	pop	{r7, pc}

08003068 <osThreadCreate>:
 8003068:	b5f0      	push	{r4, r5, r6, r7, lr}
 800306a:	b089      	sub	sp, #36	@ 0x24
 800306c:	af04      	add	r7, sp, #16
 800306e:	6078      	str	r0, [r7, #4]
 8003070:	6039      	str	r1, [r7, #0]
 8003072:	687b      	ldr	r3, [r7, #4]
 8003074:	695b      	ldr	r3, [r3, #20]
 8003076:	2b00      	cmp	r3, #0
 8003078:	d020      	beq.n	80030bc <osThreadCreate+0x54>
 800307a:	687b      	ldr	r3, [r7, #4]
 800307c:	699b      	ldr	r3, [r3, #24]
 800307e:	2b00      	cmp	r3, #0
 8003080:	d01c      	beq.n	80030bc <osThreadCreate+0x54>
 8003082:	687b      	ldr	r3, [r7, #4]
 8003084:	685c      	ldr	r4, [r3, #4]
 8003086:	687b      	ldr	r3, [r7, #4]
 8003088:	681d      	ldr	r5, [r3, #0]
 800308a:	687b      	ldr	r3, [r7, #4]
 800308c:	691e      	ldr	r6, [r3, #16]
 800308e:	687b      	ldr	r3, [r7, #4]
 8003090:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8003094:	4618      	mov	r0, r3
 8003096:	f7ff ffc9 	bl	800302c <makeFreeRtosPriority>
 800309a:	4601      	mov	r1, r0
 800309c:	687b      	ldr	r3, [r7, #4]
 800309e:	695b      	ldr	r3, [r3, #20]
 80030a0:	687a      	ldr	r2, [r7, #4]
 80030a2:	6992      	ldr	r2, [r2, #24]
 80030a4:	9202      	str	r2, [sp, #8]
 80030a6:	9301      	str	r3, [sp, #4]
 80030a8:	9100      	str	r1, [sp, #0]
 80030aa:	683b      	ldr	r3, [r7, #0]
 80030ac:	4632      	mov	r2, r6
 80030ae:	4629      	mov	r1, r5
 80030b0:	4620      	mov	r0, r4
 80030b2:	f000 f8e8 	bl	8003286 <xTaskCreateStatic>
 80030b6:	4603      	mov	r3, r0
 80030b8:	60fb      	str	r3, [r7, #12]
 80030ba:	e01c      	b.n	80030f6 <osThreadCreate+0x8e>
 80030bc:	687b      	ldr	r3, [r7, #4]
 80030be:	685c      	ldr	r4, [r3, #4]
 80030c0:	687b      	ldr	r3, [r7, #4]
 80030c2:	681d      	ldr	r5, [r3, #0]
 80030c4:	687b      	ldr	r3, [r7, #4]
 80030c6:	691b      	ldr	r3, [r3, #16]
 80030c8:	b29e      	uxth	r6, r3
 80030ca:	687b      	ldr	r3, [r7, #4]
 80030cc:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80030d0:	4618      	mov	r0, r3
 80030d2:	f7ff ffab 	bl	800302c <makeFreeRtosPriority>
 80030d6:	4602      	mov	r2, r0
 80030d8:	f107 030c 	add.w	r3, r7, #12
 80030dc:	9301      	str	r3, [sp, #4]
 80030de:	9200      	str	r2, [sp, #0]
 80030e0:	683b      	ldr	r3, [r7, #0]
 80030e2:	4632      	mov	r2, r6
 80030e4:	4629      	mov	r1, r5
 80030e6:	4620      	mov	r0, r4
 80030e8:	f000 f92d 	bl	8003346 <xTaskCreate>
 80030ec:	4603      	mov	r3, r0
 80030ee:	2b01      	cmp	r3, #1
 80030f0:	d001      	beq.n	80030f6 <osThreadCreate+0x8e>
 80030f2:	2300      	movs	r3, #0
 80030f4:	e000      	b.n	80030f8 <osThreadCreate+0x90>
 80030f6:	68fb      	ldr	r3, [r7, #12]
 80030f8:	4618      	mov	r0, r3
 80030fa:	3714      	adds	r7, #20
 80030fc:	46bd      	mov	sp, r7
 80030fe:	bdf0      	pop	{r4, r5, r6, r7, pc}

08003100 <osDelay>:
 8003100:	b580      	push	{r7, lr}
 8003102:	b084      	sub	sp, #16
 8003104:	af00      	add	r7, sp, #0
 8003106:	6078      	str	r0, [r7, #4]
 8003108:	687b      	ldr	r3, [r7, #4]
 800310a:	60fb      	str	r3, [r7, #12]
 800310c:	68fb      	ldr	r3, [r7, #12]
 800310e:	2b00      	cmp	r3, #0
 8003110:	d001      	beq.n	8003116 <osDelay+0x16>
 8003112:	68fb      	ldr	r3, [r7, #12]
 8003114:	e000      	b.n	8003118 <osDelay+0x18>
 8003116:	2301      	movs	r3, #1
 8003118:	4618      	mov	r0, r3
 800311a:	f000 fa4b 	bl	80035b4 <vTaskDelay>
 800311e:	2300      	movs	r3, #0
 8003120:	4618      	mov	r0, r3
 8003122:	3710      	adds	r7, #16
 8003124:	46bd      	mov	sp, r7
 8003126:	bd80      	pop	{r7, pc}

08003128 <vListInitialise>:
 8003128:	b480      	push	{r7}
 800312a:	b083      	sub	sp, #12
 800312c:	af00      	add	r7, sp, #0
 800312e:	6078      	str	r0, [r7, #4]
 8003130:	687b      	ldr	r3, [r7, #4]
 8003132:	f103 0208 	add.w	r2, r3, #8
 8003136:	687b      	ldr	r3, [r7, #4]
 8003138:	605a      	str	r2, [r3, #4]
 800313a:	687b      	ldr	r3, [r7, #4]
 800313c:	f04f 32ff 	mov.w	r2, #4294967295
 8003140:	609a      	str	r2, [r3, #8]
 8003142:	687b      	ldr	r3, [r7, #4]
 8003144:	f103 0208 	add.w	r2, r3, #8
 8003148:	687b      	ldr	r3, [r7, #4]
 800314a:	60da      	str	r2, [r3, #12]
 800314c:	687b      	ldr	r3, [r7, #4]
 800314e:	f103 0208 	add.w	r2, r3, #8
 8003152:	687b      	ldr	r3, [r7, #4]
 8003154:	611a      	str	r2, [r3, #16]
 8003156:	687b      	ldr	r3, [r7, #4]
 8003158:	2200      	movs	r2, #0
 800315a:	601a      	str	r2, [r3, #0]
 800315c:	bf00      	nop
 800315e:	370c      	adds	r7, #12
 8003160:	46bd      	mov	sp, r7
 8003162:	bc80      	pop	{r7}
 8003164:	4770      	bx	lr

08003166 <vListInitialiseItem>:
 8003166:	b480      	push	{r7}
 8003168:	b083      	sub	sp, #12
 800316a:	af00      	add	r7, sp, #0
 800316c:	6078      	str	r0, [r7, #4]
 800316e:	687b      	ldr	r3, [r7, #4]
 8003170:	2200      	movs	r2, #0
 8003172:	611a      	str	r2, [r3, #16]
 8003174:	bf00      	nop
 8003176:	370c      	adds	r7, #12
 8003178:	46bd      	mov	sp, r7
 800317a:	bc80      	pop	{r7}
 800317c:	4770      	bx	lr

0800317e <vListInsertEnd>:
 800317e:	b480      	push	{r7}
 8003180:	b085      	sub	sp, #20
 8003182:	af00      	add	r7, sp, #0
 8003184:	6078      	str	r0, [r7, #4]
 8003186:	6039      	str	r1, [r7, #0]
 8003188:	687b      	ldr	r3, [r7, #4]
 800318a:	685b      	ldr	r3, [r3, #4]
 800318c:	60fb      	str	r3, [r7, #12]
 800318e:	683b      	ldr	r3, [r7, #0]
 8003190:	68fa      	ldr	r2, [r7, #12]
 8003192:	605a      	str	r2, [r3, #4]
 8003194:	68fb      	ldr	r3, [r7, #12]
 8003196:	689a      	ldr	r2, [r3, #8]
 8003198:	683b      	ldr	r3, [r7, #0]
 800319a:	609a      	str	r2, [r3, #8]
 800319c:	68fb      	ldr	r3, [r7, #12]
 800319e:	689b      	ldr	r3, [r3, #8]
 80031a0:	683a      	ldr	r2, [r7, #0]
 80031a2:	605a      	str	r2, [r3, #4]
 80031a4:	68fb      	ldr	r3, [r7, #12]
 80031a6:	683a      	ldr	r2, [r7, #0]
 80031a8:	609a      	str	r2, [r3, #8]
 80031aa:	683b      	ldr	r3, [r7, #0]
 80031ac:	687a      	ldr	r2, [r7, #4]
 80031ae:	611a      	str	r2, [r3, #16]
 80031b0:	687b      	ldr	r3, [r7, #4]
 80031b2:	681b      	ldr	r3, [r3, #0]
 80031b4:	1c5a      	adds	r2, r3, #1
 80031b6:	687b      	ldr	r3, [r7, #4]
 80031b8:	601a      	str	r2, [r3, #0]
 80031ba:	bf00      	nop
 80031bc:	3714      	adds	r7, #20
 80031be:	46bd      	mov	sp, r7
 80031c0:	bc80      	pop	{r7}
 80031c2:	4770      	bx	lr

080031c4 <vListInsert>:
 80031c4:	b480      	push	{r7}
 80031c6:	b085      	sub	sp, #20
 80031c8:	af00      	add	r7, sp, #0
 80031ca:	6078      	str	r0, [r7, #4]
 80031cc:	6039      	str	r1, [r7, #0]
 80031ce:	683b      	ldr	r3, [r7, #0]
 80031d0:	681b      	ldr	r3, [r3, #0]
 80031d2:	60bb      	str	r3, [r7, #8]
 80031d4:	68bb      	ldr	r3, [r7, #8]
 80031d6:	f1b3 3fff 	cmp.w	r3, #4294967295
 80031da:	d103      	bne.n	80031e4 <vListInsert+0x20>
 80031dc:	687b      	ldr	r3, [r7, #4]
 80031de:	691b      	ldr	r3, [r3, #16]
 80031e0:	60fb      	str	r3, [r7, #12]
 80031e2:	e00c      	b.n	80031fe <vListInsert+0x3a>
 80031e4:	687b      	ldr	r3, [r7, #4]
 80031e6:	3308      	adds	r3, #8
 80031e8:	60fb      	str	r3, [r7, #12]
 80031ea:	e002      	b.n	80031f2 <vListInsert+0x2e>
 80031ec:	68fb      	ldr	r3, [r7, #12]
 80031ee:	685b      	ldr	r3, [r3, #4]
 80031f0:	60fb      	str	r3, [r7, #12]
 80031f2:	68fb      	ldr	r3, [r7, #12]
 80031f4:	685b      	ldr	r3, [r3, #4]
 80031f6:	681b      	ldr	r3, [r3, #0]
 80031f8:	68ba      	ldr	r2, [r7, #8]
 80031fa:	429a      	cmp	r2, r3
 80031fc:	d2f6      	bcs.n	80031ec <vListInsert+0x28>
 80031fe:	68fb      	ldr	r3, [r7, #12]
 8003200:	685a      	ldr	r2, [r3, #4]
 8003202:	683b      	ldr	r3, [r7, #0]
 8003204:	605a      	str	r2, [r3, #4]
 8003206:	683b      	ldr	r3, [r7, #0]
 8003208:	685b      	ldr	r3, [r3, #4]
 800320a:	683a      	ldr	r2, [r7, #0]
 800320c:	609a      	str	r2, [r3, #8]
 800320e:	683b      	ldr	r3, [r7, #0]
 8003210:	68fa      	ldr	r2, [r7, #12]
 8003212:	609a      	str	r2, [r3, #8]
 8003214:	68fb      	ldr	r3, [r7, #12]
 8003216:	683a      	ldr	r2, [r7, #0]
 8003218:	605a      	str	r2, [r3, #4]
 800321a:	683b      	ldr	r3, [r7, #0]
 800321c:	687a      	ldr	r2, [r7, #4]
 800321e:	611a      	str	r2, [r3, #16]
 8003220:	687b      	ldr	r3, [r7, #4]
 8003222:	681b      	ldr	r3, [r3, #0]
 8003224:	1c5a      	adds	r2, r3, #1
 8003226:	687b      	ldr	r3, [r7, #4]
 8003228:	601a      	str	r2, [r3, #0]
 800322a:	bf00      	nop
 800322c:	3714      	adds	r7, #20
 800322e:	46bd      	mov	sp, r7
 8003230:	bc80      	pop	{r7}
 8003232:	4770      	bx	lr

08003234 <uxListRemove>:
 8003234:	b480      	push	{r7}
 8003236:	b085      	sub	sp, #20
 8003238:	af00      	add	r7, sp, #0
 800323a:	6078      	str	r0, [r7, #4]
 800323c:	687b      	ldr	r3, [r7, #4]
 800323e:	691b      	ldr	r3, [r3, #16]
 8003240:	60fb      	str	r3, [r7, #12]
 8003242:	687b      	ldr	r3, [r7, #4]
 8003244:	685b      	ldr	r3, [r3, #4]
 8003246:	687a      	ldr	r2, [r7, #4]
 8003248:	6892      	ldr	r2, [r2, #8]
 800324a:	609a      	str	r2, [r3, #8]
 800324c:	687b      	ldr	r3, [r7, #4]
 800324e:	689b      	ldr	r3, [r3, #8]
 8003250:	687a      	ldr	r2, [r7, #4]
 8003252:	6852      	ldr	r2, [r2, #4]
 8003254:	605a      	str	r2, [r3, #4]
 8003256:	68fb      	ldr	r3, [r7, #12]
 8003258:	685b      	ldr	r3, [r3, #4]
 800325a:	687a      	ldr	r2, [r7, #4]
 800325c:	429a      	cmp	r2, r3
 800325e:	d103      	bne.n	8003268 <uxListRemove+0x34>
 8003260:	687b      	ldr	r3, [r7, #4]
 8003262:	689a      	ldr	r2, [r3, #8]
 8003264:	68fb      	ldr	r3, [r7, #12]
 8003266:	605a      	str	r2, [r3, #4]
 8003268:	687b      	ldr	r3, [r7, #4]
 800326a:	2200      	movs	r2, #0
 800326c:	611a      	str	r2, [r3, #16]
 800326e:	68fb      	ldr	r3, [r7, #12]
 8003270:	681b      	ldr	r3, [r3, #0]
 8003272:	1e5a      	subs	r2, r3, #1
 8003274:	68fb      	ldr	r3, [r7, #12]
 8003276:	601a      	str	r2, [r3, #0]
 8003278:	68fb      	ldr	r3, [r7, #12]
 800327a:	681b      	ldr	r3, [r3, #0]
 800327c:	4618      	mov	r0, r3
 800327e:	3714      	adds	r7, #20
 8003280:	46bd      	mov	sp, r7
 8003282:	bc80      	pop	{r7}
 8003284:	4770      	bx	lr

08003286 <xTaskCreateStatic>:
 8003286:	b580      	push	{r7, lr}
 8003288:	b08e      	sub	sp, #56	@ 0x38
 800328a:	af04      	add	r7, sp, #16
 800328c:	60f8      	str	r0, [r7, #12]
 800328e:	60b9      	str	r1, [r7, #8]
 8003290:	607a      	str	r2, [r7, #4]
 8003292:	603b      	str	r3, [r7, #0]
 8003294:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8003296:	2b00      	cmp	r3, #0
 8003298:	d10b      	bne.n	80032b2 <xTaskCreateStatic+0x2c>
 800329a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800329e:	f383 8811 	msr	BASEPRI, r3
 80032a2:	f3bf 8f6f 	isb	sy
 80032a6:	f3bf 8f4f 	dsb	sy
 80032aa:	623b      	str	r3, [r7, #32]
 80032ac:	bf00      	nop
 80032ae:	bf00      	nop
 80032b0:	e7fd      	b.n	80032ae <xTaskCreateStatic+0x28>
 80032b2:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80032b4:	2b00      	cmp	r3, #0
 80032b6:	d10b      	bne.n	80032d0 <xTaskCreateStatic+0x4a>
 80032b8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80032bc:	f383 8811 	msr	BASEPRI, r3
 80032c0:	f3bf 8f6f 	isb	sy
 80032c4:	f3bf 8f4f 	dsb	sy
 80032c8:	61fb      	str	r3, [r7, #28]
 80032ca:	bf00      	nop
 80032cc:	bf00      	nop
 80032ce:	e7fd      	b.n	80032cc <xTaskCreateStatic+0x46>
 80032d0:	2354      	movs	r3, #84	@ 0x54
 80032d2:	613b      	str	r3, [r7, #16]
 80032d4:	693b      	ldr	r3, [r7, #16]
 80032d6:	2b54      	cmp	r3, #84	@ 0x54
 80032d8:	d00b      	beq.n	80032f2 <xTaskCreateStatic+0x6c>
 80032da:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80032de:	f383 8811 	msr	BASEPRI, r3
 80032e2:	f3bf 8f6f 	isb	sy
 80032e6:	f3bf 8f4f 	dsb	sy
 80032ea:	61bb      	str	r3, [r7, #24]
 80032ec:	bf00      	nop
 80032ee:	bf00      	nop
 80032f0:	e7fd      	b.n	80032ee <xTaskCreateStatic+0x68>
 80032f2:	693b      	ldr	r3, [r7, #16]
 80032f4:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80032f6:	2b00      	cmp	r3, #0
 80032f8:	d01e      	beq.n	8003338 <xTaskCreateStatic+0xb2>
 80032fa:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80032fc:	2b00      	cmp	r3, #0
 80032fe:	d01b      	beq.n	8003338 <xTaskCreateStatic+0xb2>
 8003300:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8003302:	627b      	str	r3, [r7, #36]	@ 0x24
 8003304:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003306:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 8003308:	631a      	str	r2, [r3, #48]	@ 0x30
 800330a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800330c:	2202      	movs	r2, #2
 800330e:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8003312:	2300      	movs	r3, #0
 8003314:	9303      	str	r3, [sp, #12]
 8003316:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003318:	9302      	str	r3, [sp, #8]
 800331a:	f107 0314 	add.w	r3, r7, #20
 800331e:	9301      	str	r3, [sp, #4]
 8003320:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8003322:	9300      	str	r3, [sp, #0]
 8003324:	683b      	ldr	r3, [r7, #0]
 8003326:	687a      	ldr	r2, [r7, #4]
 8003328:	68b9      	ldr	r1, [r7, #8]
 800332a:	68f8      	ldr	r0, [r7, #12]
 800332c:	f000 f850 	bl	80033d0 <prvInitialiseNewTask>
 8003330:	6a78      	ldr	r0, [r7, #36]	@ 0x24
 8003332:	f000 f8d5 	bl	80034e0 <prvAddNewTaskToReadyList>
 8003336:	e001      	b.n	800333c <xTaskCreateStatic+0xb6>
 8003338:	2300      	movs	r3, #0
 800333a:	617b      	str	r3, [r7, #20]
 800333c:	697b      	ldr	r3, [r7, #20]
 800333e:	4618      	mov	r0, r3
 8003340:	3728      	adds	r7, #40	@ 0x28
 8003342:	46bd      	mov	sp, r7
 8003344:	bd80      	pop	{r7, pc}

08003346 <xTaskCreate>:
 8003346:	b580      	push	{r7, lr}
 8003348:	b08c      	sub	sp, #48	@ 0x30
 800334a:	af04      	add	r7, sp, #16
 800334c:	60f8      	str	r0, [r7, #12]
 800334e:	60b9      	str	r1, [r7, #8]
 8003350:	603b      	str	r3, [r7, #0]
 8003352:	4613      	mov	r3, r2
 8003354:	80fb      	strh	r3, [r7, #6]
 8003356:	88fb      	ldrh	r3, [r7, #6]
 8003358:	009b      	lsls	r3, r3, #2
 800335a:	4618      	mov	r0, r3
 800335c:	f000 fe90 	bl	8004080 <pvPortMalloc>
 8003360:	6178      	str	r0, [r7, #20]
 8003362:	697b      	ldr	r3, [r7, #20]
 8003364:	2b00      	cmp	r3, #0
 8003366:	d00e      	beq.n	8003386 <xTaskCreate+0x40>
 8003368:	2054      	movs	r0, #84	@ 0x54
 800336a:	f000 fe89 	bl	8004080 <pvPortMalloc>
 800336e:	61f8      	str	r0, [r7, #28]
 8003370:	69fb      	ldr	r3, [r7, #28]
 8003372:	2b00      	cmp	r3, #0
 8003374:	d003      	beq.n	800337e <xTaskCreate+0x38>
 8003376:	69fb      	ldr	r3, [r7, #28]
 8003378:	697a      	ldr	r2, [r7, #20]
 800337a:	631a      	str	r2, [r3, #48]	@ 0x30
 800337c:	e005      	b.n	800338a <xTaskCreate+0x44>
 800337e:	6978      	ldr	r0, [r7, #20]
 8003380:	f000 ff4c 	bl	800421c <vPortFree>
 8003384:	e001      	b.n	800338a <xTaskCreate+0x44>
 8003386:	2300      	movs	r3, #0
 8003388:	61fb      	str	r3, [r7, #28]
 800338a:	69fb      	ldr	r3, [r7, #28]
 800338c:	2b00      	cmp	r3, #0
 800338e:	d017      	beq.n	80033c0 <xTaskCreate+0x7a>
 8003390:	69fb      	ldr	r3, [r7, #28]
 8003392:	2200      	movs	r2, #0
 8003394:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8003398:	88fa      	ldrh	r2, [r7, #6]
 800339a:	2300      	movs	r3, #0
 800339c:	9303      	str	r3, [sp, #12]
 800339e:	69fb      	ldr	r3, [r7, #28]
 80033a0:	9302      	str	r3, [sp, #8]
 80033a2:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80033a4:	9301      	str	r3, [sp, #4]
 80033a6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80033a8:	9300      	str	r3, [sp, #0]
 80033aa:	683b      	ldr	r3, [r7, #0]
 80033ac:	68b9      	ldr	r1, [r7, #8]
 80033ae:	68f8      	ldr	r0, [r7, #12]
 80033b0:	f000 f80e 	bl	80033d0 <prvInitialiseNewTask>
 80033b4:	69f8      	ldr	r0, [r7, #28]
 80033b6:	f000 f893 	bl	80034e0 <prvAddNewTaskToReadyList>
 80033ba:	2301      	movs	r3, #1
 80033bc:	61bb      	str	r3, [r7, #24]
 80033be:	e002      	b.n	80033c6 <xTaskCreate+0x80>
 80033c0:	f04f 33ff 	mov.w	r3, #4294967295
 80033c4:	61bb      	str	r3, [r7, #24]
 80033c6:	69bb      	ldr	r3, [r7, #24]
 80033c8:	4618      	mov	r0, r3
 80033ca:	3720      	adds	r7, #32
 80033cc:	46bd      	mov	sp, r7
 80033ce:	bd80      	pop	{r7, pc}

080033d0 <prvInitialiseNewTask>:
 80033d0:	b580      	push	{r7, lr}
 80033d2:	b088      	sub	sp, #32
 80033d4:	af00      	add	r7, sp, #0
 80033d6:	60f8      	str	r0, [r7, #12]
 80033d8:	60b9      	str	r1, [r7, #8]
 80033da:	607a      	str	r2, [r7, #4]
 80033dc:	603b      	str	r3, [r7, #0]
 80033de:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80033e0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80033e2:	687b      	ldr	r3, [r7, #4]
 80033e4:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 80033e8:	3b01      	subs	r3, #1
 80033ea:	009b      	lsls	r3, r3, #2
 80033ec:	4413      	add	r3, r2
 80033ee:	61bb      	str	r3, [r7, #24]
 80033f0:	69bb      	ldr	r3, [r7, #24]
 80033f2:	f023 0307 	bic.w	r3, r3, #7
 80033f6:	61bb      	str	r3, [r7, #24]
 80033f8:	69bb      	ldr	r3, [r7, #24]
 80033fa:	f003 0307 	and.w	r3, r3, #7
 80033fe:	2b00      	cmp	r3, #0
 8003400:	d00b      	beq.n	800341a <prvInitialiseNewTask+0x4a>
 8003402:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8003406:	f383 8811 	msr	BASEPRI, r3
 800340a:	f3bf 8f6f 	isb	sy
 800340e:	f3bf 8f4f 	dsb	sy
 8003412:	617b      	str	r3, [r7, #20]
 8003414:	bf00      	nop
 8003416:	bf00      	nop
 8003418:	e7fd      	b.n	8003416 <prvInitialiseNewTask+0x46>
 800341a:	68bb      	ldr	r3, [r7, #8]
 800341c:	2b00      	cmp	r3, #0
 800341e:	d01f      	beq.n	8003460 <prvInitialiseNewTask+0x90>
 8003420:	2300      	movs	r3, #0
 8003422:	61fb      	str	r3, [r7, #28]
 8003424:	e012      	b.n	800344c <prvInitialiseNewTask+0x7c>
 8003426:	68ba      	ldr	r2, [r7, #8]
 8003428:	69fb      	ldr	r3, [r7, #28]
 800342a:	4413      	add	r3, r2
 800342c:	7819      	ldrb	r1, [r3, #0]
 800342e:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8003430:	69fb      	ldr	r3, [r7, #28]
 8003432:	4413      	add	r3, r2
 8003434:	3334      	adds	r3, #52	@ 0x34
 8003436:	460a      	mov	r2, r1
 8003438:	701a      	strb	r2, [r3, #0]
 800343a:	68ba      	ldr	r2, [r7, #8]
 800343c:	69fb      	ldr	r3, [r7, #28]
 800343e:	4413      	add	r3, r2
 8003440:	781b      	ldrb	r3, [r3, #0]
 8003442:	2b00      	cmp	r3, #0
 8003444:	d006      	beq.n	8003454 <prvInitialiseNewTask+0x84>
 8003446:	69fb      	ldr	r3, [r7, #28]
 8003448:	3301      	adds	r3, #1
 800344a:	61fb      	str	r3, [r7, #28]
 800344c:	69fb      	ldr	r3, [r7, #28]
 800344e:	2b0f      	cmp	r3, #15
 8003450:	d9e9      	bls.n	8003426 <prvInitialiseNewTask+0x56>
 8003452:	e000      	b.n	8003456 <prvInitialiseNewTask+0x86>
 8003454:	bf00      	nop
 8003456:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8003458:	2200      	movs	r2, #0
 800345a:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 800345e:	e003      	b.n	8003468 <prvInitialiseNewTask+0x98>
 8003460:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8003462:	2200      	movs	r2, #0
 8003464:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8003468:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800346a:	2b06      	cmp	r3, #6
 800346c:	d901      	bls.n	8003472 <prvInitialiseNewTask+0xa2>
 800346e:	2306      	movs	r3, #6
 8003470:	62bb      	str	r3, [r7, #40]	@ 0x28
 8003472:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8003474:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8003476:	62da      	str	r2, [r3, #44]	@ 0x2c
 8003478:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800347a:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 800347c:	645a      	str	r2, [r3, #68]	@ 0x44
 800347e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8003480:	2200      	movs	r2, #0
 8003482:	649a      	str	r2, [r3, #72]	@ 0x48
 8003484:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8003486:	3304      	adds	r3, #4
 8003488:	4618      	mov	r0, r3
 800348a:	f7ff fe6c 	bl	8003166 <vListInitialiseItem>
 800348e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8003490:	3318      	adds	r3, #24
 8003492:	4618      	mov	r0, r3
 8003494:	f7ff fe67 	bl	8003166 <vListInitialiseItem>
 8003498:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800349a:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800349c:	611a      	str	r2, [r3, #16]
 800349e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80034a0:	f1c3 0207 	rsb	r2, r3, #7
 80034a4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80034a6:	619a      	str	r2, [r3, #24]
 80034a8:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80034aa:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80034ac:	625a      	str	r2, [r3, #36]	@ 0x24
 80034ae:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80034b0:	2200      	movs	r2, #0
 80034b2:	64da      	str	r2, [r3, #76]	@ 0x4c
 80034b4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80034b6:	2200      	movs	r2, #0
 80034b8:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 80034bc:	683a      	ldr	r2, [r7, #0]
 80034be:	68f9      	ldr	r1, [r7, #12]
 80034c0:	69b8      	ldr	r0, [r7, #24]
 80034c2:	f000 fc2b 	bl	8003d1c <pxPortInitialiseStack>
 80034c6:	4602      	mov	r2, r0
 80034c8:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80034ca:	601a      	str	r2, [r3, #0]
 80034cc:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80034ce:	2b00      	cmp	r3, #0
 80034d0:	d002      	beq.n	80034d8 <prvInitialiseNewTask+0x108>
 80034d2:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80034d4:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80034d6:	601a      	str	r2, [r3, #0]
 80034d8:	bf00      	nop
 80034da:	3720      	adds	r7, #32
 80034dc:	46bd      	mov	sp, r7
 80034de:	bd80      	pop	{r7, pc}

080034e0 <prvAddNewTaskToReadyList>:
 80034e0:	b580      	push	{r7, lr}
 80034e2:	b082      	sub	sp, #8
 80034e4:	af00      	add	r7, sp, #0
 80034e6:	6078      	str	r0, [r7, #4]
 80034e8:	f000 fd08 	bl	8003efc <vPortEnterCritical>
 80034ec:	4b2a      	ldr	r3, [pc, #168]	@ (8003598 <prvAddNewTaskToReadyList+0xb8>)
 80034ee:	681b      	ldr	r3, [r3, #0]
 80034f0:	3301      	adds	r3, #1
 80034f2:	4a29      	ldr	r2, [pc, #164]	@ (8003598 <prvAddNewTaskToReadyList+0xb8>)
 80034f4:	6013      	str	r3, [r2, #0]
 80034f6:	4b29      	ldr	r3, [pc, #164]	@ (800359c <prvAddNewTaskToReadyList+0xbc>)
 80034f8:	681b      	ldr	r3, [r3, #0]
 80034fa:	2b00      	cmp	r3, #0
 80034fc:	d109      	bne.n	8003512 <prvAddNewTaskToReadyList+0x32>
 80034fe:	4a27      	ldr	r2, [pc, #156]	@ (800359c <prvAddNewTaskToReadyList+0xbc>)
 8003500:	687b      	ldr	r3, [r7, #4]
 8003502:	6013      	str	r3, [r2, #0]
 8003504:	4b24      	ldr	r3, [pc, #144]	@ (8003598 <prvAddNewTaskToReadyList+0xb8>)
 8003506:	681b      	ldr	r3, [r3, #0]
 8003508:	2b01      	cmp	r3, #1
 800350a:	d110      	bne.n	800352e <prvAddNewTaskToReadyList+0x4e>
 800350c:	f000 fac4 	bl	8003a98 <prvInitialiseTaskLists>
 8003510:	e00d      	b.n	800352e <prvAddNewTaskToReadyList+0x4e>
 8003512:	4b23      	ldr	r3, [pc, #140]	@ (80035a0 <prvAddNewTaskToReadyList+0xc0>)
 8003514:	681b      	ldr	r3, [r3, #0]
 8003516:	2b00      	cmp	r3, #0
 8003518:	d109      	bne.n	800352e <prvAddNewTaskToReadyList+0x4e>
 800351a:	4b20      	ldr	r3, [pc, #128]	@ (800359c <prvAddNewTaskToReadyList+0xbc>)
 800351c:	681b      	ldr	r3, [r3, #0]
 800351e:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8003520:	687b      	ldr	r3, [r7, #4]
 8003522:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003524:	429a      	cmp	r2, r3
 8003526:	d802      	bhi.n	800352e <prvAddNewTaskToReadyList+0x4e>
 8003528:	4a1c      	ldr	r2, [pc, #112]	@ (800359c <prvAddNewTaskToReadyList+0xbc>)
 800352a:	687b      	ldr	r3, [r7, #4]
 800352c:	6013      	str	r3, [r2, #0]
 800352e:	4b1d      	ldr	r3, [pc, #116]	@ (80035a4 <prvAddNewTaskToReadyList+0xc4>)
 8003530:	681b      	ldr	r3, [r3, #0]
 8003532:	3301      	adds	r3, #1
 8003534:	4a1b      	ldr	r2, [pc, #108]	@ (80035a4 <prvAddNewTaskToReadyList+0xc4>)
 8003536:	6013      	str	r3, [r2, #0]
 8003538:	687b      	ldr	r3, [r7, #4]
 800353a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800353c:	2201      	movs	r2, #1
 800353e:	409a      	lsls	r2, r3
 8003540:	4b19      	ldr	r3, [pc, #100]	@ (80035a8 <prvAddNewTaskToReadyList+0xc8>)
 8003542:	681b      	ldr	r3, [r3, #0]
 8003544:	4313      	orrs	r3, r2
 8003546:	4a18      	ldr	r2, [pc, #96]	@ (80035a8 <prvAddNewTaskToReadyList+0xc8>)
 8003548:	6013      	str	r3, [r2, #0]
 800354a:	687b      	ldr	r3, [r7, #4]
 800354c:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800354e:	4613      	mov	r3, r2
 8003550:	009b      	lsls	r3, r3, #2
 8003552:	4413      	add	r3, r2
 8003554:	009b      	lsls	r3, r3, #2
 8003556:	4a15      	ldr	r2, [pc, #84]	@ (80035ac <prvAddNewTaskToReadyList+0xcc>)
 8003558:	441a      	add	r2, r3
 800355a:	687b      	ldr	r3, [r7, #4]
 800355c:	3304      	adds	r3, #4
 800355e:	4619      	mov	r1, r3
 8003560:	4610      	mov	r0, r2
 8003562:	f7ff fe0c 	bl	800317e <vListInsertEnd>
 8003566:	f000 fcf9 	bl	8003f5c <vPortExitCritical>
 800356a:	4b0d      	ldr	r3, [pc, #52]	@ (80035a0 <prvAddNewTaskToReadyList+0xc0>)
 800356c:	681b      	ldr	r3, [r3, #0]
 800356e:	2b00      	cmp	r3, #0
 8003570:	d00e      	beq.n	8003590 <prvAddNewTaskToReadyList+0xb0>
 8003572:	4b0a      	ldr	r3, [pc, #40]	@ (800359c <prvAddNewTaskToReadyList+0xbc>)
 8003574:	681b      	ldr	r3, [r3, #0]
 8003576:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8003578:	687b      	ldr	r3, [r7, #4]
 800357a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800357c:	429a      	cmp	r2, r3
 800357e:	d207      	bcs.n	8003590 <prvAddNewTaskToReadyList+0xb0>
 8003580:	4b0b      	ldr	r3, [pc, #44]	@ (80035b0 <prvAddNewTaskToReadyList+0xd0>)
 8003582:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8003586:	601a      	str	r2, [r3, #0]
 8003588:	f3bf 8f4f 	dsb	sy
 800358c:	f3bf 8f6f 	isb	sy
 8003590:	bf00      	nop
 8003592:	3708      	adds	r7, #8
 8003594:	46bd      	mov	sp, r7
 8003596:	bd80      	pop	{r7, pc}
 8003598:	20000488 	.word	0x20000488
 800359c:	20000388 	.word	0x20000388
 80035a0:	20000494 	.word	0x20000494
 80035a4:	200004a4 	.word	0x200004a4
 80035a8:	20000490 	.word	0x20000490
 80035ac:	2000038c 	.word	0x2000038c
 80035b0:	e000ed04 	.word	0xe000ed04

080035b4 <vTaskDelay>:
 80035b4:	b580      	push	{r7, lr}
 80035b6:	b084      	sub	sp, #16
 80035b8:	af00      	add	r7, sp, #0
 80035ba:	6078      	str	r0, [r7, #4]
 80035bc:	2300      	movs	r3, #0
 80035be:	60fb      	str	r3, [r7, #12]
 80035c0:	687b      	ldr	r3, [r7, #4]
 80035c2:	2b00      	cmp	r3, #0
 80035c4:	d018      	beq.n	80035f8 <vTaskDelay+0x44>
 80035c6:	4b14      	ldr	r3, [pc, #80]	@ (8003618 <vTaskDelay+0x64>)
 80035c8:	681b      	ldr	r3, [r3, #0]
 80035ca:	2b00      	cmp	r3, #0
 80035cc:	d00b      	beq.n	80035e6 <vTaskDelay+0x32>
 80035ce:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80035d2:	f383 8811 	msr	BASEPRI, r3
 80035d6:	f3bf 8f6f 	isb	sy
 80035da:	f3bf 8f4f 	dsb	sy
 80035de:	60bb      	str	r3, [r7, #8]
 80035e0:	bf00      	nop
 80035e2:	bf00      	nop
 80035e4:	e7fd      	b.n	80035e2 <vTaskDelay+0x2e>
 80035e6:	f000 f87d 	bl	80036e4 <vTaskSuspendAll>
 80035ea:	2100      	movs	r1, #0
 80035ec:	6878      	ldr	r0, [r7, #4]
 80035ee:	f000 fb2f 	bl	8003c50 <prvAddCurrentTaskToDelayedList>
 80035f2:	f000 f885 	bl	8003700 <xTaskResumeAll>
 80035f6:	60f8      	str	r0, [r7, #12]
 80035f8:	68fb      	ldr	r3, [r7, #12]
 80035fa:	2b00      	cmp	r3, #0
 80035fc:	d107      	bne.n	800360e <vTaskDelay+0x5a>
 80035fe:	4b07      	ldr	r3, [pc, #28]	@ (800361c <vTaskDelay+0x68>)
 8003600:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8003604:	601a      	str	r2, [r3, #0]
 8003606:	f3bf 8f4f 	dsb	sy
 800360a:	f3bf 8f6f 	isb	sy
 800360e:	bf00      	nop
 8003610:	3710      	adds	r7, #16
 8003612:	46bd      	mov	sp, r7
 8003614:	bd80      	pop	{r7, pc}
 8003616:	bf00      	nop
 8003618:	200004b0 	.word	0x200004b0
 800361c:	e000ed04 	.word	0xe000ed04

08003620 <vTaskStartScheduler>:
 8003620:	b580      	push	{r7, lr}
 8003622:	b08a      	sub	sp, #40	@ 0x28
 8003624:	af04      	add	r7, sp, #16
 8003626:	2300      	movs	r3, #0
 8003628:	60bb      	str	r3, [r7, #8]
 800362a:	2300      	movs	r3, #0
 800362c:	607b      	str	r3, [r7, #4]
 800362e:	463a      	mov	r2, r7
 8003630:	1d39      	adds	r1, r7, #4
 8003632:	f107 0308 	add.w	r3, r7, #8
 8003636:	4618      	mov	r0, r3
 8003638:	f7fc fef0 	bl	800041c <vApplicationGetIdleTaskMemory>
 800363c:	6839      	ldr	r1, [r7, #0]
 800363e:	687b      	ldr	r3, [r7, #4]
 8003640:	68ba      	ldr	r2, [r7, #8]
 8003642:	9202      	str	r2, [sp, #8]
 8003644:	9301      	str	r3, [sp, #4]
 8003646:	2300      	movs	r3, #0
 8003648:	9300      	str	r3, [sp, #0]
 800364a:	2300      	movs	r3, #0
 800364c:	460a      	mov	r2, r1
 800364e:	491f      	ldr	r1, [pc, #124]	@ (80036cc <vTaskStartScheduler+0xac>)
 8003650:	481f      	ldr	r0, [pc, #124]	@ (80036d0 <vTaskStartScheduler+0xb0>)
 8003652:	f7ff fe18 	bl	8003286 <xTaskCreateStatic>
 8003656:	4603      	mov	r3, r0
 8003658:	4a1e      	ldr	r2, [pc, #120]	@ (80036d4 <vTaskStartScheduler+0xb4>)
 800365a:	6013      	str	r3, [r2, #0]
 800365c:	4b1d      	ldr	r3, [pc, #116]	@ (80036d4 <vTaskStartScheduler+0xb4>)
 800365e:	681b      	ldr	r3, [r3, #0]
 8003660:	2b00      	cmp	r3, #0
 8003662:	d002      	beq.n	800366a <vTaskStartScheduler+0x4a>
 8003664:	2301      	movs	r3, #1
 8003666:	617b      	str	r3, [r7, #20]
 8003668:	e001      	b.n	800366e <vTaskStartScheduler+0x4e>
 800366a:	2300      	movs	r3, #0
 800366c:	617b      	str	r3, [r7, #20]
 800366e:	697b      	ldr	r3, [r7, #20]
 8003670:	2b01      	cmp	r3, #1
 8003672:	d116      	bne.n	80036a2 <vTaskStartScheduler+0x82>
 8003674:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8003678:	f383 8811 	msr	BASEPRI, r3
 800367c:	f3bf 8f6f 	isb	sy
 8003680:	f3bf 8f4f 	dsb	sy
 8003684:	613b      	str	r3, [r7, #16]
 8003686:	bf00      	nop
 8003688:	4b13      	ldr	r3, [pc, #76]	@ (80036d8 <vTaskStartScheduler+0xb8>)
 800368a:	f04f 32ff 	mov.w	r2, #4294967295
 800368e:	601a      	str	r2, [r3, #0]
 8003690:	4b12      	ldr	r3, [pc, #72]	@ (80036dc <vTaskStartScheduler+0xbc>)
 8003692:	2201      	movs	r2, #1
 8003694:	601a      	str	r2, [r3, #0]
 8003696:	4b12      	ldr	r3, [pc, #72]	@ (80036e0 <vTaskStartScheduler+0xc0>)
 8003698:	2200      	movs	r2, #0
 800369a:	601a      	str	r2, [r3, #0]
 800369c:	f000 fbbc 	bl	8003e18 <xPortStartScheduler>
 80036a0:	e00f      	b.n	80036c2 <vTaskStartScheduler+0xa2>
 80036a2:	697b      	ldr	r3, [r7, #20]
 80036a4:	f1b3 3fff 	cmp.w	r3, #4294967295
 80036a8:	d10b      	bne.n	80036c2 <vTaskStartScheduler+0xa2>
 80036aa:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80036ae:	f383 8811 	msr	BASEPRI, r3
 80036b2:	f3bf 8f6f 	isb	sy
 80036b6:	f3bf 8f4f 	dsb	sy
 80036ba:	60fb      	str	r3, [r7, #12]
 80036bc:	bf00      	nop
 80036be:	bf00      	nop
 80036c0:	e7fd      	b.n	80036be <vTaskStartScheduler+0x9e>
 80036c2:	bf00      	nop
 80036c4:	3718      	adds	r7, #24
 80036c6:	46bd      	mov	sp, r7
 80036c8:	bd80      	pop	{r7, pc}
 80036ca:	bf00      	nop
 80036cc:	08005044 	.word	0x08005044
 80036d0:	08003a69 	.word	0x08003a69
 80036d4:	200004ac 	.word	0x200004ac
 80036d8:	200004a8 	.word	0x200004a8
 80036dc:	20000494 	.word	0x20000494
 80036e0:	2000048c 	.word	0x2000048c

080036e4 <vTaskSuspendAll>:
 80036e4:	b480      	push	{r7}
 80036e6:	af00      	add	r7, sp, #0
 80036e8:	4b04      	ldr	r3, [pc, #16]	@ (80036fc <vTaskSuspendAll+0x18>)
 80036ea:	681b      	ldr	r3, [r3, #0]
 80036ec:	3301      	adds	r3, #1
 80036ee:	4a03      	ldr	r2, [pc, #12]	@ (80036fc <vTaskSuspendAll+0x18>)
 80036f0:	6013      	str	r3, [r2, #0]
 80036f2:	bf00      	nop
 80036f4:	46bd      	mov	sp, r7
 80036f6:	bc80      	pop	{r7}
 80036f8:	4770      	bx	lr
 80036fa:	bf00      	nop
 80036fc:	200004b0 	.word	0x200004b0

08003700 <xTaskResumeAll>:
 8003700:	b580      	push	{r7, lr}
 8003702:	b084      	sub	sp, #16
 8003704:	af00      	add	r7, sp, #0
 8003706:	2300      	movs	r3, #0
 8003708:	60fb      	str	r3, [r7, #12]
 800370a:	2300      	movs	r3, #0
 800370c:	60bb      	str	r3, [r7, #8]
 800370e:	4b42      	ldr	r3, [pc, #264]	@ (8003818 <xTaskResumeAll+0x118>)
 8003710:	681b      	ldr	r3, [r3, #0]
 8003712:	2b00      	cmp	r3, #0
 8003714:	d10b      	bne.n	800372e <xTaskResumeAll+0x2e>
 8003716:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800371a:	f383 8811 	msr	BASEPRI, r3
 800371e:	f3bf 8f6f 	isb	sy
 8003722:	f3bf 8f4f 	dsb	sy
 8003726:	603b      	str	r3, [r7, #0]
 8003728:	bf00      	nop
 800372a:	bf00      	nop
 800372c:	e7fd      	b.n	800372a <xTaskResumeAll+0x2a>
 800372e:	f000 fbe5 	bl	8003efc <vPortEnterCritical>
 8003732:	4b39      	ldr	r3, [pc, #228]	@ (8003818 <xTaskResumeAll+0x118>)
 8003734:	681b      	ldr	r3, [r3, #0]
 8003736:	3b01      	subs	r3, #1
 8003738:	4a37      	ldr	r2, [pc, #220]	@ (8003818 <xTaskResumeAll+0x118>)
 800373a:	6013      	str	r3, [r2, #0]
 800373c:	4b36      	ldr	r3, [pc, #216]	@ (8003818 <xTaskResumeAll+0x118>)
 800373e:	681b      	ldr	r3, [r3, #0]
 8003740:	2b00      	cmp	r3, #0
 8003742:	d161      	bne.n	8003808 <xTaskResumeAll+0x108>
 8003744:	4b35      	ldr	r3, [pc, #212]	@ (800381c <xTaskResumeAll+0x11c>)
 8003746:	681b      	ldr	r3, [r3, #0]
 8003748:	2b00      	cmp	r3, #0
 800374a:	d05d      	beq.n	8003808 <xTaskResumeAll+0x108>
 800374c:	e02e      	b.n	80037ac <xTaskResumeAll+0xac>
 800374e:	4b34      	ldr	r3, [pc, #208]	@ (8003820 <xTaskResumeAll+0x120>)
 8003750:	68db      	ldr	r3, [r3, #12]
 8003752:	68db      	ldr	r3, [r3, #12]
 8003754:	60fb      	str	r3, [r7, #12]
 8003756:	68fb      	ldr	r3, [r7, #12]
 8003758:	3318      	adds	r3, #24
 800375a:	4618      	mov	r0, r3
 800375c:	f7ff fd6a 	bl	8003234 <uxListRemove>
 8003760:	68fb      	ldr	r3, [r7, #12]
 8003762:	3304      	adds	r3, #4
 8003764:	4618      	mov	r0, r3
 8003766:	f7ff fd65 	bl	8003234 <uxListRemove>
 800376a:	68fb      	ldr	r3, [r7, #12]
 800376c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800376e:	2201      	movs	r2, #1
 8003770:	409a      	lsls	r2, r3
 8003772:	4b2c      	ldr	r3, [pc, #176]	@ (8003824 <xTaskResumeAll+0x124>)
 8003774:	681b      	ldr	r3, [r3, #0]
 8003776:	4313      	orrs	r3, r2
 8003778:	4a2a      	ldr	r2, [pc, #168]	@ (8003824 <xTaskResumeAll+0x124>)
 800377a:	6013      	str	r3, [r2, #0]
 800377c:	68fb      	ldr	r3, [r7, #12]
 800377e:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8003780:	4613      	mov	r3, r2
 8003782:	009b      	lsls	r3, r3, #2
 8003784:	4413      	add	r3, r2
 8003786:	009b      	lsls	r3, r3, #2
 8003788:	4a27      	ldr	r2, [pc, #156]	@ (8003828 <xTaskResumeAll+0x128>)
 800378a:	441a      	add	r2, r3
 800378c:	68fb      	ldr	r3, [r7, #12]
 800378e:	3304      	adds	r3, #4
 8003790:	4619      	mov	r1, r3
 8003792:	4610      	mov	r0, r2
 8003794:	f7ff fcf3 	bl	800317e <vListInsertEnd>
 8003798:	68fb      	ldr	r3, [r7, #12]
 800379a:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800379c:	4b23      	ldr	r3, [pc, #140]	@ (800382c <xTaskResumeAll+0x12c>)
 800379e:	681b      	ldr	r3, [r3, #0]
 80037a0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80037a2:	429a      	cmp	r2, r3
 80037a4:	d302      	bcc.n	80037ac <xTaskResumeAll+0xac>
 80037a6:	4b22      	ldr	r3, [pc, #136]	@ (8003830 <xTaskResumeAll+0x130>)
 80037a8:	2201      	movs	r2, #1
 80037aa:	601a      	str	r2, [r3, #0]
 80037ac:	4b1c      	ldr	r3, [pc, #112]	@ (8003820 <xTaskResumeAll+0x120>)
 80037ae:	681b      	ldr	r3, [r3, #0]
 80037b0:	2b00      	cmp	r3, #0
 80037b2:	d1cc      	bne.n	800374e <xTaskResumeAll+0x4e>
 80037b4:	68fb      	ldr	r3, [r7, #12]
 80037b6:	2b00      	cmp	r3, #0
 80037b8:	d001      	beq.n	80037be <xTaskResumeAll+0xbe>
 80037ba:	f000 fa0b 	bl	8003bd4 <prvResetNextTaskUnblockTime>
 80037be:	4b1d      	ldr	r3, [pc, #116]	@ (8003834 <xTaskResumeAll+0x134>)
 80037c0:	681b      	ldr	r3, [r3, #0]
 80037c2:	607b      	str	r3, [r7, #4]
 80037c4:	687b      	ldr	r3, [r7, #4]
 80037c6:	2b00      	cmp	r3, #0
 80037c8:	d010      	beq.n	80037ec <xTaskResumeAll+0xec>
 80037ca:	f000 f837 	bl	800383c <xTaskIncrementTick>
 80037ce:	4603      	mov	r3, r0
 80037d0:	2b00      	cmp	r3, #0
 80037d2:	d002      	beq.n	80037da <xTaskResumeAll+0xda>
 80037d4:	4b16      	ldr	r3, [pc, #88]	@ (8003830 <xTaskResumeAll+0x130>)
 80037d6:	2201      	movs	r2, #1
 80037d8:	601a      	str	r2, [r3, #0]
 80037da:	687b      	ldr	r3, [r7, #4]
 80037dc:	3b01      	subs	r3, #1
 80037de:	607b      	str	r3, [r7, #4]
 80037e0:	687b      	ldr	r3, [r7, #4]
 80037e2:	2b00      	cmp	r3, #0
 80037e4:	d1f1      	bne.n	80037ca <xTaskResumeAll+0xca>
 80037e6:	4b13      	ldr	r3, [pc, #76]	@ (8003834 <xTaskResumeAll+0x134>)
 80037e8:	2200      	movs	r2, #0
 80037ea:	601a      	str	r2, [r3, #0]
 80037ec:	4b10      	ldr	r3, [pc, #64]	@ (8003830 <xTaskResumeAll+0x130>)
 80037ee:	681b      	ldr	r3, [r3, #0]
 80037f0:	2b00      	cmp	r3, #0
 80037f2:	d009      	beq.n	8003808 <xTaskResumeAll+0x108>
 80037f4:	2301      	movs	r3, #1
 80037f6:	60bb      	str	r3, [r7, #8]
 80037f8:	4b0f      	ldr	r3, [pc, #60]	@ (8003838 <xTaskResumeAll+0x138>)
 80037fa:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80037fe:	601a      	str	r2, [r3, #0]
 8003800:	f3bf 8f4f 	dsb	sy
 8003804:	f3bf 8f6f 	isb	sy
 8003808:	f000 fba8 	bl	8003f5c <vPortExitCritical>
 800380c:	68bb      	ldr	r3, [r7, #8]
 800380e:	4618      	mov	r0, r3
 8003810:	3710      	adds	r7, #16
 8003812:	46bd      	mov	sp, r7
 8003814:	bd80      	pop	{r7, pc}
 8003816:	bf00      	nop
 8003818:	200004b0 	.word	0x200004b0
 800381c:	20000488 	.word	0x20000488
 8003820:	20000448 	.word	0x20000448
 8003824:	20000490 	.word	0x20000490
 8003828:	2000038c 	.word	0x2000038c
 800382c:	20000388 	.word	0x20000388
 8003830:	2000049c 	.word	0x2000049c
 8003834:	20000498 	.word	0x20000498
 8003838:	e000ed04 	.word	0xe000ed04

0800383c <xTaskIncrementTick>:
 800383c:	b580      	push	{r7, lr}
 800383e:	b086      	sub	sp, #24
 8003840:	af00      	add	r7, sp, #0
 8003842:	2300      	movs	r3, #0
 8003844:	617b      	str	r3, [r7, #20]
 8003846:	4b4f      	ldr	r3, [pc, #316]	@ (8003984 <xTaskIncrementTick+0x148>)
 8003848:	681b      	ldr	r3, [r3, #0]
 800384a:	2b00      	cmp	r3, #0
 800384c:	f040 808f 	bne.w	800396e <xTaskIncrementTick+0x132>
 8003850:	4b4d      	ldr	r3, [pc, #308]	@ (8003988 <xTaskIncrementTick+0x14c>)
 8003852:	681b      	ldr	r3, [r3, #0]
 8003854:	3301      	adds	r3, #1
 8003856:	613b      	str	r3, [r7, #16]
 8003858:	4a4b      	ldr	r2, [pc, #300]	@ (8003988 <xTaskIncrementTick+0x14c>)
 800385a:	693b      	ldr	r3, [r7, #16]
 800385c:	6013      	str	r3, [r2, #0]
 800385e:	693b      	ldr	r3, [r7, #16]
 8003860:	2b00      	cmp	r3, #0
 8003862:	d121      	bne.n	80038a8 <xTaskIncrementTick+0x6c>
 8003864:	4b49      	ldr	r3, [pc, #292]	@ (800398c <xTaskIncrementTick+0x150>)
 8003866:	681b      	ldr	r3, [r3, #0]
 8003868:	681b      	ldr	r3, [r3, #0]
 800386a:	2b00      	cmp	r3, #0
 800386c:	d00b      	beq.n	8003886 <xTaskIncrementTick+0x4a>
 800386e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8003872:	f383 8811 	msr	BASEPRI, r3
 8003876:	f3bf 8f6f 	isb	sy
 800387a:	f3bf 8f4f 	dsb	sy
 800387e:	603b      	str	r3, [r7, #0]
 8003880:	bf00      	nop
 8003882:	bf00      	nop
 8003884:	e7fd      	b.n	8003882 <xTaskIncrementTick+0x46>
 8003886:	4b41      	ldr	r3, [pc, #260]	@ (800398c <xTaskIncrementTick+0x150>)
 8003888:	681b      	ldr	r3, [r3, #0]
 800388a:	60fb      	str	r3, [r7, #12]
 800388c:	4b40      	ldr	r3, [pc, #256]	@ (8003990 <xTaskIncrementTick+0x154>)
 800388e:	681b      	ldr	r3, [r3, #0]
 8003890:	4a3e      	ldr	r2, [pc, #248]	@ (800398c <xTaskIncrementTick+0x150>)
 8003892:	6013      	str	r3, [r2, #0]
 8003894:	4a3e      	ldr	r2, [pc, #248]	@ (8003990 <xTaskIncrementTick+0x154>)
 8003896:	68fb      	ldr	r3, [r7, #12]
 8003898:	6013      	str	r3, [r2, #0]
 800389a:	4b3e      	ldr	r3, [pc, #248]	@ (8003994 <xTaskIncrementTick+0x158>)
 800389c:	681b      	ldr	r3, [r3, #0]
 800389e:	3301      	adds	r3, #1
 80038a0:	4a3c      	ldr	r2, [pc, #240]	@ (8003994 <xTaskIncrementTick+0x158>)
 80038a2:	6013      	str	r3, [r2, #0]
 80038a4:	f000 f996 	bl	8003bd4 <prvResetNextTaskUnblockTime>
 80038a8:	4b3b      	ldr	r3, [pc, #236]	@ (8003998 <xTaskIncrementTick+0x15c>)
 80038aa:	681b      	ldr	r3, [r3, #0]
 80038ac:	693a      	ldr	r2, [r7, #16]
 80038ae:	429a      	cmp	r2, r3
 80038b0:	d348      	bcc.n	8003944 <xTaskIncrementTick+0x108>
 80038b2:	4b36      	ldr	r3, [pc, #216]	@ (800398c <xTaskIncrementTick+0x150>)
 80038b4:	681b      	ldr	r3, [r3, #0]
 80038b6:	681b      	ldr	r3, [r3, #0]
 80038b8:	2b00      	cmp	r3, #0
 80038ba:	d104      	bne.n	80038c6 <xTaskIncrementTick+0x8a>
 80038bc:	4b36      	ldr	r3, [pc, #216]	@ (8003998 <xTaskIncrementTick+0x15c>)
 80038be:	f04f 32ff 	mov.w	r2, #4294967295
 80038c2:	601a      	str	r2, [r3, #0]
 80038c4:	e03e      	b.n	8003944 <xTaskIncrementTick+0x108>
 80038c6:	4b31      	ldr	r3, [pc, #196]	@ (800398c <xTaskIncrementTick+0x150>)
 80038c8:	681b      	ldr	r3, [r3, #0]
 80038ca:	68db      	ldr	r3, [r3, #12]
 80038cc:	68db      	ldr	r3, [r3, #12]
 80038ce:	60bb      	str	r3, [r7, #8]
 80038d0:	68bb      	ldr	r3, [r7, #8]
 80038d2:	685b      	ldr	r3, [r3, #4]
 80038d4:	607b      	str	r3, [r7, #4]
 80038d6:	693a      	ldr	r2, [r7, #16]
 80038d8:	687b      	ldr	r3, [r7, #4]
 80038da:	429a      	cmp	r2, r3
 80038dc:	d203      	bcs.n	80038e6 <xTaskIncrementTick+0xaa>
 80038de:	4a2e      	ldr	r2, [pc, #184]	@ (8003998 <xTaskIncrementTick+0x15c>)
 80038e0:	687b      	ldr	r3, [r7, #4]
 80038e2:	6013      	str	r3, [r2, #0]
 80038e4:	e02e      	b.n	8003944 <xTaskIncrementTick+0x108>
 80038e6:	68bb      	ldr	r3, [r7, #8]
 80038e8:	3304      	adds	r3, #4
 80038ea:	4618      	mov	r0, r3
 80038ec:	f7ff fca2 	bl	8003234 <uxListRemove>
 80038f0:	68bb      	ldr	r3, [r7, #8]
 80038f2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80038f4:	2b00      	cmp	r3, #0
 80038f6:	d004      	beq.n	8003902 <xTaskIncrementTick+0xc6>
 80038f8:	68bb      	ldr	r3, [r7, #8]
 80038fa:	3318      	adds	r3, #24
 80038fc:	4618      	mov	r0, r3
 80038fe:	f7ff fc99 	bl	8003234 <uxListRemove>
 8003902:	68bb      	ldr	r3, [r7, #8]
 8003904:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003906:	2201      	movs	r2, #1
 8003908:	409a      	lsls	r2, r3
 800390a:	4b24      	ldr	r3, [pc, #144]	@ (800399c <xTaskIncrementTick+0x160>)
 800390c:	681b      	ldr	r3, [r3, #0]
 800390e:	4313      	orrs	r3, r2
 8003910:	4a22      	ldr	r2, [pc, #136]	@ (800399c <xTaskIncrementTick+0x160>)
 8003912:	6013      	str	r3, [r2, #0]
 8003914:	68bb      	ldr	r3, [r7, #8]
 8003916:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8003918:	4613      	mov	r3, r2
 800391a:	009b      	lsls	r3, r3, #2
 800391c:	4413      	add	r3, r2
 800391e:	009b      	lsls	r3, r3, #2
 8003920:	4a1f      	ldr	r2, [pc, #124]	@ (80039a0 <xTaskIncrementTick+0x164>)
 8003922:	441a      	add	r2, r3
 8003924:	68bb      	ldr	r3, [r7, #8]
 8003926:	3304      	adds	r3, #4
 8003928:	4619      	mov	r1, r3
 800392a:	4610      	mov	r0, r2
 800392c:	f7ff fc27 	bl	800317e <vListInsertEnd>
 8003930:	68bb      	ldr	r3, [r7, #8]
 8003932:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8003934:	4b1b      	ldr	r3, [pc, #108]	@ (80039a4 <xTaskIncrementTick+0x168>)
 8003936:	681b      	ldr	r3, [r3, #0]
 8003938:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800393a:	429a      	cmp	r2, r3
 800393c:	d3b9      	bcc.n	80038b2 <xTaskIncrementTick+0x76>
 800393e:	2301      	movs	r3, #1
 8003940:	617b      	str	r3, [r7, #20]
 8003942:	e7b6      	b.n	80038b2 <xTaskIncrementTick+0x76>
 8003944:	4b17      	ldr	r3, [pc, #92]	@ (80039a4 <xTaskIncrementTick+0x168>)
 8003946:	681b      	ldr	r3, [r3, #0]
 8003948:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800394a:	4915      	ldr	r1, [pc, #84]	@ (80039a0 <xTaskIncrementTick+0x164>)
 800394c:	4613      	mov	r3, r2
 800394e:	009b      	lsls	r3, r3, #2
 8003950:	4413      	add	r3, r2
 8003952:	009b      	lsls	r3, r3, #2
 8003954:	440b      	add	r3, r1
 8003956:	681b      	ldr	r3, [r3, #0]
 8003958:	2b01      	cmp	r3, #1
 800395a:	d901      	bls.n	8003960 <xTaskIncrementTick+0x124>
 800395c:	2301      	movs	r3, #1
 800395e:	617b      	str	r3, [r7, #20]
 8003960:	4b11      	ldr	r3, [pc, #68]	@ (80039a8 <xTaskIncrementTick+0x16c>)
 8003962:	681b      	ldr	r3, [r3, #0]
 8003964:	2b00      	cmp	r3, #0
 8003966:	d007      	beq.n	8003978 <xTaskIncrementTick+0x13c>
 8003968:	2301      	movs	r3, #1
 800396a:	617b      	str	r3, [r7, #20]
 800396c:	e004      	b.n	8003978 <xTaskIncrementTick+0x13c>
 800396e:	4b0f      	ldr	r3, [pc, #60]	@ (80039ac <xTaskIncrementTick+0x170>)
 8003970:	681b      	ldr	r3, [r3, #0]
 8003972:	3301      	adds	r3, #1
 8003974:	4a0d      	ldr	r2, [pc, #52]	@ (80039ac <xTaskIncrementTick+0x170>)
 8003976:	6013      	str	r3, [r2, #0]
 8003978:	697b      	ldr	r3, [r7, #20]
 800397a:	4618      	mov	r0, r3
 800397c:	3718      	adds	r7, #24
 800397e:	46bd      	mov	sp, r7
 8003980:	bd80      	pop	{r7, pc}
 8003982:	bf00      	nop
 8003984:	200004b0 	.word	0x200004b0
 8003988:	2000048c 	.word	0x2000048c
 800398c:	20000440 	.word	0x20000440
 8003990:	20000444 	.word	0x20000444
 8003994:	200004a0 	.word	0x200004a0
 8003998:	200004a8 	.word	0x200004a8
 800399c:	20000490 	.word	0x20000490
 80039a0:	2000038c 	.word	0x2000038c
 80039a4:	20000388 	.word	0x20000388
 80039a8:	2000049c 	.word	0x2000049c
 80039ac:	20000498 	.word	0x20000498

080039b0 <vTaskSwitchContext>:
 80039b0:	b480      	push	{r7}
 80039b2:	b087      	sub	sp, #28
 80039b4:	af00      	add	r7, sp, #0
 80039b6:	4b27      	ldr	r3, [pc, #156]	@ (8003a54 <vTaskSwitchContext+0xa4>)
 80039b8:	681b      	ldr	r3, [r3, #0]
 80039ba:	2b00      	cmp	r3, #0
 80039bc:	d003      	beq.n	80039c6 <vTaskSwitchContext+0x16>
 80039be:	4b26      	ldr	r3, [pc, #152]	@ (8003a58 <vTaskSwitchContext+0xa8>)
 80039c0:	2201      	movs	r2, #1
 80039c2:	601a      	str	r2, [r3, #0]
 80039c4:	e040      	b.n	8003a48 <vTaskSwitchContext+0x98>
 80039c6:	4b24      	ldr	r3, [pc, #144]	@ (8003a58 <vTaskSwitchContext+0xa8>)
 80039c8:	2200      	movs	r2, #0
 80039ca:	601a      	str	r2, [r3, #0]
 80039cc:	4b23      	ldr	r3, [pc, #140]	@ (8003a5c <vTaskSwitchContext+0xac>)
 80039ce:	681b      	ldr	r3, [r3, #0]
 80039d0:	60fb      	str	r3, [r7, #12]
 80039d2:	68fb      	ldr	r3, [r7, #12]
 80039d4:	fab3 f383 	clz	r3, r3
 80039d8:	72fb      	strb	r3, [r7, #11]
 80039da:	7afb      	ldrb	r3, [r7, #11]
 80039dc:	f1c3 031f 	rsb	r3, r3, #31
 80039e0:	617b      	str	r3, [r7, #20]
 80039e2:	491f      	ldr	r1, [pc, #124]	@ (8003a60 <vTaskSwitchContext+0xb0>)
 80039e4:	697a      	ldr	r2, [r7, #20]
 80039e6:	4613      	mov	r3, r2
 80039e8:	009b      	lsls	r3, r3, #2
 80039ea:	4413      	add	r3, r2
 80039ec:	009b      	lsls	r3, r3, #2
 80039ee:	440b      	add	r3, r1
 80039f0:	681b      	ldr	r3, [r3, #0]
 80039f2:	2b00      	cmp	r3, #0
 80039f4:	d10b      	bne.n	8003a0e <vTaskSwitchContext+0x5e>
 80039f6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80039fa:	f383 8811 	msr	BASEPRI, r3
 80039fe:	f3bf 8f6f 	isb	sy
 8003a02:	f3bf 8f4f 	dsb	sy
 8003a06:	607b      	str	r3, [r7, #4]
 8003a08:	bf00      	nop
 8003a0a:	bf00      	nop
 8003a0c:	e7fd      	b.n	8003a0a <vTaskSwitchContext+0x5a>
 8003a0e:	697a      	ldr	r2, [r7, #20]
 8003a10:	4613      	mov	r3, r2
 8003a12:	009b      	lsls	r3, r3, #2
 8003a14:	4413      	add	r3, r2
 8003a16:	009b      	lsls	r3, r3, #2
 8003a18:	4a11      	ldr	r2, [pc, #68]	@ (8003a60 <vTaskSwitchContext+0xb0>)
 8003a1a:	4413      	add	r3, r2
 8003a1c:	613b      	str	r3, [r7, #16]
 8003a1e:	693b      	ldr	r3, [r7, #16]
 8003a20:	685b      	ldr	r3, [r3, #4]
 8003a22:	685a      	ldr	r2, [r3, #4]
 8003a24:	693b      	ldr	r3, [r7, #16]
 8003a26:	605a      	str	r2, [r3, #4]
 8003a28:	693b      	ldr	r3, [r7, #16]
 8003a2a:	685a      	ldr	r2, [r3, #4]
 8003a2c:	693b      	ldr	r3, [r7, #16]
 8003a2e:	3308      	adds	r3, #8
 8003a30:	429a      	cmp	r2, r3
 8003a32:	d104      	bne.n	8003a3e <vTaskSwitchContext+0x8e>
 8003a34:	693b      	ldr	r3, [r7, #16]
 8003a36:	685b      	ldr	r3, [r3, #4]
 8003a38:	685a      	ldr	r2, [r3, #4]
 8003a3a:	693b      	ldr	r3, [r7, #16]
 8003a3c:	605a      	str	r2, [r3, #4]
 8003a3e:	693b      	ldr	r3, [r7, #16]
 8003a40:	685b      	ldr	r3, [r3, #4]
 8003a42:	68db      	ldr	r3, [r3, #12]
 8003a44:	4a07      	ldr	r2, [pc, #28]	@ (8003a64 <vTaskSwitchContext+0xb4>)
 8003a46:	6013      	str	r3, [r2, #0]
 8003a48:	bf00      	nop
 8003a4a:	371c      	adds	r7, #28
 8003a4c:	46bd      	mov	sp, r7
 8003a4e:	bc80      	pop	{r7}
 8003a50:	4770      	bx	lr
 8003a52:	bf00      	nop
 8003a54:	200004b0 	.word	0x200004b0
 8003a58:	2000049c 	.word	0x2000049c
 8003a5c:	20000490 	.word	0x20000490
 8003a60:	2000038c 	.word	0x2000038c
 8003a64:	20000388 	.word	0x20000388

08003a68 <prvIdleTask>:
 8003a68:	b580      	push	{r7, lr}
 8003a6a:	b082      	sub	sp, #8
 8003a6c:	af00      	add	r7, sp, #0
 8003a6e:	6078      	str	r0, [r7, #4]
 8003a70:	f000 f852 	bl	8003b18 <prvCheckTasksWaitingTermination>
 8003a74:	4b06      	ldr	r3, [pc, #24]	@ (8003a90 <prvIdleTask+0x28>)
 8003a76:	681b      	ldr	r3, [r3, #0]
 8003a78:	2b01      	cmp	r3, #1
 8003a7a:	d9f9      	bls.n	8003a70 <prvIdleTask+0x8>
 8003a7c:	4b05      	ldr	r3, [pc, #20]	@ (8003a94 <prvIdleTask+0x2c>)
 8003a7e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8003a82:	601a      	str	r2, [r3, #0]
 8003a84:	f3bf 8f4f 	dsb	sy
 8003a88:	f3bf 8f6f 	isb	sy
 8003a8c:	e7f0      	b.n	8003a70 <prvIdleTask+0x8>
 8003a8e:	bf00      	nop
 8003a90:	2000038c 	.word	0x2000038c
 8003a94:	e000ed04 	.word	0xe000ed04

08003a98 <prvInitialiseTaskLists>:
 8003a98:	b580      	push	{r7, lr}
 8003a9a:	b082      	sub	sp, #8
 8003a9c:	af00      	add	r7, sp, #0
 8003a9e:	2300      	movs	r3, #0
 8003aa0:	607b      	str	r3, [r7, #4]
 8003aa2:	e00c      	b.n	8003abe <prvInitialiseTaskLists+0x26>
 8003aa4:	687a      	ldr	r2, [r7, #4]
 8003aa6:	4613      	mov	r3, r2
 8003aa8:	009b      	lsls	r3, r3, #2
 8003aaa:	4413      	add	r3, r2
 8003aac:	009b      	lsls	r3, r3, #2
 8003aae:	4a12      	ldr	r2, [pc, #72]	@ (8003af8 <prvInitialiseTaskLists+0x60>)
 8003ab0:	4413      	add	r3, r2
 8003ab2:	4618      	mov	r0, r3
 8003ab4:	f7ff fb38 	bl	8003128 <vListInitialise>
 8003ab8:	687b      	ldr	r3, [r7, #4]
 8003aba:	3301      	adds	r3, #1
 8003abc:	607b      	str	r3, [r7, #4]
 8003abe:	687b      	ldr	r3, [r7, #4]
 8003ac0:	2b06      	cmp	r3, #6
 8003ac2:	d9ef      	bls.n	8003aa4 <prvInitialiseTaskLists+0xc>
 8003ac4:	480d      	ldr	r0, [pc, #52]	@ (8003afc <prvInitialiseTaskLists+0x64>)
 8003ac6:	f7ff fb2f 	bl	8003128 <vListInitialise>
 8003aca:	480d      	ldr	r0, [pc, #52]	@ (8003b00 <prvInitialiseTaskLists+0x68>)
 8003acc:	f7ff fb2c 	bl	8003128 <vListInitialise>
 8003ad0:	480c      	ldr	r0, [pc, #48]	@ (8003b04 <prvInitialiseTaskLists+0x6c>)
 8003ad2:	f7ff fb29 	bl	8003128 <vListInitialise>
 8003ad6:	480c      	ldr	r0, [pc, #48]	@ (8003b08 <prvInitialiseTaskLists+0x70>)
 8003ad8:	f7ff fb26 	bl	8003128 <vListInitialise>
 8003adc:	480b      	ldr	r0, [pc, #44]	@ (8003b0c <prvInitialiseTaskLists+0x74>)
 8003ade:	f7ff fb23 	bl	8003128 <vListInitialise>
 8003ae2:	4b0b      	ldr	r3, [pc, #44]	@ (8003b10 <prvInitialiseTaskLists+0x78>)
 8003ae4:	4a05      	ldr	r2, [pc, #20]	@ (8003afc <prvInitialiseTaskLists+0x64>)
 8003ae6:	601a      	str	r2, [r3, #0]
 8003ae8:	4b0a      	ldr	r3, [pc, #40]	@ (8003b14 <prvInitialiseTaskLists+0x7c>)
 8003aea:	4a05      	ldr	r2, [pc, #20]	@ (8003b00 <prvInitialiseTaskLists+0x68>)
 8003aec:	601a      	str	r2, [r3, #0]
 8003aee:	bf00      	nop
 8003af0:	3708      	adds	r7, #8
 8003af2:	46bd      	mov	sp, r7
 8003af4:	bd80      	pop	{r7, pc}
 8003af6:	bf00      	nop
 8003af8:	2000038c 	.word	0x2000038c
 8003afc:	20000418 	.word	0x20000418
 8003b00:	2000042c 	.word	0x2000042c
 8003b04:	20000448 	.word	0x20000448
 8003b08:	2000045c 	.word	0x2000045c
 8003b0c:	20000474 	.word	0x20000474
 8003b10:	20000440 	.word	0x20000440
 8003b14:	20000444 	.word	0x20000444

08003b18 <prvCheckTasksWaitingTermination>:
 8003b18:	b580      	push	{r7, lr}
 8003b1a:	b082      	sub	sp, #8
 8003b1c:	af00      	add	r7, sp, #0
 8003b1e:	e019      	b.n	8003b54 <prvCheckTasksWaitingTermination+0x3c>
 8003b20:	f000 f9ec 	bl	8003efc <vPortEnterCritical>
 8003b24:	4b10      	ldr	r3, [pc, #64]	@ (8003b68 <prvCheckTasksWaitingTermination+0x50>)
 8003b26:	68db      	ldr	r3, [r3, #12]
 8003b28:	68db      	ldr	r3, [r3, #12]
 8003b2a:	607b      	str	r3, [r7, #4]
 8003b2c:	687b      	ldr	r3, [r7, #4]
 8003b2e:	3304      	adds	r3, #4
 8003b30:	4618      	mov	r0, r3
 8003b32:	f7ff fb7f 	bl	8003234 <uxListRemove>
 8003b36:	4b0d      	ldr	r3, [pc, #52]	@ (8003b6c <prvCheckTasksWaitingTermination+0x54>)
 8003b38:	681b      	ldr	r3, [r3, #0]
 8003b3a:	3b01      	subs	r3, #1
 8003b3c:	4a0b      	ldr	r2, [pc, #44]	@ (8003b6c <prvCheckTasksWaitingTermination+0x54>)
 8003b3e:	6013      	str	r3, [r2, #0]
 8003b40:	4b0b      	ldr	r3, [pc, #44]	@ (8003b70 <prvCheckTasksWaitingTermination+0x58>)
 8003b42:	681b      	ldr	r3, [r3, #0]
 8003b44:	3b01      	subs	r3, #1
 8003b46:	4a0a      	ldr	r2, [pc, #40]	@ (8003b70 <prvCheckTasksWaitingTermination+0x58>)
 8003b48:	6013      	str	r3, [r2, #0]
 8003b4a:	f000 fa07 	bl	8003f5c <vPortExitCritical>
 8003b4e:	6878      	ldr	r0, [r7, #4]
 8003b50:	f000 f810 	bl	8003b74 <prvDeleteTCB>
 8003b54:	4b06      	ldr	r3, [pc, #24]	@ (8003b70 <prvCheckTasksWaitingTermination+0x58>)
 8003b56:	681b      	ldr	r3, [r3, #0]
 8003b58:	2b00      	cmp	r3, #0
 8003b5a:	d1e1      	bne.n	8003b20 <prvCheckTasksWaitingTermination+0x8>
 8003b5c:	bf00      	nop
 8003b5e:	bf00      	nop
 8003b60:	3708      	adds	r7, #8
 8003b62:	46bd      	mov	sp, r7
 8003b64:	bd80      	pop	{r7, pc}
 8003b66:	bf00      	nop
 8003b68:	2000045c 	.word	0x2000045c
 8003b6c:	20000488 	.word	0x20000488
 8003b70:	20000470 	.word	0x20000470

08003b74 <prvDeleteTCB>:
 8003b74:	b580      	push	{r7, lr}
 8003b76:	b084      	sub	sp, #16
 8003b78:	af00      	add	r7, sp, #0
 8003b7a:	6078      	str	r0, [r7, #4]
 8003b7c:	687b      	ldr	r3, [r7, #4]
 8003b7e:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8003b82:	2b00      	cmp	r3, #0
 8003b84:	d108      	bne.n	8003b98 <prvDeleteTCB+0x24>
 8003b86:	687b      	ldr	r3, [r7, #4]
 8003b88:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003b8a:	4618      	mov	r0, r3
 8003b8c:	f000 fb46 	bl	800421c <vPortFree>
 8003b90:	6878      	ldr	r0, [r7, #4]
 8003b92:	f000 fb43 	bl	800421c <vPortFree>
 8003b96:	e019      	b.n	8003bcc <prvDeleteTCB+0x58>
 8003b98:	687b      	ldr	r3, [r7, #4]
 8003b9a:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8003b9e:	2b01      	cmp	r3, #1
 8003ba0:	d103      	bne.n	8003baa <prvDeleteTCB+0x36>
 8003ba2:	6878      	ldr	r0, [r7, #4]
 8003ba4:	f000 fb3a 	bl	800421c <vPortFree>
 8003ba8:	e010      	b.n	8003bcc <prvDeleteTCB+0x58>
 8003baa:	687b      	ldr	r3, [r7, #4]
 8003bac:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8003bb0:	2b02      	cmp	r3, #2
 8003bb2:	d00b      	beq.n	8003bcc <prvDeleteTCB+0x58>
 8003bb4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8003bb8:	f383 8811 	msr	BASEPRI, r3
 8003bbc:	f3bf 8f6f 	isb	sy
 8003bc0:	f3bf 8f4f 	dsb	sy
 8003bc4:	60fb      	str	r3, [r7, #12]
 8003bc6:	bf00      	nop
 8003bc8:	bf00      	nop
 8003bca:	e7fd      	b.n	8003bc8 <prvDeleteTCB+0x54>
 8003bcc:	bf00      	nop
 8003bce:	3710      	adds	r7, #16
 8003bd0:	46bd      	mov	sp, r7
 8003bd2:	bd80      	pop	{r7, pc}

08003bd4 <prvResetNextTaskUnblockTime>:
 8003bd4:	b480      	push	{r7}
 8003bd6:	b083      	sub	sp, #12
 8003bd8:	af00      	add	r7, sp, #0
 8003bda:	4b0c      	ldr	r3, [pc, #48]	@ (8003c0c <prvResetNextTaskUnblockTime+0x38>)
 8003bdc:	681b      	ldr	r3, [r3, #0]
 8003bde:	681b      	ldr	r3, [r3, #0]
 8003be0:	2b00      	cmp	r3, #0
 8003be2:	d104      	bne.n	8003bee <prvResetNextTaskUnblockTime+0x1a>
 8003be4:	4b0a      	ldr	r3, [pc, #40]	@ (8003c10 <prvResetNextTaskUnblockTime+0x3c>)
 8003be6:	f04f 32ff 	mov.w	r2, #4294967295
 8003bea:	601a      	str	r2, [r3, #0]
 8003bec:	e008      	b.n	8003c00 <prvResetNextTaskUnblockTime+0x2c>
 8003bee:	4b07      	ldr	r3, [pc, #28]	@ (8003c0c <prvResetNextTaskUnblockTime+0x38>)
 8003bf0:	681b      	ldr	r3, [r3, #0]
 8003bf2:	68db      	ldr	r3, [r3, #12]
 8003bf4:	68db      	ldr	r3, [r3, #12]
 8003bf6:	607b      	str	r3, [r7, #4]
 8003bf8:	687b      	ldr	r3, [r7, #4]
 8003bfa:	685b      	ldr	r3, [r3, #4]
 8003bfc:	4a04      	ldr	r2, [pc, #16]	@ (8003c10 <prvResetNextTaskUnblockTime+0x3c>)
 8003bfe:	6013      	str	r3, [r2, #0]
 8003c00:	bf00      	nop
 8003c02:	370c      	adds	r7, #12
 8003c04:	46bd      	mov	sp, r7
 8003c06:	bc80      	pop	{r7}
 8003c08:	4770      	bx	lr
 8003c0a:	bf00      	nop
 8003c0c:	20000440 	.word	0x20000440
 8003c10:	200004a8 	.word	0x200004a8

08003c14 <xTaskGetSchedulerState>:
 8003c14:	b480      	push	{r7}
 8003c16:	b083      	sub	sp, #12
 8003c18:	af00      	add	r7, sp, #0
 8003c1a:	4b0b      	ldr	r3, [pc, #44]	@ (8003c48 <xTaskGetSchedulerState+0x34>)
 8003c1c:	681b      	ldr	r3, [r3, #0]
 8003c1e:	2b00      	cmp	r3, #0
 8003c20:	d102      	bne.n	8003c28 <xTaskGetSchedulerState+0x14>
 8003c22:	2301      	movs	r3, #1
 8003c24:	607b      	str	r3, [r7, #4]
 8003c26:	e008      	b.n	8003c3a <xTaskGetSchedulerState+0x26>
 8003c28:	4b08      	ldr	r3, [pc, #32]	@ (8003c4c <xTaskGetSchedulerState+0x38>)
 8003c2a:	681b      	ldr	r3, [r3, #0]
 8003c2c:	2b00      	cmp	r3, #0
 8003c2e:	d102      	bne.n	8003c36 <xTaskGetSchedulerState+0x22>
 8003c30:	2302      	movs	r3, #2
 8003c32:	607b      	str	r3, [r7, #4]
 8003c34:	e001      	b.n	8003c3a <xTaskGetSchedulerState+0x26>
 8003c36:	2300      	movs	r3, #0
 8003c38:	607b      	str	r3, [r7, #4]
 8003c3a:	687b      	ldr	r3, [r7, #4]
 8003c3c:	4618      	mov	r0, r3
 8003c3e:	370c      	adds	r7, #12
 8003c40:	46bd      	mov	sp, r7
 8003c42:	bc80      	pop	{r7}
 8003c44:	4770      	bx	lr
 8003c46:	bf00      	nop
 8003c48:	20000494 	.word	0x20000494
 8003c4c:	200004b0 	.word	0x200004b0

08003c50 <prvAddCurrentTaskToDelayedList>:
 8003c50:	b580      	push	{r7, lr}
 8003c52:	b084      	sub	sp, #16
 8003c54:	af00      	add	r7, sp, #0
 8003c56:	6078      	str	r0, [r7, #4]
 8003c58:	6039      	str	r1, [r7, #0]
 8003c5a:	4b29      	ldr	r3, [pc, #164]	@ (8003d00 <prvAddCurrentTaskToDelayedList+0xb0>)
 8003c5c:	681b      	ldr	r3, [r3, #0]
 8003c5e:	60fb      	str	r3, [r7, #12]
 8003c60:	4b28      	ldr	r3, [pc, #160]	@ (8003d04 <prvAddCurrentTaskToDelayedList+0xb4>)
 8003c62:	681b      	ldr	r3, [r3, #0]
 8003c64:	3304      	adds	r3, #4
 8003c66:	4618      	mov	r0, r3
 8003c68:	f7ff fae4 	bl	8003234 <uxListRemove>
 8003c6c:	4603      	mov	r3, r0
 8003c6e:	2b00      	cmp	r3, #0
 8003c70:	d10b      	bne.n	8003c8a <prvAddCurrentTaskToDelayedList+0x3a>
 8003c72:	4b24      	ldr	r3, [pc, #144]	@ (8003d04 <prvAddCurrentTaskToDelayedList+0xb4>)
 8003c74:	681b      	ldr	r3, [r3, #0]
 8003c76:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003c78:	2201      	movs	r2, #1
 8003c7a:	fa02 f303 	lsl.w	r3, r2, r3
 8003c7e:	43da      	mvns	r2, r3
 8003c80:	4b21      	ldr	r3, [pc, #132]	@ (8003d08 <prvAddCurrentTaskToDelayedList+0xb8>)
 8003c82:	681b      	ldr	r3, [r3, #0]
 8003c84:	4013      	ands	r3, r2
 8003c86:	4a20      	ldr	r2, [pc, #128]	@ (8003d08 <prvAddCurrentTaskToDelayedList+0xb8>)
 8003c88:	6013      	str	r3, [r2, #0]
 8003c8a:	687b      	ldr	r3, [r7, #4]
 8003c8c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003c90:	d10a      	bne.n	8003ca8 <prvAddCurrentTaskToDelayedList+0x58>
 8003c92:	683b      	ldr	r3, [r7, #0]
 8003c94:	2b00      	cmp	r3, #0
 8003c96:	d007      	beq.n	8003ca8 <prvAddCurrentTaskToDelayedList+0x58>
 8003c98:	4b1a      	ldr	r3, [pc, #104]	@ (8003d04 <prvAddCurrentTaskToDelayedList+0xb4>)
 8003c9a:	681b      	ldr	r3, [r3, #0]
 8003c9c:	3304      	adds	r3, #4
 8003c9e:	4619      	mov	r1, r3
 8003ca0:	481a      	ldr	r0, [pc, #104]	@ (8003d0c <prvAddCurrentTaskToDelayedList+0xbc>)
 8003ca2:	f7ff fa6c 	bl	800317e <vListInsertEnd>
 8003ca6:	e026      	b.n	8003cf6 <prvAddCurrentTaskToDelayedList+0xa6>
 8003ca8:	68fa      	ldr	r2, [r7, #12]
 8003caa:	687b      	ldr	r3, [r7, #4]
 8003cac:	4413      	add	r3, r2
 8003cae:	60bb      	str	r3, [r7, #8]
 8003cb0:	4b14      	ldr	r3, [pc, #80]	@ (8003d04 <prvAddCurrentTaskToDelayedList+0xb4>)
 8003cb2:	681b      	ldr	r3, [r3, #0]
 8003cb4:	68ba      	ldr	r2, [r7, #8]
 8003cb6:	605a      	str	r2, [r3, #4]
 8003cb8:	68ba      	ldr	r2, [r7, #8]
 8003cba:	68fb      	ldr	r3, [r7, #12]
 8003cbc:	429a      	cmp	r2, r3
 8003cbe:	d209      	bcs.n	8003cd4 <prvAddCurrentTaskToDelayedList+0x84>
 8003cc0:	4b13      	ldr	r3, [pc, #76]	@ (8003d10 <prvAddCurrentTaskToDelayedList+0xc0>)
 8003cc2:	681a      	ldr	r2, [r3, #0]
 8003cc4:	4b0f      	ldr	r3, [pc, #60]	@ (8003d04 <prvAddCurrentTaskToDelayedList+0xb4>)
 8003cc6:	681b      	ldr	r3, [r3, #0]
 8003cc8:	3304      	adds	r3, #4
 8003cca:	4619      	mov	r1, r3
 8003ccc:	4610      	mov	r0, r2
 8003cce:	f7ff fa79 	bl	80031c4 <vListInsert>
 8003cd2:	e010      	b.n	8003cf6 <prvAddCurrentTaskToDelayedList+0xa6>
 8003cd4:	4b0f      	ldr	r3, [pc, #60]	@ (8003d14 <prvAddCurrentTaskToDelayedList+0xc4>)
 8003cd6:	681a      	ldr	r2, [r3, #0]
 8003cd8:	4b0a      	ldr	r3, [pc, #40]	@ (8003d04 <prvAddCurrentTaskToDelayedList+0xb4>)
 8003cda:	681b      	ldr	r3, [r3, #0]
 8003cdc:	3304      	adds	r3, #4
 8003cde:	4619      	mov	r1, r3
 8003ce0:	4610      	mov	r0, r2
 8003ce2:	f7ff fa6f 	bl	80031c4 <vListInsert>
 8003ce6:	4b0c      	ldr	r3, [pc, #48]	@ (8003d18 <prvAddCurrentTaskToDelayedList+0xc8>)
 8003ce8:	681b      	ldr	r3, [r3, #0]
 8003cea:	68ba      	ldr	r2, [r7, #8]
 8003cec:	429a      	cmp	r2, r3
 8003cee:	d202      	bcs.n	8003cf6 <prvAddCurrentTaskToDelayedList+0xa6>
 8003cf0:	4a09      	ldr	r2, [pc, #36]	@ (8003d18 <prvAddCurrentTaskToDelayedList+0xc8>)
 8003cf2:	68bb      	ldr	r3, [r7, #8]
 8003cf4:	6013      	str	r3, [r2, #0]
 8003cf6:	bf00      	nop
 8003cf8:	3710      	adds	r7, #16
 8003cfa:	46bd      	mov	sp, r7
 8003cfc:	bd80      	pop	{r7, pc}
 8003cfe:	bf00      	nop
 8003d00:	2000048c 	.word	0x2000048c
 8003d04:	20000388 	.word	0x20000388
 8003d08:	20000490 	.word	0x20000490
 8003d0c:	20000474 	.word	0x20000474
 8003d10:	20000444 	.word	0x20000444
 8003d14:	20000440 	.word	0x20000440
 8003d18:	200004a8 	.word	0x200004a8

08003d1c <pxPortInitialiseStack>:
 8003d1c:	b480      	push	{r7}
 8003d1e:	b085      	sub	sp, #20
 8003d20:	af00      	add	r7, sp, #0
 8003d22:	60f8      	str	r0, [r7, #12]
 8003d24:	60b9      	str	r1, [r7, #8]
 8003d26:	607a      	str	r2, [r7, #4]
 8003d28:	68fb      	ldr	r3, [r7, #12]
 8003d2a:	3b04      	subs	r3, #4
 8003d2c:	60fb      	str	r3, [r7, #12]
 8003d2e:	68fb      	ldr	r3, [r7, #12]
 8003d30:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8003d34:	601a      	str	r2, [r3, #0]
 8003d36:	68fb      	ldr	r3, [r7, #12]
 8003d38:	3b04      	subs	r3, #4
 8003d3a:	60fb      	str	r3, [r7, #12]
 8003d3c:	68bb      	ldr	r3, [r7, #8]
 8003d3e:	f023 0201 	bic.w	r2, r3, #1
 8003d42:	68fb      	ldr	r3, [r7, #12]
 8003d44:	601a      	str	r2, [r3, #0]
 8003d46:	68fb      	ldr	r3, [r7, #12]
 8003d48:	3b04      	subs	r3, #4
 8003d4a:	60fb      	str	r3, [r7, #12]
 8003d4c:	4a08      	ldr	r2, [pc, #32]	@ (8003d70 <pxPortInitialiseStack+0x54>)
 8003d4e:	68fb      	ldr	r3, [r7, #12]
 8003d50:	601a      	str	r2, [r3, #0]
 8003d52:	68fb      	ldr	r3, [r7, #12]
 8003d54:	3b14      	subs	r3, #20
 8003d56:	60fb      	str	r3, [r7, #12]
 8003d58:	687a      	ldr	r2, [r7, #4]
 8003d5a:	68fb      	ldr	r3, [r7, #12]
 8003d5c:	601a      	str	r2, [r3, #0]
 8003d5e:	68fb      	ldr	r3, [r7, #12]
 8003d60:	3b20      	subs	r3, #32
 8003d62:	60fb      	str	r3, [r7, #12]
 8003d64:	68fb      	ldr	r3, [r7, #12]
 8003d66:	4618      	mov	r0, r3
 8003d68:	3714      	adds	r7, #20
 8003d6a:	46bd      	mov	sp, r7
 8003d6c:	bc80      	pop	{r7}
 8003d6e:	4770      	bx	lr
 8003d70:	08003d75 	.word	0x08003d75

08003d74 <prvTaskExitError>:
 8003d74:	b480      	push	{r7}
 8003d76:	b085      	sub	sp, #20
 8003d78:	af00      	add	r7, sp, #0
 8003d7a:	2300      	movs	r3, #0
 8003d7c:	607b      	str	r3, [r7, #4]
 8003d7e:	4b12      	ldr	r3, [pc, #72]	@ (8003dc8 <prvTaskExitError+0x54>)
 8003d80:	681b      	ldr	r3, [r3, #0]
 8003d82:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003d86:	d00b      	beq.n	8003da0 <prvTaskExitError+0x2c>
 8003d88:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8003d8c:	f383 8811 	msr	BASEPRI, r3
 8003d90:	f3bf 8f6f 	isb	sy
 8003d94:	f3bf 8f4f 	dsb	sy
 8003d98:	60fb      	str	r3, [r7, #12]
 8003d9a:	bf00      	nop
 8003d9c:	bf00      	nop
 8003d9e:	e7fd      	b.n	8003d9c <prvTaskExitError+0x28>
 8003da0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8003da4:	f383 8811 	msr	BASEPRI, r3
 8003da8:	f3bf 8f6f 	isb	sy
 8003dac:	f3bf 8f4f 	dsb	sy
 8003db0:	60bb      	str	r3, [r7, #8]
 8003db2:	bf00      	nop
 8003db4:	bf00      	nop
 8003db6:	687b      	ldr	r3, [r7, #4]
 8003db8:	2b00      	cmp	r3, #0
 8003dba:	d0fc      	beq.n	8003db6 <prvTaskExitError+0x42>
 8003dbc:	bf00      	nop
 8003dbe:	bf00      	nop
 8003dc0:	3714      	adds	r7, #20
 8003dc2:	46bd      	mov	sp, r7
 8003dc4:	bc80      	pop	{r7}
 8003dc6:	4770      	bx	lr
 8003dc8:	20000024 	.word	0x20000024
 8003dcc:	00000000 	.word	0x00000000

08003dd0 <SVC_Handler>:
 8003dd0:	4b07      	ldr	r3, [pc, #28]	@ (8003df0 <pxCurrentTCBConst2>)
 8003dd2:	6819      	ldr	r1, [r3, #0]
 8003dd4:	6808      	ldr	r0, [r1, #0]
 8003dd6:	e8b0 0ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
 8003dda:	f380 8809 	msr	PSP, r0
 8003dde:	f3bf 8f6f 	isb	sy
 8003de2:	f04f 0000 	mov.w	r0, #0
 8003de6:	f380 8811 	msr	BASEPRI, r0
 8003dea:	f04e 0e0d 	orr.w	lr, lr, #13
 8003dee:	4770      	bx	lr

08003df0 <pxCurrentTCBConst2>:
 8003df0:	20000388 	.word	0x20000388
 8003df4:	bf00      	nop
 8003df6:	bf00      	nop

08003df8 <prvPortStartFirstTask>:
 8003df8:	4806      	ldr	r0, [pc, #24]	@ (8003e14 <prvPortStartFirstTask+0x1c>)
 8003dfa:	6800      	ldr	r0, [r0, #0]
 8003dfc:	6800      	ldr	r0, [r0, #0]
 8003dfe:	f380 8808 	msr	MSP, r0
 8003e02:	b662      	cpsie	i
 8003e04:	b661      	cpsie	f
 8003e06:	f3bf 8f4f 	dsb	sy
 8003e0a:	f3bf 8f6f 	isb	sy
 8003e0e:	df00      	svc	0
 8003e10:	bf00      	nop
 8003e12:	bf00      	nop
 8003e14:	e000ed08 	.word	0xe000ed08

08003e18 <xPortStartScheduler>:
 8003e18:	b580      	push	{r7, lr}
 8003e1a:	b084      	sub	sp, #16
 8003e1c:	af00      	add	r7, sp, #0
 8003e1e:	4b32      	ldr	r3, [pc, #200]	@ (8003ee8 <xPortStartScheduler+0xd0>)
 8003e20:	60fb      	str	r3, [r7, #12]
 8003e22:	68fb      	ldr	r3, [r7, #12]
 8003e24:	781b      	ldrb	r3, [r3, #0]
 8003e26:	b2db      	uxtb	r3, r3
 8003e28:	607b      	str	r3, [r7, #4]
 8003e2a:	68fb      	ldr	r3, [r7, #12]
 8003e2c:	22ff      	movs	r2, #255	@ 0xff
 8003e2e:	701a      	strb	r2, [r3, #0]
 8003e30:	68fb      	ldr	r3, [r7, #12]
 8003e32:	781b      	ldrb	r3, [r3, #0]
 8003e34:	b2db      	uxtb	r3, r3
 8003e36:	70fb      	strb	r3, [r7, #3]
 8003e38:	78fb      	ldrb	r3, [r7, #3]
 8003e3a:	b2db      	uxtb	r3, r3
 8003e3c:	f003 0350 	and.w	r3, r3, #80	@ 0x50
 8003e40:	b2da      	uxtb	r2, r3
 8003e42:	4b2a      	ldr	r3, [pc, #168]	@ (8003eec <xPortStartScheduler+0xd4>)
 8003e44:	701a      	strb	r2, [r3, #0]
 8003e46:	4b2a      	ldr	r3, [pc, #168]	@ (8003ef0 <xPortStartScheduler+0xd8>)
 8003e48:	2207      	movs	r2, #7
 8003e4a:	601a      	str	r2, [r3, #0]
 8003e4c:	e009      	b.n	8003e62 <xPortStartScheduler+0x4a>
 8003e4e:	4b28      	ldr	r3, [pc, #160]	@ (8003ef0 <xPortStartScheduler+0xd8>)
 8003e50:	681b      	ldr	r3, [r3, #0]
 8003e52:	3b01      	subs	r3, #1
 8003e54:	4a26      	ldr	r2, [pc, #152]	@ (8003ef0 <xPortStartScheduler+0xd8>)
 8003e56:	6013      	str	r3, [r2, #0]
 8003e58:	78fb      	ldrb	r3, [r7, #3]
 8003e5a:	b2db      	uxtb	r3, r3
 8003e5c:	005b      	lsls	r3, r3, #1
 8003e5e:	b2db      	uxtb	r3, r3
 8003e60:	70fb      	strb	r3, [r7, #3]
 8003e62:	78fb      	ldrb	r3, [r7, #3]
 8003e64:	b2db      	uxtb	r3, r3
 8003e66:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003e6a:	2b80      	cmp	r3, #128	@ 0x80
 8003e6c:	d0ef      	beq.n	8003e4e <xPortStartScheduler+0x36>
 8003e6e:	4b20      	ldr	r3, [pc, #128]	@ (8003ef0 <xPortStartScheduler+0xd8>)
 8003e70:	681b      	ldr	r3, [r3, #0]
 8003e72:	f1c3 0307 	rsb	r3, r3, #7
 8003e76:	2b04      	cmp	r3, #4
 8003e78:	d00b      	beq.n	8003e92 <xPortStartScheduler+0x7a>
 8003e7a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8003e7e:	f383 8811 	msr	BASEPRI, r3
 8003e82:	f3bf 8f6f 	isb	sy
 8003e86:	f3bf 8f4f 	dsb	sy
 8003e8a:	60bb      	str	r3, [r7, #8]
 8003e8c:	bf00      	nop
 8003e8e:	bf00      	nop
 8003e90:	e7fd      	b.n	8003e8e <xPortStartScheduler+0x76>
 8003e92:	4b17      	ldr	r3, [pc, #92]	@ (8003ef0 <xPortStartScheduler+0xd8>)
 8003e94:	681b      	ldr	r3, [r3, #0]
 8003e96:	021b      	lsls	r3, r3, #8
 8003e98:	4a15      	ldr	r2, [pc, #84]	@ (8003ef0 <xPortStartScheduler+0xd8>)
 8003e9a:	6013      	str	r3, [r2, #0]
 8003e9c:	4b14      	ldr	r3, [pc, #80]	@ (8003ef0 <xPortStartScheduler+0xd8>)
 8003e9e:	681b      	ldr	r3, [r3, #0]
 8003ea0:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 8003ea4:	4a12      	ldr	r2, [pc, #72]	@ (8003ef0 <xPortStartScheduler+0xd8>)
 8003ea6:	6013      	str	r3, [r2, #0]
 8003ea8:	687b      	ldr	r3, [r7, #4]
 8003eaa:	b2da      	uxtb	r2, r3
 8003eac:	68fb      	ldr	r3, [r7, #12]
 8003eae:	701a      	strb	r2, [r3, #0]
 8003eb0:	4b10      	ldr	r3, [pc, #64]	@ (8003ef4 <xPortStartScheduler+0xdc>)
 8003eb2:	681b      	ldr	r3, [r3, #0]
 8003eb4:	4a0f      	ldr	r2, [pc, #60]	@ (8003ef4 <xPortStartScheduler+0xdc>)
 8003eb6:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8003eba:	6013      	str	r3, [r2, #0]
 8003ebc:	4b0d      	ldr	r3, [pc, #52]	@ (8003ef4 <xPortStartScheduler+0xdc>)
 8003ebe:	681b      	ldr	r3, [r3, #0]
 8003ec0:	4a0c      	ldr	r2, [pc, #48]	@ (8003ef4 <xPortStartScheduler+0xdc>)
 8003ec2:	f043 4370 	orr.w	r3, r3, #4026531840	@ 0xf0000000
 8003ec6:	6013      	str	r3, [r2, #0]
 8003ec8:	f000 f8b8 	bl	800403c <vPortSetupTimerInterrupt>
 8003ecc:	4b0a      	ldr	r3, [pc, #40]	@ (8003ef8 <xPortStartScheduler+0xe0>)
 8003ece:	2200      	movs	r2, #0
 8003ed0:	601a      	str	r2, [r3, #0]
 8003ed2:	f7ff ff91 	bl	8003df8 <prvPortStartFirstTask>
 8003ed6:	f7ff fd6b 	bl	80039b0 <vTaskSwitchContext>
 8003eda:	f7ff ff4b 	bl	8003d74 <prvTaskExitError>
 8003ede:	2300      	movs	r3, #0
 8003ee0:	4618      	mov	r0, r3
 8003ee2:	3710      	adds	r7, #16
 8003ee4:	46bd      	mov	sp, r7
 8003ee6:	bd80      	pop	{r7, pc}
 8003ee8:	e000e400 	.word	0xe000e400
 8003eec:	200004b4 	.word	0x200004b4
 8003ef0:	200004b8 	.word	0x200004b8
 8003ef4:	e000ed20 	.word	0xe000ed20
 8003ef8:	20000024 	.word	0x20000024

08003efc <vPortEnterCritical>:
 8003efc:	b480      	push	{r7}
 8003efe:	b083      	sub	sp, #12
 8003f00:	af00      	add	r7, sp, #0
 8003f02:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8003f06:	f383 8811 	msr	BASEPRI, r3
 8003f0a:	f3bf 8f6f 	isb	sy
 8003f0e:	f3bf 8f4f 	dsb	sy
 8003f12:	607b      	str	r3, [r7, #4]
 8003f14:	bf00      	nop
 8003f16:	4b0f      	ldr	r3, [pc, #60]	@ (8003f54 <vPortEnterCritical+0x58>)
 8003f18:	681b      	ldr	r3, [r3, #0]
 8003f1a:	3301      	adds	r3, #1
 8003f1c:	4a0d      	ldr	r2, [pc, #52]	@ (8003f54 <vPortEnterCritical+0x58>)
 8003f1e:	6013      	str	r3, [r2, #0]
 8003f20:	4b0c      	ldr	r3, [pc, #48]	@ (8003f54 <vPortEnterCritical+0x58>)
 8003f22:	681b      	ldr	r3, [r3, #0]
 8003f24:	2b01      	cmp	r3, #1
 8003f26:	d110      	bne.n	8003f4a <vPortEnterCritical+0x4e>
 8003f28:	4b0b      	ldr	r3, [pc, #44]	@ (8003f58 <vPortEnterCritical+0x5c>)
 8003f2a:	681b      	ldr	r3, [r3, #0]
 8003f2c:	b2db      	uxtb	r3, r3
 8003f2e:	2b00      	cmp	r3, #0
 8003f30:	d00b      	beq.n	8003f4a <vPortEnterCritical+0x4e>
 8003f32:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8003f36:	f383 8811 	msr	BASEPRI, r3
 8003f3a:	f3bf 8f6f 	isb	sy
 8003f3e:	f3bf 8f4f 	dsb	sy
 8003f42:	603b      	str	r3, [r7, #0]
 8003f44:	bf00      	nop
 8003f46:	bf00      	nop
 8003f48:	e7fd      	b.n	8003f46 <vPortEnterCritical+0x4a>
 8003f4a:	bf00      	nop
 8003f4c:	370c      	adds	r7, #12
 8003f4e:	46bd      	mov	sp, r7
 8003f50:	bc80      	pop	{r7}
 8003f52:	4770      	bx	lr
 8003f54:	20000024 	.word	0x20000024
 8003f58:	e000ed04 	.word	0xe000ed04

08003f5c <vPortExitCritical>:
 8003f5c:	b480      	push	{r7}
 8003f5e:	b083      	sub	sp, #12
 8003f60:	af00      	add	r7, sp, #0
 8003f62:	4b12      	ldr	r3, [pc, #72]	@ (8003fac <vPortExitCritical+0x50>)
 8003f64:	681b      	ldr	r3, [r3, #0]
 8003f66:	2b00      	cmp	r3, #0
 8003f68:	d10b      	bne.n	8003f82 <vPortExitCritical+0x26>
 8003f6a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8003f6e:	f383 8811 	msr	BASEPRI, r3
 8003f72:	f3bf 8f6f 	isb	sy
 8003f76:	f3bf 8f4f 	dsb	sy
 8003f7a:	607b      	str	r3, [r7, #4]
 8003f7c:	bf00      	nop
 8003f7e:	bf00      	nop
 8003f80:	e7fd      	b.n	8003f7e <vPortExitCritical+0x22>
 8003f82:	4b0a      	ldr	r3, [pc, #40]	@ (8003fac <vPortExitCritical+0x50>)
 8003f84:	681b      	ldr	r3, [r3, #0]
 8003f86:	3b01      	subs	r3, #1
 8003f88:	4a08      	ldr	r2, [pc, #32]	@ (8003fac <vPortExitCritical+0x50>)
 8003f8a:	6013      	str	r3, [r2, #0]
 8003f8c:	4b07      	ldr	r3, [pc, #28]	@ (8003fac <vPortExitCritical+0x50>)
 8003f8e:	681b      	ldr	r3, [r3, #0]
 8003f90:	2b00      	cmp	r3, #0
 8003f92:	d105      	bne.n	8003fa0 <vPortExitCritical+0x44>
 8003f94:	2300      	movs	r3, #0
 8003f96:	603b      	str	r3, [r7, #0]
 8003f98:	683b      	ldr	r3, [r7, #0]
 8003f9a:	f383 8811 	msr	BASEPRI, r3
 8003f9e:	bf00      	nop
 8003fa0:	bf00      	nop
 8003fa2:	370c      	adds	r7, #12
 8003fa4:	46bd      	mov	sp, r7
 8003fa6:	bc80      	pop	{r7}
 8003fa8:	4770      	bx	lr
 8003faa:	bf00      	nop
 8003fac:	20000024 	.word	0x20000024

08003fb0 <PendSV_Handler>:
 8003fb0:	f3ef 8009 	mrs	r0, PSP
 8003fb4:	f3bf 8f6f 	isb	sy
 8003fb8:	4b0d      	ldr	r3, [pc, #52]	@ (8003ff0 <pxCurrentTCBConst>)
 8003fba:	681a      	ldr	r2, [r3, #0]
 8003fbc:	e920 0ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
 8003fc0:	6010      	str	r0, [r2, #0]
 8003fc2:	e92d 4008 	stmdb	sp!, {r3, lr}
 8003fc6:	f04f 0050 	mov.w	r0, #80	@ 0x50
 8003fca:	f380 8811 	msr	BASEPRI, r0
 8003fce:	f7ff fcef 	bl	80039b0 <vTaskSwitchContext>
 8003fd2:	f04f 0000 	mov.w	r0, #0
 8003fd6:	f380 8811 	msr	BASEPRI, r0
 8003fda:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8003fde:	6819      	ldr	r1, [r3, #0]
 8003fe0:	6808      	ldr	r0, [r1, #0]
 8003fe2:	e8b0 0ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
 8003fe6:	f380 8809 	msr	PSP, r0
 8003fea:	f3bf 8f6f 	isb	sy
 8003fee:	4770      	bx	lr

08003ff0 <pxCurrentTCBConst>:
 8003ff0:	20000388 	.word	0x20000388
 8003ff4:	bf00      	nop
 8003ff6:	bf00      	nop

08003ff8 <xPortSysTickHandler>:
 8003ff8:	b580      	push	{r7, lr}
 8003ffa:	b082      	sub	sp, #8
 8003ffc:	af00      	add	r7, sp, #0
 8003ffe:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8004002:	f383 8811 	msr	BASEPRI, r3
 8004006:	f3bf 8f6f 	isb	sy
 800400a:	f3bf 8f4f 	dsb	sy
 800400e:	607b      	str	r3, [r7, #4]
 8004010:	bf00      	nop
 8004012:	f7ff fc13 	bl	800383c <xTaskIncrementTick>
 8004016:	4603      	mov	r3, r0
 8004018:	2b00      	cmp	r3, #0
 800401a:	d003      	beq.n	8004024 <xPortSysTickHandler+0x2c>
 800401c:	4b06      	ldr	r3, [pc, #24]	@ (8004038 <xPortSysTickHandler+0x40>)
 800401e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8004022:	601a      	str	r2, [r3, #0]
 8004024:	2300      	movs	r3, #0
 8004026:	603b      	str	r3, [r7, #0]
 8004028:	683b      	ldr	r3, [r7, #0]
 800402a:	f383 8811 	msr	BASEPRI, r3
 800402e:	bf00      	nop
 8004030:	bf00      	nop
 8004032:	3708      	adds	r7, #8
 8004034:	46bd      	mov	sp, r7
 8004036:	bd80      	pop	{r7, pc}
 8004038:	e000ed04 	.word	0xe000ed04

0800403c <vPortSetupTimerInterrupt>:
 800403c:	b480      	push	{r7}
 800403e:	af00      	add	r7, sp, #0
 8004040:	4b0a      	ldr	r3, [pc, #40]	@ (800406c <vPortSetupTimerInterrupt+0x30>)
 8004042:	2200      	movs	r2, #0
 8004044:	601a      	str	r2, [r3, #0]
 8004046:	4b0a      	ldr	r3, [pc, #40]	@ (8004070 <vPortSetupTimerInterrupt+0x34>)
 8004048:	2200      	movs	r2, #0
 800404a:	601a      	str	r2, [r3, #0]
 800404c:	4b09      	ldr	r3, [pc, #36]	@ (8004074 <vPortSetupTimerInterrupt+0x38>)
 800404e:	681b      	ldr	r3, [r3, #0]
 8004050:	4a09      	ldr	r2, [pc, #36]	@ (8004078 <vPortSetupTimerInterrupt+0x3c>)
 8004052:	fba2 2303 	umull	r2, r3, r2, r3
 8004056:	099b      	lsrs	r3, r3, #6
 8004058:	4a08      	ldr	r2, [pc, #32]	@ (800407c <vPortSetupTimerInterrupt+0x40>)
 800405a:	3b01      	subs	r3, #1
 800405c:	6013      	str	r3, [r2, #0]
 800405e:	4b03      	ldr	r3, [pc, #12]	@ (800406c <vPortSetupTimerInterrupt+0x30>)
 8004060:	2207      	movs	r2, #7
 8004062:	601a      	str	r2, [r3, #0]
 8004064:	bf00      	nop
 8004066:	46bd      	mov	sp, r7
 8004068:	bc80      	pop	{r7}
 800406a:	4770      	bx	lr
 800406c:	e000e010 	.word	0xe000e010
 8004070:	e000e018 	.word	0xe000e018
 8004074:	20000018 	.word	0x20000018
 8004078:	10624dd3 	.word	0x10624dd3
 800407c:	e000e014 	.word	0xe000e014

08004080 <pvPortMalloc>:
 8004080:	b580      	push	{r7, lr}
 8004082:	b08a      	sub	sp, #40	@ 0x28
 8004084:	af00      	add	r7, sp, #0
 8004086:	6078      	str	r0, [r7, #4]
 8004088:	2300      	movs	r3, #0
 800408a:	61fb      	str	r3, [r7, #28]
 800408c:	f7ff fb2a 	bl	80036e4 <vTaskSuspendAll>
 8004090:	4b5c      	ldr	r3, [pc, #368]	@ (8004204 <pvPortMalloc+0x184>)
 8004092:	681b      	ldr	r3, [r3, #0]
 8004094:	2b00      	cmp	r3, #0
 8004096:	d101      	bne.n	800409c <pvPortMalloc+0x1c>
 8004098:	f000 f924 	bl	80042e4 <prvHeapInit>
 800409c:	4b5a      	ldr	r3, [pc, #360]	@ (8004208 <pvPortMalloc+0x188>)
 800409e:	681a      	ldr	r2, [r3, #0]
 80040a0:	687b      	ldr	r3, [r7, #4]
 80040a2:	4013      	ands	r3, r2
 80040a4:	2b00      	cmp	r3, #0
 80040a6:	f040 8095 	bne.w	80041d4 <pvPortMalloc+0x154>
 80040aa:	687b      	ldr	r3, [r7, #4]
 80040ac:	2b00      	cmp	r3, #0
 80040ae:	d01e      	beq.n	80040ee <pvPortMalloc+0x6e>
 80040b0:	2208      	movs	r2, #8
 80040b2:	687b      	ldr	r3, [r7, #4]
 80040b4:	4413      	add	r3, r2
 80040b6:	607b      	str	r3, [r7, #4]
 80040b8:	687b      	ldr	r3, [r7, #4]
 80040ba:	f003 0307 	and.w	r3, r3, #7
 80040be:	2b00      	cmp	r3, #0
 80040c0:	d015      	beq.n	80040ee <pvPortMalloc+0x6e>
 80040c2:	687b      	ldr	r3, [r7, #4]
 80040c4:	f023 0307 	bic.w	r3, r3, #7
 80040c8:	3308      	adds	r3, #8
 80040ca:	607b      	str	r3, [r7, #4]
 80040cc:	687b      	ldr	r3, [r7, #4]
 80040ce:	f003 0307 	and.w	r3, r3, #7
 80040d2:	2b00      	cmp	r3, #0
 80040d4:	d00b      	beq.n	80040ee <pvPortMalloc+0x6e>
 80040d6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80040da:	f383 8811 	msr	BASEPRI, r3
 80040de:	f3bf 8f6f 	isb	sy
 80040e2:	f3bf 8f4f 	dsb	sy
 80040e6:	617b      	str	r3, [r7, #20]
 80040e8:	bf00      	nop
 80040ea:	bf00      	nop
 80040ec:	e7fd      	b.n	80040ea <pvPortMalloc+0x6a>
 80040ee:	687b      	ldr	r3, [r7, #4]
 80040f0:	2b00      	cmp	r3, #0
 80040f2:	d06f      	beq.n	80041d4 <pvPortMalloc+0x154>
 80040f4:	4b45      	ldr	r3, [pc, #276]	@ (800420c <pvPortMalloc+0x18c>)
 80040f6:	681b      	ldr	r3, [r3, #0]
 80040f8:	687a      	ldr	r2, [r7, #4]
 80040fa:	429a      	cmp	r2, r3
 80040fc:	d86a      	bhi.n	80041d4 <pvPortMalloc+0x154>
 80040fe:	4b44      	ldr	r3, [pc, #272]	@ (8004210 <pvPortMalloc+0x190>)
 8004100:	623b      	str	r3, [r7, #32]
 8004102:	4b43      	ldr	r3, [pc, #268]	@ (8004210 <pvPortMalloc+0x190>)
 8004104:	681b      	ldr	r3, [r3, #0]
 8004106:	627b      	str	r3, [r7, #36]	@ 0x24
 8004108:	e004      	b.n	8004114 <pvPortMalloc+0x94>
 800410a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800410c:	623b      	str	r3, [r7, #32]
 800410e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004110:	681b      	ldr	r3, [r3, #0]
 8004112:	627b      	str	r3, [r7, #36]	@ 0x24
 8004114:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004116:	685b      	ldr	r3, [r3, #4]
 8004118:	687a      	ldr	r2, [r7, #4]
 800411a:	429a      	cmp	r2, r3
 800411c:	d903      	bls.n	8004126 <pvPortMalloc+0xa6>
 800411e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004120:	681b      	ldr	r3, [r3, #0]
 8004122:	2b00      	cmp	r3, #0
 8004124:	d1f1      	bne.n	800410a <pvPortMalloc+0x8a>
 8004126:	4b37      	ldr	r3, [pc, #220]	@ (8004204 <pvPortMalloc+0x184>)
 8004128:	681b      	ldr	r3, [r3, #0]
 800412a:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800412c:	429a      	cmp	r2, r3
 800412e:	d051      	beq.n	80041d4 <pvPortMalloc+0x154>
 8004130:	6a3b      	ldr	r3, [r7, #32]
 8004132:	681b      	ldr	r3, [r3, #0]
 8004134:	2208      	movs	r2, #8
 8004136:	4413      	add	r3, r2
 8004138:	61fb      	str	r3, [r7, #28]
 800413a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800413c:	681a      	ldr	r2, [r3, #0]
 800413e:	6a3b      	ldr	r3, [r7, #32]
 8004140:	601a      	str	r2, [r3, #0]
 8004142:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004144:	685a      	ldr	r2, [r3, #4]
 8004146:	687b      	ldr	r3, [r7, #4]
 8004148:	1ad2      	subs	r2, r2, r3
 800414a:	2308      	movs	r3, #8
 800414c:	005b      	lsls	r3, r3, #1
 800414e:	429a      	cmp	r2, r3
 8004150:	d920      	bls.n	8004194 <pvPortMalloc+0x114>
 8004152:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8004154:	687b      	ldr	r3, [r7, #4]
 8004156:	4413      	add	r3, r2
 8004158:	61bb      	str	r3, [r7, #24]
 800415a:	69bb      	ldr	r3, [r7, #24]
 800415c:	f003 0307 	and.w	r3, r3, #7
 8004160:	2b00      	cmp	r3, #0
 8004162:	d00b      	beq.n	800417c <pvPortMalloc+0xfc>
 8004164:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8004168:	f383 8811 	msr	BASEPRI, r3
 800416c:	f3bf 8f6f 	isb	sy
 8004170:	f3bf 8f4f 	dsb	sy
 8004174:	613b      	str	r3, [r7, #16]
 8004176:	bf00      	nop
 8004178:	bf00      	nop
 800417a:	e7fd      	b.n	8004178 <pvPortMalloc+0xf8>
 800417c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800417e:	685a      	ldr	r2, [r3, #4]
 8004180:	687b      	ldr	r3, [r7, #4]
 8004182:	1ad2      	subs	r2, r2, r3
 8004184:	69bb      	ldr	r3, [r7, #24]
 8004186:	605a      	str	r2, [r3, #4]
 8004188:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800418a:	687a      	ldr	r2, [r7, #4]
 800418c:	605a      	str	r2, [r3, #4]
 800418e:	69b8      	ldr	r0, [r7, #24]
 8004190:	f000 f90a 	bl	80043a8 <prvInsertBlockIntoFreeList>
 8004194:	4b1d      	ldr	r3, [pc, #116]	@ (800420c <pvPortMalloc+0x18c>)
 8004196:	681a      	ldr	r2, [r3, #0]
 8004198:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800419a:	685b      	ldr	r3, [r3, #4]
 800419c:	1ad3      	subs	r3, r2, r3
 800419e:	4a1b      	ldr	r2, [pc, #108]	@ (800420c <pvPortMalloc+0x18c>)
 80041a0:	6013      	str	r3, [r2, #0]
 80041a2:	4b1a      	ldr	r3, [pc, #104]	@ (800420c <pvPortMalloc+0x18c>)
 80041a4:	681a      	ldr	r2, [r3, #0]
 80041a6:	4b1b      	ldr	r3, [pc, #108]	@ (8004214 <pvPortMalloc+0x194>)
 80041a8:	681b      	ldr	r3, [r3, #0]
 80041aa:	429a      	cmp	r2, r3
 80041ac:	d203      	bcs.n	80041b6 <pvPortMalloc+0x136>
 80041ae:	4b17      	ldr	r3, [pc, #92]	@ (800420c <pvPortMalloc+0x18c>)
 80041b0:	681b      	ldr	r3, [r3, #0]
 80041b2:	4a18      	ldr	r2, [pc, #96]	@ (8004214 <pvPortMalloc+0x194>)
 80041b4:	6013      	str	r3, [r2, #0]
 80041b6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80041b8:	685a      	ldr	r2, [r3, #4]
 80041ba:	4b13      	ldr	r3, [pc, #76]	@ (8004208 <pvPortMalloc+0x188>)
 80041bc:	681b      	ldr	r3, [r3, #0]
 80041be:	431a      	orrs	r2, r3
 80041c0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80041c2:	605a      	str	r2, [r3, #4]
 80041c4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80041c6:	2200      	movs	r2, #0
 80041c8:	601a      	str	r2, [r3, #0]
 80041ca:	4b13      	ldr	r3, [pc, #76]	@ (8004218 <pvPortMalloc+0x198>)
 80041cc:	681b      	ldr	r3, [r3, #0]
 80041ce:	3301      	adds	r3, #1
 80041d0:	4a11      	ldr	r2, [pc, #68]	@ (8004218 <pvPortMalloc+0x198>)
 80041d2:	6013      	str	r3, [r2, #0]
 80041d4:	f7ff fa94 	bl	8003700 <xTaskResumeAll>
 80041d8:	69fb      	ldr	r3, [r7, #28]
 80041da:	f003 0307 	and.w	r3, r3, #7
 80041de:	2b00      	cmp	r3, #0
 80041e0:	d00b      	beq.n	80041fa <pvPortMalloc+0x17a>
 80041e2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80041e6:	f383 8811 	msr	BASEPRI, r3
 80041ea:	f3bf 8f6f 	isb	sy
 80041ee:	f3bf 8f4f 	dsb	sy
 80041f2:	60fb      	str	r3, [r7, #12]
 80041f4:	bf00      	nop
 80041f6:	bf00      	nop
 80041f8:	e7fd      	b.n	80041f6 <pvPortMalloc+0x176>
 80041fa:	69fb      	ldr	r3, [r7, #28]
 80041fc:	4618      	mov	r0, r3
 80041fe:	3728      	adds	r7, #40	@ 0x28
 8004200:	46bd      	mov	sp, r7
 8004202:	bd80      	pop	{r7, pc}
 8004204:	200010c4 	.word	0x200010c4
 8004208:	200010d8 	.word	0x200010d8
 800420c:	200010c8 	.word	0x200010c8
 8004210:	200010bc 	.word	0x200010bc
 8004214:	200010cc 	.word	0x200010cc
 8004218:	200010d0 	.word	0x200010d0

0800421c <vPortFree>:
 800421c:	b580      	push	{r7, lr}
 800421e:	b086      	sub	sp, #24
 8004220:	af00      	add	r7, sp, #0
 8004222:	6078      	str	r0, [r7, #4]
 8004224:	687b      	ldr	r3, [r7, #4]
 8004226:	617b      	str	r3, [r7, #20]
 8004228:	687b      	ldr	r3, [r7, #4]
 800422a:	2b00      	cmp	r3, #0
 800422c:	d04f      	beq.n	80042ce <vPortFree+0xb2>
 800422e:	2308      	movs	r3, #8
 8004230:	425b      	negs	r3, r3
 8004232:	697a      	ldr	r2, [r7, #20]
 8004234:	4413      	add	r3, r2
 8004236:	617b      	str	r3, [r7, #20]
 8004238:	697b      	ldr	r3, [r7, #20]
 800423a:	613b      	str	r3, [r7, #16]
 800423c:	693b      	ldr	r3, [r7, #16]
 800423e:	685a      	ldr	r2, [r3, #4]
 8004240:	4b25      	ldr	r3, [pc, #148]	@ (80042d8 <vPortFree+0xbc>)
 8004242:	681b      	ldr	r3, [r3, #0]
 8004244:	4013      	ands	r3, r2
 8004246:	2b00      	cmp	r3, #0
 8004248:	d10b      	bne.n	8004262 <vPortFree+0x46>
 800424a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800424e:	f383 8811 	msr	BASEPRI, r3
 8004252:	f3bf 8f6f 	isb	sy
 8004256:	f3bf 8f4f 	dsb	sy
 800425a:	60fb      	str	r3, [r7, #12]
 800425c:	bf00      	nop
 800425e:	bf00      	nop
 8004260:	e7fd      	b.n	800425e <vPortFree+0x42>
 8004262:	693b      	ldr	r3, [r7, #16]
 8004264:	681b      	ldr	r3, [r3, #0]
 8004266:	2b00      	cmp	r3, #0
 8004268:	d00b      	beq.n	8004282 <vPortFree+0x66>
 800426a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800426e:	f383 8811 	msr	BASEPRI, r3
 8004272:	f3bf 8f6f 	isb	sy
 8004276:	f3bf 8f4f 	dsb	sy
 800427a:	60bb      	str	r3, [r7, #8]
 800427c:	bf00      	nop
 800427e:	bf00      	nop
 8004280:	e7fd      	b.n	800427e <vPortFree+0x62>
 8004282:	693b      	ldr	r3, [r7, #16]
 8004284:	685a      	ldr	r2, [r3, #4]
 8004286:	4b14      	ldr	r3, [pc, #80]	@ (80042d8 <vPortFree+0xbc>)
 8004288:	681b      	ldr	r3, [r3, #0]
 800428a:	4013      	ands	r3, r2
 800428c:	2b00      	cmp	r3, #0
 800428e:	d01e      	beq.n	80042ce <vPortFree+0xb2>
 8004290:	693b      	ldr	r3, [r7, #16]
 8004292:	681b      	ldr	r3, [r3, #0]
 8004294:	2b00      	cmp	r3, #0
 8004296:	d11a      	bne.n	80042ce <vPortFree+0xb2>
 8004298:	693b      	ldr	r3, [r7, #16]
 800429a:	685a      	ldr	r2, [r3, #4]
 800429c:	4b0e      	ldr	r3, [pc, #56]	@ (80042d8 <vPortFree+0xbc>)
 800429e:	681b      	ldr	r3, [r3, #0]
 80042a0:	43db      	mvns	r3, r3
 80042a2:	401a      	ands	r2, r3
 80042a4:	693b      	ldr	r3, [r7, #16]
 80042a6:	605a      	str	r2, [r3, #4]
 80042a8:	f7ff fa1c 	bl	80036e4 <vTaskSuspendAll>
 80042ac:	693b      	ldr	r3, [r7, #16]
 80042ae:	685a      	ldr	r2, [r3, #4]
 80042b0:	4b0a      	ldr	r3, [pc, #40]	@ (80042dc <vPortFree+0xc0>)
 80042b2:	681b      	ldr	r3, [r3, #0]
 80042b4:	4413      	add	r3, r2
 80042b6:	4a09      	ldr	r2, [pc, #36]	@ (80042dc <vPortFree+0xc0>)
 80042b8:	6013      	str	r3, [r2, #0]
 80042ba:	6938      	ldr	r0, [r7, #16]
 80042bc:	f000 f874 	bl	80043a8 <prvInsertBlockIntoFreeList>
 80042c0:	4b07      	ldr	r3, [pc, #28]	@ (80042e0 <vPortFree+0xc4>)
 80042c2:	681b      	ldr	r3, [r3, #0]
 80042c4:	3301      	adds	r3, #1
 80042c6:	4a06      	ldr	r2, [pc, #24]	@ (80042e0 <vPortFree+0xc4>)
 80042c8:	6013      	str	r3, [r2, #0]
 80042ca:	f7ff fa19 	bl	8003700 <xTaskResumeAll>
 80042ce:	bf00      	nop
 80042d0:	3718      	adds	r7, #24
 80042d2:	46bd      	mov	sp, r7
 80042d4:	bd80      	pop	{r7, pc}
 80042d6:	bf00      	nop
 80042d8:	200010d8 	.word	0x200010d8
 80042dc:	200010c8 	.word	0x200010c8
 80042e0:	200010d4 	.word	0x200010d4

080042e4 <prvHeapInit>:
 80042e4:	b480      	push	{r7}
 80042e6:	b085      	sub	sp, #20
 80042e8:	af00      	add	r7, sp, #0
 80042ea:	f44f 6340 	mov.w	r3, #3072	@ 0xc00
 80042ee:	60bb      	str	r3, [r7, #8]
 80042f0:	4b27      	ldr	r3, [pc, #156]	@ (8004390 <prvHeapInit+0xac>)
 80042f2:	60fb      	str	r3, [r7, #12]
 80042f4:	68fb      	ldr	r3, [r7, #12]
 80042f6:	f003 0307 	and.w	r3, r3, #7
 80042fa:	2b00      	cmp	r3, #0
 80042fc:	d00c      	beq.n	8004318 <prvHeapInit+0x34>
 80042fe:	68fb      	ldr	r3, [r7, #12]
 8004300:	3307      	adds	r3, #7
 8004302:	60fb      	str	r3, [r7, #12]
 8004304:	68fb      	ldr	r3, [r7, #12]
 8004306:	f023 0307 	bic.w	r3, r3, #7
 800430a:	60fb      	str	r3, [r7, #12]
 800430c:	68ba      	ldr	r2, [r7, #8]
 800430e:	68fb      	ldr	r3, [r7, #12]
 8004310:	1ad3      	subs	r3, r2, r3
 8004312:	4a1f      	ldr	r2, [pc, #124]	@ (8004390 <prvHeapInit+0xac>)
 8004314:	4413      	add	r3, r2
 8004316:	60bb      	str	r3, [r7, #8]
 8004318:	68fb      	ldr	r3, [r7, #12]
 800431a:	607b      	str	r3, [r7, #4]
 800431c:	4a1d      	ldr	r2, [pc, #116]	@ (8004394 <prvHeapInit+0xb0>)
 800431e:	687b      	ldr	r3, [r7, #4]
 8004320:	6013      	str	r3, [r2, #0]
 8004322:	4b1c      	ldr	r3, [pc, #112]	@ (8004394 <prvHeapInit+0xb0>)
 8004324:	2200      	movs	r2, #0
 8004326:	605a      	str	r2, [r3, #4]
 8004328:	687b      	ldr	r3, [r7, #4]
 800432a:	68ba      	ldr	r2, [r7, #8]
 800432c:	4413      	add	r3, r2
 800432e:	60fb      	str	r3, [r7, #12]
 8004330:	2208      	movs	r2, #8
 8004332:	68fb      	ldr	r3, [r7, #12]
 8004334:	1a9b      	subs	r3, r3, r2
 8004336:	60fb      	str	r3, [r7, #12]
 8004338:	68fb      	ldr	r3, [r7, #12]
 800433a:	f023 0307 	bic.w	r3, r3, #7
 800433e:	60fb      	str	r3, [r7, #12]
 8004340:	68fb      	ldr	r3, [r7, #12]
 8004342:	4a15      	ldr	r2, [pc, #84]	@ (8004398 <prvHeapInit+0xb4>)
 8004344:	6013      	str	r3, [r2, #0]
 8004346:	4b14      	ldr	r3, [pc, #80]	@ (8004398 <prvHeapInit+0xb4>)
 8004348:	681b      	ldr	r3, [r3, #0]
 800434a:	2200      	movs	r2, #0
 800434c:	605a      	str	r2, [r3, #4]
 800434e:	4b12      	ldr	r3, [pc, #72]	@ (8004398 <prvHeapInit+0xb4>)
 8004350:	681b      	ldr	r3, [r3, #0]
 8004352:	2200      	movs	r2, #0
 8004354:	601a      	str	r2, [r3, #0]
 8004356:	687b      	ldr	r3, [r7, #4]
 8004358:	603b      	str	r3, [r7, #0]
 800435a:	683b      	ldr	r3, [r7, #0]
 800435c:	68fa      	ldr	r2, [r7, #12]
 800435e:	1ad2      	subs	r2, r2, r3
 8004360:	683b      	ldr	r3, [r7, #0]
 8004362:	605a      	str	r2, [r3, #4]
 8004364:	4b0c      	ldr	r3, [pc, #48]	@ (8004398 <prvHeapInit+0xb4>)
 8004366:	681a      	ldr	r2, [r3, #0]
 8004368:	683b      	ldr	r3, [r7, #0]
 800436a:	601a      	str	r2, [r3, #0]
 800436c:	683b      	ldr	r3, [r7, #0]
 800436e:	685b      	ldr	r3, [r3, #4]
 8004370:	4a0a      	ldr	r2, [pc, #40]	@ (800439c <prvHeapInit+0xb8>)
 8004372:	6013      	str	r3, [r2, #0]
 8004374:	683b      	ldr	r3, [r7, #0]
 8004376:	685b      	ldr	r3, [r3, #4]
 8004378:	4a09      	ldr	r2, [pc, #36]	@ (80043a0 <prvHeapInit+0xbc>)
 800437a:	6013      	str	r3, [r2, #0]
 800437c:	4b09      	ldr	r3, [pc, #36]	@ (80043a4 <prvHeapInit+0xc0>)
 800437e:	f04f 4200 	mov.w	r2, #2147483648	@ 0x80000000
 8004382:	601a      	str	r2, [r3, #0]
 8004384:	bf00      	nop
 8004386:	3714      	adds	r7, #20
 8004388:	46bd      	mov	sp, r7
 800438a:	bc80      	pop	{r7}
 800438c:	4770      	bx	lr
 800438e:	bf00      	nop
 8004390:	200004bc 	.word	0x200004bc
 8004394:	200010bc 	.word	0x200010bc
 8004398:	200010c4 	.word	0x200010c4
 800439c:	200010cc 	.word	0x200010cc
 80043a0:	200010c8 	.word	0x200010c8
 80043a4:	200010d8 	.word	0x200010d8

080043a8 <prvInsertBlockIntoFreeList>:
 80043a8:	b480      	push	{r7}
 80043aa:	b085      	sub	sp, #20
 80043ac:	af00      	add	r7, sp, #0
 80043ae:	6078      	str	r0, [r7, #4]
 80043b0:	4b27      	ldr	r3, [pc, #156]	@ (8004450 <prvInsertBlockIntoFreeList+0xa8>)
 80043b2:	60fb      	str	r3, [r7, #12]
 80043b4:	e002      	b.n	80043bc <prvInsertBlockIntoFreeList+0x14>
 80043b6:	68fb      	ldr	r3, [r7, #12]
 80043b8:	681b      	ldr	r3, [r3, #0]
 80043ba:	60fb      	str	r3, [r7, #12]
 80043bc:	68fb      	ldr	r3, [r7, #12]
 80043be:	681b      	ldr	r3, [r3, #0]
 80043c0:	687a      	ldr	r2, [r7, #4]
 80043c2:	429a      	cmp	r2, r3
 80043c4:	d8f7      	bhi.n	80043b6 <prvInsertBlockIntoFreeList+0xe>
 80043c6:	68fb      	ldr	r3, [r7, #12]
 80043c8:	60bb      	str	r3, [r7, #8]
 80043ca:	68fb      	ldr	r3, [r7, #12]
 80043cc:	685b      	ldr	r3, [r3, #4]
 80043ce:	68ba      	ldr	r2, [r7, #8]
 80043d0:	4413      	add	r3, r2
 80043d2:	687a      	ldr	r2, [r7, #4]
 80043d4:	429a      	cmp	r2, r3
 80043d6:	d108      	bne.n	80043ea <prvInsertBlockIntoFreeList+0x42>
 80043d8:	68fb      	ldr	r3, [r7, #12]
 80043da:	685a      	ldr	r2, [r3, #4]
 80043dc:	687b      	ldr	r3, [r7, #4]
 80043de:	685b      	ldr	r3, [r3, #4]
 80043e0:	441a      	add	r2, r3
 80043e2:	68fb      	ldr	r3, [r7, #12]
 80043e4:	605a      	str	r2, [r3, #4]
 80043e6:	68fb      	ldr	r3, [r7, #12]
 80043e8:	607b      	str	r3, [r7, #4]
 80043ea:	687b      	ldr	r3, [r7, #4]
 80043ec:	60bb      	str	r3, [r7, #8]
 80043ee:	687b      	ldr	r3, [r7, #4]
 80043f0:	685b      	ldr	r3, [r3, #4]
 80043f2:	68ba      	ldr	r2, [r7, #8]
 80043f4:	441a      	add	r2, r3
 80043f6:	68fb      	ldr	r3, [r7, #12]
 80043f8:	681b      	ldr	r3, [r3, #0]
 80043fa:	429a      	cmp	r2, r3
 80043fc:	d118      	bne.n	8004430 <prvInsertBlockIntoFreeList+0x88>
 80043fe:	68fb      	ldr	r3, [r7, #12]
 8004400:	681a      	ldr	r2, [r3, #0]
 8004402:	4b14      	ldr	r3, [pc, #80]	@ (8004454 <prvInsertBlockIntoFreeList+0xac>)
 8004404:	681b      	ldr	r3, [r3, #0]
 8004406:	429a      	cmp	r2, r3
 8004408:	d00d      	beq.n	8004426 <prvInsertBlockIntoFreeList+0x7e>
 800440a:	687b      	ldr	r3, [r7, #4]
 800440c:	685a      	ldr	r2, [r3, #4]
 800440e:	68fb      	ldr	r3, [r7, #12]
 8004410:	681b      	ldr	r3, [r3, #0]
 8004412:	685b      	ldr	r3, [r3, #4]
 8004414:	441a      	add	r2, r3
 8004416:	687b      	ldr	r3, [r7, #4]
 8004418:	605a      	str	r2, [r3, #4]
 800441a:	68fb      	ldr	r3, [r7, #12]
 800441c:	681b      	ldr	r3, [r3, #0]
 800441e:	681a      	ldr	r2, [r3, #0]
 8004420:	687b      	ldr	r3, [r7, #4]
 8004422:	601a      	str	r2, [r3, #0]
 8004424:	e008      	b.n	8004438 <prvInsertBlockIntoFreeList+0x90>
 8004426:	4b0b      	ldr	r3, [pc, #44]	@ (8004454 <prvInsertBlockIntoFreeList+0xac>)
 8004428:	681a      	ldr	r2, [r3, #0]
 800442a:	687b      	ldr	r3, [r7, #4]
 800442c:	601a      	str	r2, [r3, #0]
 800442e:	e003      	b.n	8004438 <prvInsertBlockIntoFreeList+0x90>
 8004430:	68fb      	ldr	r3, [r7, #12]
 8004432:	681a      	ldr	r2, [r3, #0]
 8004434:	687b      	ldr	r3, [r7, #4]
 8004436:	601a      	str	r2, [r3, #0]
 8004438:	68fa      	ldr	r2, [r7, #12]
 800443a:	687b      	ldr	r3, [r7, #4]
 800443c:	429a      	cmp	r2, r3
 800443e:	d002      	beq.n	8004446 <prvInsertBlockIntoFreeList+0x9e>
 8004440:	68fb      	ldr	r3, [r7, #12]
 8004442:	687a      	ldr	r2, [r7, #4]
 8004444:	601a      	str	r2, [r3, #0]
 8004446:	bf00      	nop
 8004448:	3714      	adds	r7, #20
 800444a:	46bd      	mov	sp, r7
 800444c:	bc80      	pop	{r7}
 800444e:	4770      	bx	lr
 8004450:	200010bc 	.word	0x200010bc
 8004454:	200010c4 	.word	0x200010c4

08004458 <sniprintf>:
 8004458:	b40c      	push	{r2, r3}
 800445a:	b530      	push	{r4, r5, lr}
 800445c:	4b17      	ldr	r3, [pc, #92]	@ (80044bc <sniprintf+0x64>)
 800445e:	1e0c      	subs	r4, r1, #0
 8004460:	681d      	ldr	r5, [r3, #0]
 8004462:	b09d      	sub	sp, #116	@ 0x74
 8004464:	da08      	bge.n	8004478 <sniprintf+0x20>
 8004466:	238b      	movs	r3, #139	@ 0x8b
 8004468:	f04f 30ff 	mov.w	r0, #4294967295
 800446c:	602b      	str	r3, [r5, #0]
 800446e:	b01d      	add	sp, #116	@ 0x74
 8004470:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8004474:	b002      	add	sp, #8
 8004476:	4770      	bx	lr
 8004478:	f44f 7302 	mov.w	r3, #520	@ 0x208
 800447c:	f8ad 3014 	strh.w	r3, [sp, #20]
 8004480:	bf0c      	ite	eq
 8004482:	4623      	moveq	r3, r4
 8004484:	f104 33ff 	addne.w	r3, r4, #4294967295
 8004488:	9304      	str	r3, [sp, #16]
 800448a:	9307      	str	r3, [sp, #28]
 800448c:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8004490:	9002      	str	r0, [sp, #8]
 8004492:	9006      	str	r0, [sp, #24]
 8004494:	f8ad 3016 	strh.w	r3, [sp, #22]
 8004498:	4628      	mov	r0, r5
 800449a:	ab21      	add	r3, sp, #132	@ 0x84
 800449c:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800449e:	a902      	add	r1, sp, #8
 80044a0:	9301      	str	r3, [sp, #4]
 80044a2:	f000 f9a1 	bl	80047e8 <_svfiprintf_r>
 80044a6:	1c43      	adds	r3, r0, #1
 80044a8:	bfbc      	itt	lt
 80044aa:	238b      	movlt	r3, #139	@ 0x8b
 80044ac:	602b      	strlt	r3, [r5, #0]
 80044ae:	2c00      	cmp	r4, #0
 80044b0:	d0dd      	beq.n	800446e <sniprintf+0x16>
 80044b2:	2200      	movs	r2, #0
 80044b4:	9b02      	ldr	r3, [sp, #8]
 80044b6:	701a      	strb	r2, [r3, #0]
 80044b8:	e7d9      	b.n	800446e <sniprintf+0x16>
 80044ba:	bf00      	nop
 80044bc:	20000028 	.word	0x20000028

080044c0 <memset>:
 80044c0:	4603      	mov	r3, r0
 80044c2:	4402      	add	r2, r0
 80044c4:	4293      	cmp	r3, r2
 80044c6:	d100      	bne.n	80044ca <memset+0xa>
 80044c8:	4770      	bx	lr
 80044ca:	f803 1b01 	strb.w	r1, [r3], #1
 80044ce:	e7f9      	b.n	80044c4 <memset+0x4>

080044d0 <__errno>:
 80044d0:	4b01      	ldr	r3, [pc, #4]	@ (80044d8 <__errno+0x8>)
 80044d2:	6818      	ldr	r0, [r3, #0]
 80044d4:	4770      	bx	lr
 80044d6:	bf00      	nop
 80044d8:	20000028 	.word	0x20000028

080044dc <__libc_init_array>:
 80044dc:	b570      	push	{r4, r5, r6, lr}
 80044de:	2600      	movs	r6, #0
 80044e0:	4d0c      	ldr	r5, [pc, #48]	@ (8004514 <__libc_init_array+0x38>)
 80044e2:	4c0d      	ldr	r4, [pc, #52]	@ (8004518 <__libc_init_array+0x3c>)
 80044e4:	1b64      	subs	r4, r4, r5
 80044e6:	10a4      	asrs	r4, r4, #2
 80044e8:	42a6      	cmp	r6, r4
 80044ea:	d109      	bne.n	8004500 <__libc_init_array+0x24>
 80044ec:	f000 fc78 	bl	8004de0 <_init>
 80044f0:	2600      	movs	r6, #0
 80044f2:	4d0a      	ldr	r5, [pc, #40]	@ (800451c <__libc_init_array+0x40>)
 80044f4:	4c0a      	ldr	r4, [pc, #40]	@ (8004520 <__libc_init_array+0x44>)
 80044f6:	1b64      	subs	r4, r4, r5
 80044f8:	10a4      	asrs	r4, r4, #2
 80044fa:	42a6      	cmp	r6, r4
 80044fc:	d105      	bne.n	800450a <__libc_init_array+0x2e>
 80044fe:	bd70      	pop	{r4, r5, r6, pc}
 8004500:	f855 3b04 	ldr.w	r3, [r5], #4
 8004504:	4798      	blx	r3
 8004506:	3601      	adds	r6, #1
 8004508:	e7ee      	b.n	80044e8 <__libc_init_array+0xc>
 800450a:	f855 3b04 	ldr.w	r3, [r5], #4
 800450e:	4798      	blx	r3
 8004510:	3601      	adds	r6, #1
 8004512:	e7f2      	b.n	80044fa <__libc_init_array+0x1e>
 8004514:	080050b4 	.word	0x080050b4
 8004518:	080050b4 	.word	0x080050b4
 800451c:	080050b4 	.word	0x080050b4
 8004520:	080050b8 	.word	0x080050b8

08004524 <__retarget_lock_acquire_recursive>:
 8004524:	4770      	bx	lr

08004526 <__retarget_lock_release_recursive>:
 8004526:	4770      	bx	lr

08004528 <memcpy>:
 8004528:	440a      	add	r2, r1
 800452a:	4291      	cmp	r1, r2
 800452c:	f100 33ff 	add.w	r3, r0, #4294967295
 8004530:	d100      	bne.n	8004534 <memcpy+0xc>
 8004532:	4770      	bx	lr
 8004534:	b510      	push	{r4, lr}
 8004536:	f811 4b01 	ldrb.w	r4, [r1], #1
 800453a:	4291      	cmp	r1, r2
 800453c:	f803 4f01 	strb.w	r4, [r3, #1]!
 8004540:	d1f9      	bne.n	8004536 <memcpy+0xe>
 8004542:	bd10      	pop	{r4, pc}

08004544 <_free_r>:
 8004544:	b538      	push	{r3, r4, r5, lr}
 8004546:	4605      	mov	r5, r0
 8004548:	2900      	cmp	r1, #0
 800454a:	d040      	beq.n	80045ce <_free_r+0x8a>
 800454c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8004550:	1f0c      	subs	r4, r1, #4
 8004552:	2b00      	cmp	r3, #0
 8004554:	bfb8      	it	lt
 8004556:	18e4      	addlt	r4, r4, r3
 8004558:	f000 f8de 	bl	8004718 <__malloc_lock>
 800455c:	4a1c      	ldr	r2, [pc, #112]	@ (80045d0 <_free_r+0x8c>)
 800455e:	6813      	ldr	r3, [r2, #0]
 8004560:	b933      	cbnz	r3, 8004570 <_free_r+0x2c>
 8004562:	6063      	str	r3, [r4, #4]
 8004564:	6014      	str	r4, [r2, #0]
 8004566:	4628      	mov	r0, r5
 8004568:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800456c:	f000 b8da 	b.w	8004724 <__malloc_unlock>
 8004570:	42a3      	cmp	r3, r4
 8004572:	d908      	bls.n	8004586 <_free_r+0x42>
 8004574:	6820      	ldr	r0, [r4, #0]
 8004576:	1821      	adds	r1, r4, r0
 8004578:	428b      	cmp	r3, r1
 800457a:	bf01      	itttt	eq
 800457c:	6819      	ldreq	r1, [r3, #0]
 800457e:	685b      	ldreq	r3, [r3, #4]
 8004580:	1809      	addeq	r1, r1, r0
 8004582:	6021      	streq	r1, [r4, #0]
 8004584:	e7ed      	b.n	8004562 <_free_r+0x1e>
 8004586:	461a      	mov	r2, r3
 8004588:	685b      	ldr	r3, [r3, #4]
 800458a:	b10b      	cbz	r3, 8004590 <_free_r+0x4c>
 800458c:	42a3      	cmp	r3, r4
 800458e:	d9fa      	bls.n	8004586 <_free_r+0x42>
 8004590:	6811      	ldr	r1, [r2, #0]
 8004592:	1850      	adds	r0, r2, r1
 8004594:	42a0      	cmp	r0, r4
 8004596:	d10b      	bne.n	80045b0 <_free_r+0x6c>
 8004598:	6820      	ldr	r0, [r4, #0]
 800459a:	4401      	add	r1, r0
 800459c:	1850      	adds	r0, r2, r1
 800459e:	4283      	cmp	r3, r0
 80045a0:	6011      	str	r1, [r2, #0]
 80045a2:	d1e0      	bne.n	8004566 <_free_r+0x22>
 80045a4:	6818      	ldr	r0, [r3, #0]
 80045a6:	685b      	ldr	r3, [r3, #4]
 80045a8:	4408      	add	r0, r1
 80045aa:	6010      	str	r0, [r2, #0]
 80045ac:	6053      	str	r3, [r2, #4]
 80045ae:	e7da      	b.n	8004566 <_free_r+0x22>
 80045b0:	d902      	bls.n	80045b8 <_free_r+0x74>
 80045b2:	230c      	movs	r3, #12
 80045b4:	602b      	str	r3, [r5, #0]
 80045b6:	e7d6      	b.n	8004566 <_free_r+0x22>
 80045b8:	6820      	ldr	r0, [r4, #0]
 80045ba:	1821      	adds	r1, r4, r0
 80045bc:	428b      	cmp	r3, r1
 80045be:	bf01      	itttt	eq
 80045c0:	6819      	ldreq	r1, [r3, #0]
 80045c2:	685b      	ldreq	r3, [r3, #4]
 80045c4:	1809      	addeq	r1, r1, r0
 80045c6:	6021      	streq	r1, [r4, #0]
 80045c8:	6063      	str	r3, [r4, #4]
 80045ca:	6054      	str	r4, [r2, #4]
 80045cc:	e7cb      	b.n	8004566 <_free_r+0x22>
 80045ce:	bd38      	pop	{r3, r4, r5, pc}
 80045d0:	20001220 	.word	0x20001220

080045d4 <sbrk_aligned>:
 80045d4:	b570      	push	{r4, r5, r6, lr}
 80045d6:	4e0f      	ldr	r6, [pc, #60]	@ (8004614 <sbrk_aligned+0x40>)
 80045d8:	460c      	mov	r4, r1
 80045da:	6831      	ldr	r1, [r6, #0]
 80045dc:	4605      	mov	r5, r0
 80045de:	b911      	cbnz	r1, 80045e6 <sbrk_aligned+0x12>
 80045e0:	f000 fbaa 	bl	8004d38 <_sbrk_r>
 80045e4:	6030      	str	r0, [r6, #0]
 80045e6:	4621      	mov	r1, r4
 80045e8:	4628      	mov	r0, r5
 80045ea:	f000 fba5 	bl	8004d38 <_sbrk_r>
 80045ee:	1c43      	adds	r3, r0, #1
 80045f0:	d103      	bne.n	80045fa <sbrk_aligned+0x26>
 80045f2:	f04f 34ff 	mov.w	r4, #4294967295
 80045f6:	4620      	mov	r0, r4
 80045f8:	bd70      	pop	{r4, r5, r6, pc}
 80045fa:	1cc4      	adds	r4, r0, #3
 80045fc:	f024 0403 	bic.w	r4, r4, #3
 8004600:	42a0      	cmp	r0, r4
 8004602:	d0f8      	beq.n	80045f6 <sbrk_aligned+0x22>
 8004604:	1a21      	subs	r1, r4, r0
 8004606:	4628      	mov	r0, r5
 8004608:	f000 fb96 	bl	8004d38 <_sbrk_r>
 800460c:	3001      	adds	r0, #1
 800460e:	d1f2      	bne.n	80045f6 <sbrk_aligned+0x22>
 8004610:	e7ef      	b.n	80045f2 <sbrk_aligned+0x1e>
 8004612:	bf00      	nop
 8004614:	2000121c 	.word	0x2000121c

08004618 <_malloc_r>:
 8004618:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800461c:	1ccd      	adds	r5, r1, #3
 800461e:	f025 0503 	bic.w	r5, r5, #3
 8004622:	3508      	adds	r5, #8
 8004624:	2d0c      	cmp	r5, #12
 8004626:	bf38      	it	cc
 8004628:	250c      	movcc	r5, #12
 800462a:	2d00      	cmp	r5, #0
 800462c:	4606      	mov	r6, r0
 800462e:	db01      	blt.n	8004634 <_malloc_r+0x1c>
 8004630:	42a9      	cmp	r1, r5
 8004632:	d904      	bls.n	800463e <_malloc_r+0x26>
 8004634:	230c      	movs	r3, #12
 8004636:	6033      	str	r3, [r6, #0]
 8004638:	2000      	movs	r0, #0
 800463a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800463e:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8004714 <_malloc_r+0xfc>
 8004642:	f000 f869 	bl	8004718 <__malloc_lock>
 8004646:	f8d8 3000 	ldr.w	r3, [r8]
 800464a:	461c      	mov	r4, r3
 800464c:	bb44      	cbnz	r4, 80046a0 <_malloc_r+0x88>
 800464e:	4629      	mov	r1, r5
 8004650:	4630      	mov	r0, r6
 8004652:	f7ff ffbf 	bl	80045d4 <sbrk_aligned>
 8004656:	1c43      	adds	r3, r0, #1
 8004658:	4604      	mov	r4, r0
 800465a:	d158      	bne.n	800470e <_malloc_r+0xf6>
 800465c:	f8d8 4000 	ldr.w	r4, [r8]
 8004660:	4627      	mov	r7, r4
 8004662:	2f00      	cmp	r7, #0
 8004664:	d143      	bne.n	80046ee <_malloc_r+0xd6>
 8004666:	2c00      	cmp	r4, #0
 8004668:	d04b      	beq.n	8004702 <_malloc_r+0xea>
 800466a:	6823      	ldr	r3, [r4, #0]
 800466c:	4639      	mov	r1, r7
 800466e:	4630      	mov	r0, r6
 8004670:	eb04 0903 	add.w	r9, r4, r3
 8004674:	f000 fb60 	bl	8004d38 <_sbrk_r>
 8004678:	4581      	cmp	r9, r0
 800467a:	d142      	bne.n	8004702 <_malloc_r+0xea>
 800467c:	6821      	ldr	r1, [r4, #0]
 800467e:	4630      	mov	r0, r6
 8004680:	1a6d      	subs	r5, r5, r1
 8004682:	4629      	mov	r1, r5
 8004684:	f7ff ffa6 	bl	80045d4 <sbrk_aligned>
 8004688:	3001      	adds	r0, #1
 800468a:	d03a      	beq.n	8004702 <_malloc_r+0xea>
 800468c:	6823      	ldr	r3, [r4, #0]
 800468e:	442b      	add	r3, r5
 8004690:	6023      	str	r3, [r4, #0]
 8004692:	f8d8 3000 	ldr.w	r3, [r8]
 8004696:	685a      	ldr	r2, [r3, #4]
 8004698:	bb62      	cbnz	r2, 80046f4 <_malloc_r+0xdc>
 800469a:	f8c8 7000 	str.w	r7, [r8]
 800469e:	e00f      	b.n	80046c0 <_malloc_r+0xa8>
 80046a0:	6822      	ldr	r2, [r4, #0]
 80046a2:	1b52      	subs	r2, r2, r5
 80046a4:	d420      	bmi.n	80046e8 <_malloc_r+0xd0>
 80046a6:	2a0b      	cmp	r2, #11
 80046a8:	d917      	bls.n	80046da <_malloc_r+0xc2>
 80046aa:	1961      	adds	r1, r4, r5
 80046ac:	42a3      	cmp	r3, r4
 80046ae:	6025      	str	r5, [r4, #0]
 80046b0:	bf18      	it	ne
 80046b2:	6059      	strne	r1, [r3, #4]
 80046b4:	6863      	ldr	r3, [r4, #4]
 80046b6:	bf08      	it	eq
 80046b8:	f8c8 1000 	streq.w	r1, [r8]
 80046bc:	5162      	str	r2, [r4, r5]
 80046be:	604b      	str	r3, [r1, #4]
 80046c0:	4630      	mov	r0, r6
 80046c2:	f000 f82f 	bl	8004724 <__malloc_unlock>
 80046c6:	f104 000b 	add.w	r0, r4, #11
 80046ca:	1d23      	adds	r3, r4, #4
 80046cc:	f020 0007 	bic.w	r0, r0, #7
 80046d0:	1ac2      	subs	r2, r0, r3
 80046d2:	bf1c      	itt	ne
 80046d4:	1a1b      	subne	r3, r3, r0
 80046d6:	50a3      	strne	r3, [r4, r2]
 80046d8:	e7af      	b.n	800463a <_malloc_r+0x22>
 80046da:	6862      	ldr	r2, [r4, #4]
 80046dc:	42a3      	cmp	r3, r4
 80046de:	bf0c      	ite	eq
 80046e0:	f8c8 2000 	streq.w	r2, [r8]
 80046e4:	605a      	strne	r2, [r3, #4]
 80046e6:	e7eb      	b.n	80046c0 <_malloc_r+0xa8>
 80046e8:	4623      	mov	r3, r4
 80046ea:	6864      	ldr	r4, [r4, #4]
 80046ec:	e7ae      	b.n	800464c <_malloc_r+0x34>
 80046ee:	463c      	mov	r4, r7
 80046f0:	687f      	ldr	r7, [r7, #4]
 80046f2:	e7b6      	b.n	8004662 <_malloc_r+0x4a>
 80046f4:	461a      	mov	r2, r3
 80046f6:	685b      	ldr	r3, [r3, #4]
 80046f8:	42a3      	cmp	r3, r4
 80046fa:	d1fb      	bne.n	80046f4 <_malloc_r+0xdc>
 80046fc:	2300      	movs	r3, #0
 80046fe:	6053      	str	r3, [r2, #4]
 8004700:	e7de      	b.n	80046c0 <_malloc_r+0xa8>
 8004702:	230c      	movs	r3, #12
 8004704:	4630      	mov	r0, r6
 8004706:	6033      	str	r3, [r6, #0]
 8004708:	f000 f80c 	bl	8004724 <__malloc_unlock>
 800470c:	e794      	b.n	8004638 <_malloc_r+0x20>
 800470e:	6005      	str	r5, [r0, #0]
 8004710:	e7d6      	b.n	80046c0 <_malloc_r+0xa8>
 8004712:	bf00      	nop
 8004714:	20001220 	.word	0x20001220

08004718 <__malloc_lock>:
 8004718:	4801      	ldr	r0, [pc, #4]	@ (8004720 <__malloc_lock+0x8>)
 800471a:	f7ff bf03 	b.w	8004524 <__retarget_lock_acquire_recursive>
 800471e:	bf00      	nop
 8004720:	20001218 	.word	0x20001218

08004724 <__malloc_unlock>:
 8004724:	4801      	ldr	r0, [pc, #4]	@ (800472c <__malloc_unlock+0x8>)
 8004726:	f7ff befe 	b.w	8004526 <__retarget_lock_release_recursive>
 800472a:	bf00      	nop
 800472c:	20001218 	.word	0x20001218

08004730 <__ssputs_r>:
 8004730:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004734:	461f      	mov	r7, r3
 8004736:	688e      	ldr	r6, [r1, #8]
 8004738:	4682      	mov	sl, r0
 800473a:	42be      	cmp	r6, r7
 800473c:	460c      	mov	r4, r1
 800473e:	4690      	mov	r8, r2
 8004740:	680b      	ldr	r3, [r1, #0]
 8004742:	d82d      	bhi.n	80047a0 <__ssputs_r+0x70>
 8004744:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8004748:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 800474c:	d026      	beq.n	800479c <__ssputs_r+0x6c>
 800474e:	6965      	ldr	r5, [r4, #20]
 8004750:	6909      	ldr	r1, [r1, #16]
 8004752:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8004756:	eba3 0901 	sub.w	r9, r3, r1
 800475a:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 800475e:	1c7b      	adds	r3, r7, #1
 8004760:	444b      	add	r3, r9
 8004762:	106d      	asrs	r5, r5, #1
 8004764:	429d      	cmp	r5, r3
 8004766:	bf38      	it	cc
 8004768:	461d      	movcc	r5, r3
 800476a:	0553      	lsls	r3, r2, #21
 800476c:	d527      	bpl.n	80047be <__ssputs_r+0x8e>
 800476e:	4629      	mov	r1, r5
 8004770:	f7ff ff52 	bl	8004618 <_malloc_r>
 8004774:	4606      	mov	r6, r0
 8004776:	b360      	cbz	r0, 80047d2 <__ssputs_r+0xa2>
 8004778:	464a      	mov	r2, r9
 800477a:	6921      	ldr	r1, [r4, #16]
 800477c:	f7ff fed4 	bl	8004528 <memcpy>
 8004780:	89a3      	ldrh	r3, [r4, #12]
 8004782:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 8004786:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800478a:	81a3      	strh	r3, [r4, #12]
 800478c:	6126      	str	r6, [r4, #16]
 800478e:	444e      	add	r6, r9
 8004790:	6026      	str	r6, [r4, #0]
 8004792:	463e      	mov	r6, r7
 8004794:	6165      	str	r5, [r4, #20]
 8004796:	eba5 0509 	sub.w	r5, r5, r9
 800479a:	60a5      	str	r5, [r4, #8]
 800479c:	42be      	cmp	r6, r7
 800479e:	d900      	bls.n	80047a2 <__ssputs_r+0x72>
 80047a0:	463e      	mov	r6, r7
 80047a2:	4632      	mov	r2, r6
 80047a4:	4641      	mov	r1, r8
 80047a6:	6820      	ldr	r0, [r4, #0]
 80047a8:	f000 faac 	bl	8004d04 <memmove>
 80047ac:	2000      	movs	r0, #0
 80047ae:	68a3      	ldr	r3, [r4, #8]
 80047b0:	1b9b      	subs	r3, r3, r6
 80047b2:	60a3      	str	r3, [r4, #8]
 80047b4:	6823      	ldr	r3, [r4, #0]
 80047b6:	4433      	add	r3, r6
 80047b8:	6023      	str	r3, [r4, #0]
 80047ba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80047be:	462a      	mov	r2, r5
 80047c0:	f000 fad8 	bl	8004d74 <_realloc_r>
 80047c4:	4606      	mov	r6, r0
 80047c6:	2800      	cmp	r0, #0
 80047c8:	d1e0      	bne.n	800478c <__ssputs_r+0x5c>
 80047ca:	4650      	mov	r0, sl
 80047cc:	6921      	ldr	r1, [r4, #16]
 80047ce:	f7ff feb9 	bl	8004544 <_free_r>
 80047d2:	230c      	movs	r3, #12
 80047d4:	f8ca 3000 	str.w	r3, [sl]
 80047d8:	89a3      	ldrh	r3, [r4, #12]
 80047da:	f04f 30ff 	mov.w	r0, #4294967295
 80047de:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80047e2:	81a3      	strh	r3, [r4, #12]
 80047e4:	e7e9      	b.n	80047ba <__ssputs_r+0x8a>
	...

080047e8 <_svfiprintf_r>:
 80047e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80047ec:	4698      	mov	r8, r3
 80047ee:	898b      	ldrh	r3, [r1, #12]
 80047f0:	4607      	mov	r7, r0
 80047f2:	061b      	lsls	r3, r3, #24
 80047f4:	460d      	mov	r5, r1
 80047f6:	4614      	mov	r4, r2
 80047f8:	b09d      	sub	sp, #116	@ 0x74
 80047fa:	d510      	bpl.n	800481e <_svfiprintf_r+0x36>
 80047fc:	690b      	ldr	r3, [r1, #16]
 80047fe:	b973      	cbnz	r3, 800481e <_svfiprintf_r+0x36>
 8004800:	2140      	movs	r1, #64	@ 0x40
 8004802:	f7ff ff09 	bl	8004618 <_malloc_r>
 8004806:	6028      	str	r0, [r5, #0]
 8004808:	6128      	str	r0, [r5, #16]
 800480a:	b930      	cbnz	r0, 800481a <_svfiprintf_r+0x32>
 800480c:	230c      	movs	r3, #12
 800480e:	603b      	str	r3, [r7, #0]
 8004810:	f04f 30ff 	mov.w	r0, #4294967295
 8004814:	b01d      	add	sp, #116	@ 0x74
 8004816:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800481a:	2340      	movs	r3, #64	@ 0x40
 800481c:	616b      	str	r3, [r5, #20]
 800481e:	2300      	movs	r3, #0
 8004820:	9309      	str	r3, [sp, #36]	@ 0x24
 8004822:	2320      	movs	r3, #32
 8004824:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8004828:	2330      	movs	r3, #48	@ 0x30
 800482a:	f04f 0901 	mov.w	r9, #1
 800482e:	f8cd 800c 	str.w	r8, [sp, #12]
 8004832:	f8df 8198 	ldr.w	r8, [pc, #408]	@ 80049cc <_svfiprintf_r+0x1e4>
 8004836:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 800483a:	4623      	mov	r3, r4
 800483c:	469a      	mov	sl, r3
 800483e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8004842:	b10a      	cbz	r2, 8004848 <_svfiprintf_r+0x60>
 8004844:	2a25      	cmp	r2, #37	@ 0x25
 8004846:	d1f9      	bne.n	800483c <_svfiprintf_r+0x54>
 8004848:	ebba 0b04 	subs.w	fp, sl, r4
 800484c:	d00b      	beq.n	8004866 <_svfiprintf_r+0x7e>
 800484e:	465b      	mov	r3, fp
 8004850:	4622      	mov	r2, r4
 8004852:	4629      	mov	r1, r5
 8004854:	4638      	mov	r0, r7
 8004856:	f7ff ff6b 	bl	8004730 <__ssputs_r>
 800485a:	3001      	adds	r0, #1
 800485c:	f000 80a7 	beq.w	80049ae <_svfiprintf_r+0x1c6>
 8004860:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8004862:	445a      	add	r2, fp
 8004864:	9209      	str	r2, [sp, #36]	@ 0x24
 8004866:	f89a 3000 	ldrb.w	r3, [sl]
 800486a:	2b00      	cmp	r3, #0
 800486c:	f000 809f 	beq.w	80049ae <_svfiprintf_r+0x1c6>
 8004870:	2300      	movs	r3, #0
 8004872:	f04f 32ff 	mov.w	r2, #4294967295
 8004876:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800487a:	f10a 0a01 	add.w	sl, sl, #1
 800487e:	9304      	str	r3, [sp, #16]
 8004880:	9307      	str	r3, [sp, #28]
 8004882:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8004886:	931a      	str	r3, [sp, #104]	@ 0x68
 8004888:	4654      	mov	r4, sl
 800488a:	2205      	movs	r2, #5
 800488c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004890:	484e      	ldr	r0, [pc, #312]	@ (80049cc <_svfiprintf_r+0x1e4>)
 8004892:	f000 fa61 	bl	8004d58 <memchr>
 8004896:	9a04      	ldr	r2, [sp, #16]
 8004898:	b9d8      	cbnz	r0, 80048d2 <_svfiprintf_r+0xea>
 800489a:	06d0      	lsls	r0, r2, #27
 800489c:	bf44      	itt	mi
 800489e:	2320      	movmi	r3, #32
 80048a0:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80048a4:	0711      	lsls	r1, r2, #28
 80048a6:	bf44      	itt	mi
 80048a8:	232b      	movmi	r3, #43	@ 0x2b
 80048aa:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80048ae:	f89a 3000 	ldrb.w	r3, [sl]
 80048b2:	2b2a      	cmp	r3, #42	@ 0x2a
 80048b4:	d015      	beq.n	80048e2 <_svfiprintf_r+0xfa>
 80048b6:	4654      	mov	r4, sl
 80048b8:	2000      	movs	r0, #0
 80048ba:	f04f 0c0a 	mov.w	ip, #10
 80048be:	9a07      	ldr	r2, [sp, #28]
 80048c0:	4621      	mov	r1, r4
 80048c2:	f811 3b01 	ldrb.w	r3, [r1], #1
 80048c6:	3b30      	subs	r3, #48	@ 0x30
 80048c8:	2b09      	cmp	r3, #9
 80048ca:	d94b      	bls.n	8004964 <_svfiprintf_r+0x17c>
 80048cc:	b1b0      	cbz	r0, 80048fc <_svfiprintf_r+0x114>
 80048ce:	9207      	str	r2, [sp, #28]
 80048d0:	e014      	b.n	80048fc <_svfiprintf_r+0x114>
 80048d2:	eba0 0308 	sub.w	r3, r0, r8
 80048d6:	fa09 f303 	lsl.w	r3, r9, r3
 80048da:	4313      	orrs	r3, r2
 80048dc:	46a2      	mov	sl, r4
 80048de:	9304      	str	r3, [sp, #16]
 80048e0:	e7d2      	b.n	8004888 <_svfiprintf_r+0xa0>
 80048e2:	9b03      	ldr	r3, [sp, #12]
 80048e4:	1d19      	adds	r1, r3, #4
 80048e6:	681b      	ldr	r3, [r3, #0]
 80048e8:	9103      	str	r1, [sp, #12]
 80048ea:	2b00      	cmp	r3, #0
 80048ec:	bfbb      	ittet	lt
 80048ee:	425b      	neglt	r3, r3
 80048f0:	f042 0202 	orrlt.w	r2, r2, #2
 80048f4:	9307      	strge	r3, [sp, #28]
 80048f6:	9307      	strlt	r3, [sp, #28]
 80048f8:	bfb8      	it	lt
 80048fa:	9204      	strlt	r2, [sp, #16]
 80048fc:	7823      	ldrb	r3, [r4, #0]
 80048fe:	2b2e      	cmp	r3, #46	@ 0x2e
 8004900:	d10a      	bne.n	8004918 <_svfiprintf_r+0x130>
 8004902:	7863      	ldrb	r3, [r4, #1]
 8004904:	2b2a      	cmp	r3, #42	@ 0x2a
 8004906:	d132      	bne.n	800496e <_svfiprintf_r+0x186>
 8004908:	9b03      	ldr	r3, [sp, #12]
 800490a:	3402      	adds	r4, #2
 800490c:	1d1a      	adds	r2, r3, #4
 800490e:	681b      	ldr	r3, [r3, #0]
 8004910:	9203      	str	r2, [sp, #12]
 8004912:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8004916:	9305      	str	r3, [sp, #20]
 8004918:	f8df a0b4 	ldr.w	sl, [pc, #180]	@ 80049d0 <_svfiprintf_r+0x1e8>
 800491c:	2203      	movs	r2, #3
 800491e:	4650      	mov	r0, sl
 8004920:	7821      	ldrb	r1, [r4, #0]
 8004922:	f000 fa19 	bl	8004d58 <memchr>
 8004926:	b138      	cbz	r0, 8004938 <_svfiprintf_r+0x150>
 8004928:	2240      	movs	r2, #64	@ 0x40
 800492a:	9b04      	ldr	r3, [sp, #16]
 800492c:	eba0 000a 	sub.w	r0, r0, sl
 8004930:	4082      	lsls	r2, r0
 8004932:	4313      	orrs	r3, r2
 8004934:	3401      	adds	r4, #1
 8004936:	9304      	str	r3, [sp, #16]
 8004938:	f814 1b01 	ldrb.w	r1, [r4], #1
 800493c:	2206      	movs	r2, #6
 800493e:	4825      	ldr	r0, [pc, #148]	@ (80049d4 <_svfiprintf_r+0x1ec>)
 8004940:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8004944:	f000 fa08 	bl	8004d58 <memchr>
 8004948:	2800      	cmp	r0, #0
 800494a:	d036      	beq.n	80049ba <_svfiprintf_r+0x1d2>
 800494c:	4b22      	ldr	r3, [pc, #136]	@ (80049d8 <_svfiprintf_r+0x1f0>)
 800494e:	bb1b      	cbnz	r3, 8004998 <_svfiprintf_r+0x1b0>
 8004950:	9b03      	ldr	r3, [sp, #12]
 8004952:	3307      	adds	r3, #7
 8004954:	f023 0307 	bic.w	r3, r3, #7
 8004958:	3308      	adds	r3, #8
 800495a:	9303      	str	r3, [sp, #12]
 800495c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800495e:	4433      	add	r3, r6
 8004960:	9309      	str	r3, [sp, #36]	@ 0x24
 8004962:	e76a      	b.n	800483a <_svfiprintf_r+0x52>
 8004964:	460c      	mov	r4, r1
 8004966:	2001      	movs	r0, #1
 8004968:	fb0c 3202 	mla	r2, ip, r2, r3
 800496c:	e7a8      	b.n	80048c0 <_svfiprintf_r+0xd8>
 800496e:	2300      	movs	r3, #0
 8004970:	f04f 0c0a 	mov.w	ip, #10
 8004974:	4619      	mov	r1, r3
 8004976:	3401      	adds	r4, #1
 8004978:	9305      	str	r3, [sp, #20]
 800497a:	4620      	mov	r0, r4
 800497c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8004980:	3a30      	subs	r2, #48	@ 0x30
 8004982:	2a09      	cmp	r2, #9
 8004984:	d903      	bls.n	800498e <_svfiprintf_r+0x1a6>
 8004986:	2b00      	cmp	r3, #0
 8004988:	d0c6      	beq.n	8004918 <_svfiprintf_r+0x130>
 800498a:	9105      	str	r1, [sp, #20]
 800498c:	e7c4      	b.n	8004918 <_svfiprintf_r+0x130>
 800498e:	4604      	mov	r4, r0
 8004990:	2301      	movs	r3, #1
 8004992:	fb0c 2101 	mla	r1, ip, r1, r2
 8004996:	e7f0      	b.n	800497a <_svfiprintf_r+0x192>
 8004998:	ab03      	add	r3, sp, #12
 800499a:	9300      	str	r3, [sp, #0]
 800499c:	462a      	mov	r2, r5
 800499e:	4638      	mov	r0, r7
 80049a0:	4b0e      	ldr	r3, [pc, #56]	@ (80049dc <_svfiprintf_r+0x1f4>)
 80049a2:	a904      	add	r1, sp, #16
 80049a4:	f3af 8000 	nop.w
 80049a8:	1c42      	adds	r2, r0, #1
 80049aa:	4606      	mov	r6, r0
 80049ac:	d1d6      	bne.n	800495c <_svfiprintf_r+0x174>
 80049ae:	89ab      	ldrh	r3, [r5, #12]
 80049b0:	065b      	lsls	r3, r3, #25
 80049b2:	f53f af2d 	bmi.w	8004810 <_svfiprintf_r+0x28>
 80049b6:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80049b8:	e72c      	b.n	8004814 <_svfiprintf_r+0x2c>
 80049ba:	ab03      	add	r3, sp, #12
 80049bc:	9300      	str	r3, [sp, #0]
 80049be:	462a      	mov	r2, r5
 80049c0:	4638      	mov	r0, r7
 80049c2:	4b06      	ldr	r3, [pc, #24]	@ (80049dc <_svfiprintf_r+0x1f4>)
 80049c4:	a904      	add	r1, sp, #16
 80049c6:	f000 f87d 	bl	8004ac4 <_printf_i>
 80049ca:	e7ed      	b.n	80049a8 <_svfiprintf_r+0x1c0>
 80049cc:	08005076 	.word	0x08005076
 80049d0:	0800507c 	.word	0x0800507c
 80049d4:	08005080 	.word	0x08005080
 80049d8:	00000000 	.word	0x00000000
 80049dc:	08004731 	.word	0x08004731

080049e0 <_printf_common>:
 80049e0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80049e4:	4616      	mov	r6, r2
 80049e6:	4698      	mov	r8, r3
 80049e8:	688a      	ldr	r2, [r1, #8]
 80049ea:	690b      	ldr	r3, [r1, #16]
 80049ec:	4607      	mov	r7, r0
 80049ee:	4293      	cmp	r3, r2
 80049f0:	bfb8      	it	lt
 80049f2:	4613      	movlt	r3, r2
 80049f4:	6033      	str	r3, [r6, #0]
 80049f6:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 80049fa:	460c      	mov	r4, r1
 80049fc:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8004a00:	b10a      	cbz	r2, 8004a06 <_printf_common+0x26>
 8004a02:	3301      	adds	r3, #1
 8004a04:	6033      	str	r3, [r6, #0]
 8004a06:	6823      	ldr	r3, [r4, #0]
 8004a08:	0699      	lsls	r1, r3, #26
 8004a0a:	bf42      	ittt	mi
 8004a0c:	6833      	ldrmi	r3, [r6, #0]
 8004a0e:	3302      	addmi	r3, #2
 8004a10:	6033      	strmi	r3, [r6, #0]
 8004a12:	6825      	ldr	r5, [r4, #0]
 8004a14:	f015 0506 	ands.w	r5, r5, #6
 8004a18:	d106      	bne.n	8004a28 <_printf_common+0x48>
 8004a1a:	f104 0a19 	add.w	sl, r4, #25
 8004a1e:	68e3      	ldr	r3, [r4, #12]
 8004a20:	6832      	ldr	r2, [r6, #0]
 8004a22:	1a9b      	subs	r3, r3, r2
 8004a24:	42ab      	cmp	r3, r5
 8004a26:	dc2b      	bgt.n	8004a80 <_printf_common+0xa0>
 8004a28:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8004a2c:	6822      	ldr	r2, [r4, #0]
 8004a2e:	3b00      	subs	r3, #0
 8004a30:	bf18      	it	ne
 8004a32:	2301      	movne	r3, #1
 8004a34:	0692      	lsls	r2, r2, #26
 8004a36:	d430      	bmi.n	8004a9a <_printf_common+0xba>
 8004a38:	4641      	mov	r1, r8
 8004a3a:	4638      	mov	r0, r7
 8004a3c:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8004a40:	47c8      	blx	r9
 8004a42:	3001      	adds	r0, #1
 8004a44:	d023      	beq.n	8004a8e <_printf_common+0xae>
 8004a46:	6823      	ldr	r3, [r4, #0]
 8004a48:	6922      	ldr	r2, [r4, #16]
 8004a4a:	f003 0306 	and.w	r3, r3, #6
 8004a4e:	2b04      	cmp	r3, #4
 8004a50:	bf14      	ite	ne
 8004a52:	2500      	movne	r5, #0
 8004a54:	6833      	ldreq	r3, [r6, #0]
 8004a56:	f04f 0600 	mov.w	r6, #0
 8004a5a:	bf08      	it	eq
 8004a5c:	68e5      	ldreq	r5, [r4, #12]
 8004a5e:	f104 041a 	add.w	r4, r4, #26
 8004a62:	bf08      	it	eq
 8004a64:	1aed      	subeq	r5, r5, r3
 8004a66:	f854 3c12 	ldr.w	r3, [r4, #-18]
 8004a6a:	bf08      	it	eq
 8004a6c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8004a70:	4293      	cmp	r3, r2
 8004a72:	bfc4      	itt	gt
 8004a74:	1a9b      	subgt	r3, r3, r2
 8004a76:	18ed      	addgt	r5, r5, r3
 8004a78:	42b5      	cmp	r5, r6
 8004a7a:	d11a      	bne.n	8004ab2 <_printf_common+0xd2>
 8004a7c:	2000      	movs	r0, #0
 8004a7e:	e008      	b.n	8004a92 <_printf_common+0xb2>
 8004a80:	2301      	movs	r3, #1
 8004a82:	4652      	mov	r2, sl
 8004a84:	4641      	mov	r1, r8
 8004a86:	4638      	mov	r0, r7
 8004a88:	47c8      	blx	r9
 8004a8a:	3001      	adds	r0, #1
 8004a8c:	d103      	bne.n	8004a96 <_printf_common+0xb6>
 8004a8e:	f04f 30ff 	mov.w	r0, #4294967295
 8004a92:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004a96:	3501      	adds	r5, #1
 8004a98:	e7c1      	b.n	8004a1e <_printf_common+0x3e>
 8004a9a:	2030      	movs	r0, #48	@ 0x30
 8004a9c:	18e1      	adds	r1, r4, r3
 8004a9e:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8004aa2:	1c5a      	adds	r2, r3, #1
 8004aa4:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8004aa8:	4422      	add	r2, r4
 8004aaa:	3302      	adds	r3, #2
 8004aac:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8004ab0:	e7c2      	b.n	8004a38 <_printf_common+0x58>
 8004ab2:	2301      	movs	r3, #1
 8004ab4:	4622      	mov	r2, r4
 8004ab6:	4641      	mov	r1, r8
 8004ab8:	4638      	mov	r0, r7
 8004aba:	47c8      	blx	r9
 8004abc:	3001      	adds	r0, #1
 8004abe:	d0e6      	beq.n	8004a8e <_printf_common+0xae>
 8004ac0:	3601      	adds	r6, #1
 8004ac2:	e7d9      	b.n	8004a78 <_printf_common+0x98>

08004ac4 <_printf_i>:
 8004ac4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8004ac8:	7e0f      	ldrb	r7, [r1, #24]
 8004aca:	4691      	mov	r9, r2
 8004acc:	2f78      	cmp	r7, #120	@ 0x78
 8004ace:	4680      	mov	r8, r0
 8004ad0:	460c      	mov	r4, r1
 8004ad2:	469a      	mov	sl, r3
 8004ad4:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8004ad6:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8004ada:	d807      	bhi.n	8004aec <_printf_i+0x28>
 8004adc:	2f62      	cmp	r7, #98	@ 0x62
 8004ade:	d80a      	bhi.n	8004af6 <_printf_i+0x32>
 8004ae0:	2f00      	cmp	r7, #0
 8004ae2:	f000 80d3 	beq.w	8004c8c <_printf_i+0x1c8>
 8004ae6:	2f58      	cmp	r7, #88	@ 0x58
 8004ae8:	f000 80ba 	beq.w	8004c60 <_printf_i+0x19c>
 8004aec:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8004af0:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8004af4:	e03a      	b.n	8004b6c <_printf_i+0xa8>
 8004af6:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8004afa:	2b15      	cmp	r3, #21
 8004afc:	d8f6      	bhi.n	8004aec <_printf_i+0x28>
 8004afe:	a101      	add	r1, pc, #4	@ (adr r1, 8004b04 <_printf_i+0x40>)
 8004b00:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8004b04:	08004b5d 	.word	0x08004b5d
 8004b08:	08004b71 	.word	0x08004b71
 8004b0c:	08004aed 	.word	0x08004aed
 8004b10:	08004aed 	.word	0x08004aed
 8004b14:	08004aed 	.word	0x08004aed
 8004b18:	08004aed 	.word	0x08004aed
 8004b1c:	08004b71 	.word	0x08004b71
 8004b20:	08004aed 	.word	0x08004aed
 8004b24:	08004aed 	.word	0x08004aed
 8004b28:	08004aed 	.word	0x08004aed
 8004b2c:	08004aed 	.word	0x08004aed
 8004b30:	08004c73 	.word	0x08004c73
 8004b34:	08004b9b 	.word	0x08004b9b
 8004b38:	08004c2d 	.word	0x08004c2d
 8004b3c:	08004aed 	.word	0x08004aed
 8004b40:	08004aed 	.word	0x08004aed
 8004b44:	08004c95 	.word	0x08004c95
 8004b48:	08004aed 	.word	0x08004aed
 8004b4c:	08004b9b 	.word	0x08004b9b
 8004b50:	08004aed 	.word	0x08004aed
 8004b54:	08004aed 	.word	0x08004aed
 8004b58:	08004c35 	.word	0x08004c35
 8004b5c:	6833      	ldr	r3, [r6, #0]
 8004b5e:	1d1a      	adds	r2, r3, #4
 8004b60:	681b      	ldr	r3, [r3, #0]
 8004b62:	6032      	str	r2, [r6, #0]
 8004b64:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8004b68:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8004b6c:	2301      	movs	r3, #1
 8004b6e:	e09e      	b.n	8004cae <_printf_i+0x1ea>
 8004b70:	6833      	ldr	r3, [r6, #0]
 8004b72:	6820      	ldr	r0, [r4, #0]
 8004b74:	1d19      	adds	r1, r3, #4
 8004b76:	6031      	str	r1, [r6, #0]
 8004b78:	0606      	lsls	r6, r0, #24
 8004b7a:	d501      	bpl.n	8004b80 <_printf_i+0xbc>
 8004b7c:	681d      	ldr	r5, [r3, #0]
 8004b7e:	e003      	b.n	8004b88 <_printf_i+0xc4>
 8004b80:	0645      	lsls	r5, r0, #25
 8004b82:	d5fb      	bpl.n	8004b7c <_printf_i+0xb8>
 8004b84:	f9b3 5000 	ldrsh.w	r5, [r3]
 8004b88:	2d00      	cmp	r5, #0
 8004b8a:	da03      	bge.n	8004b94 <_printf_i+0xd0>
 8004b8c:	232d      	movs	r3, #45	@ 0x2d
 8004b8e:	426d      	negs	r5, r5
 8004b90:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8004b94:	230a      	movs	r3, #10
 8004b96:	4859      	ldr	r0, [pc, #356]	@ (8004cfc <_printf_i+0x238>)
 8004b98:	e011      	b.n	8004bbe <_printf_i+0xfa>
 8004b9a:	6821      	ldr	r1, [r4, #0]
 8004b9c:	6833      	ldr	r3, [r6, #0]
 8004b9e:	0608      	lsls	r0, r1, #24
 8004ba0:	f853 5b04 	ldr.w	r5, [r3], #4
 8004ba4:	d402      	bmi.n	8004bac <_printf_i+0xe8>
 8004ba6:	0649      	lsls	r1, r1, #25
 8004ba8:	bf48      	it	mi
 8004baa:	b2ad      	uxthmi	r5, r5
 8004bac:	2f6f      	cmp	r7, #111	@ 0x6f
 8004bae:	6033      	str	r3, [r6, #0]
 8004bb0:	bf14      	ite	ne
 8004bb2:	230a      	movne	r3, #10
 8004bb4:	2308      	moveq	r3, #8
 8004bb6:	4851      	ldr	r0, [pc, #324]	@ (8004cfc <_printf_i+0x238>)
 8004bb8:	2100      	movs	r1, #0
 8004bba:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8004bbe:	6866      	ldr	r6, [r4, #4]
 8004bc0:	2e00      	cmp	r6, #0
 8004bc2:	bfa8      	it	ge
 8004bc4:	6821      	ldrge	r1, [r4, #0]
 8004bc6:	60a6      	str	r6, [r4, #8]
 8004bc8:	bfa4      	itt	ge
 8004bca:	f021 0104 	bicge.w	r1, r1, #4
 8004bce:	6021      	strge	r1, [r4, #0]
 8004bd0:	b90d      	cbnz	r5, 8004bd6 <_printf_i+0x112>
 8004bd2:	2e00      	cmp	r6, #0
 8004bd4:	d04b      	beq.n	8004c6e <_printf_i+0x1aa>
 8004bd6:	4616      	mov	r6, r2
 8004bd8:	fbb5 f1f3 	udiv	r1, r5, r3
 8004bdc:	fb03 5711 	mls	r7, r3, r1, r5
 8004be0:	5dc7      	ldrb	r7, [r0, r7]
 8004be2:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8004be6:	462f      	mov	r7, r5
 8004be8:	42bb      	cmp	r3, r7
 8004bea:	460d      	mov	r5, r1
 8004bec:	d9f4      	bls.n	8004bd8 <_printf_i+0x114>
 8004bee:	2b08      	cmp	r3, #8
 8004bf0:	d10b      	bne.n	8004c0a <_printf_i+0x146>
 8004bf2:	6823      	ldr	r3, [r4, #0]
 8004bf4:	07df      	lsls	r7, r3, #31
 8004bf6:	d508      	bpl.n	8004c0a <_printf_i+0x146>
 8004bf8:	6923      	ldr	r3, [r4, #16]
 8004bfa:	6861      	ldr	r1, [r4, #4]
 8004bfc:	4299      	cmp	r1, r3
 8004bfe:	bfde      	ittt	le
 8004c00:	2330      	movle	r3, #48	@ 0x30
 8004c02:	f806 3c01 	strble.w	r3, [r6, #-1]
 8004c06:	f106 36ff 	addle.w	r6, r6, #4294967295
 8004c0a:	1b92      	subs	r2, r2, r6
 8004c0c:	6122      	str	r2, [r4, #16]
 8004c0e:	464b      	mov	r3, r9
 8004c10:	4621      	mov	r1, r4
 8004c12:	4640      	mov	r0, r8
 8004c14:	f8cd a000 	str.w	sl, [sp]
 8004c18:	aa03      	add	r2, sp, #12
 8004c1a:	f7ff fee1 	bl	80049e0 <_printf_common>
 8004c1e:	3001      	adds	r0, #1
 8004c20:	d14a      	bne.n	8004cb8 <_printf_i+0x1f4>
 8004c22:	f04f 30ff 	mov.w	r0, #4294967295
 8004c26:	b004      	add	sp, #16
 8004c28:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004c2c:	6823      	ldr	r3, [r4, #0]
 8004c2e:	f043 0320 	orr.w	r3, r3, #32
 8004c32:	6023      	str	r3, [r4, #0]
 8004c34:	2778      	movs	r7, #120	@ 0x78
 8004c36:	4832      	ldr	r0, [pc, #200]	@ (8004d00 <_printf_i+0x23c>)
 8004c38:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8004c3c:	6823      	ldr	r3, [r4, #0]
 8004c3e:	6831      	ldr	r1, [r6, #0]
 8004c40:	061f      	lsls	r7, r3, #24
 8004c42:	f851 5b04 	ldr.w	r5, [r1], #4
 8004c46:	d402      	bmi.n	8004c4e <_printf_i+0x18a>
 8004c48:	065f      	lsls	r7, r3, #25
 8004c4a:	bf48      	it	mi
 8004c4c:	b2ad      	uxthmi	r5, r5
 8004c4e:	6031      	str	r1, [r6, #0]
 8004c50:	07d9      	lsls	r1, r3, #31
 8004c52:	bf44      	itt	mi
 8004c54:	f043 0320 	orrmi.w	r3, r3, #32
 8004c58:	6023      	strmi	r3, [r4, #0]
 8004c5a:	b11d      	cbz	r5, 8004c64 <_printf_i+0x1a0>
 8004c5c:	2310      	movs	r3, #16
 8004c5e:	e7ab      	b.n	8004bb8 <_printf_i+0xf4>
 8004c60:	4826      	ldr	r0, [pc, #152]	@ (8004cfc <_printf_i+0x238>)
 8004c62:	e7e9      	b.n	8004c38 <_printf_i+0x174>
 8004c64:	6823      	ldr	r3, [r4, #0]
 8004c66:	f023 0320 	bic.w	r3, r3, #32
 8004c6a:	6023      	str	r3, [r4, #0]
 8004c6c:	e7f6      	b.n	8004c5c <_printf_i+0x198>
 8004c6e:	4616      	mov	r6, r2
 8004c70:	e7bd      	b.n	8004bee <_printf_i+0x12a>
 8004c72:	6833      	ldr	r3, [r6, #0]
 8004c74:	6825      	ldr	r5, [r4, #0]
 8004c76:	1d18      	adds	r0, r3, #4
 8004c78:	6961      	ldr	r1, [r4, #20]
 8004c7a:	6030      	str	r0, [r6, #0]
 8004c7c:	062e      	lsls	r6, r5, #24
 8004c7e:	681b      	ldr	r3, [r3, #0]
 8004c80:	d501      	bpl.n	8004c86 <_printf_i+0x1c2>
 8004c82:	6019      	str	r1, [r3, #0]
 8004c84:	e002      	b.n	8004c8c <_printf_i+0x1c8>
 8004c86:	0668      	lsls	r0, r5, #25
 8004c88:	d5fb      	bpl.n	8004c82 <_printf_i+0x1be>
 8004c8a:	8019      	strh	r1, [r3, #0]
 8004c8c:	2300      	movs	r3, #0
 8004c8e:	4616      	mov	r6, r2
 8004c90:	6123      	str	r3, [r4, #16]
 8004c92:	e7bc      	b.n	8004c0e <_printf_i+0x14a>
 8004c94:	6833      	ldr	r3, [r6, #0]
 8004c96:	2100      	movs	r1, #0
 8004c98:	1d1a      	adds	r2, r3, #4
 8004c9a:	6032      	str	r2, [r6, #0]
 8004c9c:	681e      	ldr	r6, [r3, #0]
 8004c9e:	6862      	ldr	r2, [r4, #4]
 8004ca0:	4630      	mov	r0, r6
 8004ca2:	f000 f859 	bl	8004d58 <memchr>
 8004ca6:	b108      	cbz	r0, 8004cac <_printf_i+0x1e8>
 8004ca8:	1b80      	subs	r0, r0, r6
 8004caa:	6060      	str	r0, [r4, #4]
 8004cac:	6863      	ldr	r3, [r4, #4]
 8004cae:	6123      	str	r3, [r4, #16]
 8004cb0:	2300      	movs	r3, #0
 8004cb2:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8004cb6:	e7aa      	b.n	8004c0e <_printf_i+0x14a>
 8004cb8:	4632      	mov	r2, r6
 8004cba:	4649      	mov	r1, r9
 8004cbc:	4640      	mov	r0, r8
 8004cbe:	6923      	ldr	r3, [r4, #16]
 8004cc0:	47d0      	blx	sl
 8004cc2:	3001      	adds	r0, #1
 8004cc4:	d0ad      	beq.n	8004c22 <_printf_i+0x15e>
 8004cc6:	6823      	ldr	r3, [r4, #0]
 8004cc8:	079b      	lsls	r3, r3, #30
 8004cca:	d413      	bmi.n	8004cf4 <_printf_i+0x230>
 8004ccc:	68e0      	ldr	r0, [r4, #12]
 8004cce:	9b03      	ldr	r3, [sp, #12]
 8004cd0:	4298      	cmp	r0, r3
 8004cd2:	bfb8      	it	lt
 8004cd4:	4618      	movlt	r0, r3
 8004cd6:	e7a6      	b.n	8004c26 <_printf_i+0x162>
 8004cd8:	2301      	movs	r3, #1
 8004cda:	4632      	mov	r2, r6
 8004cdc:	4649      	mov	r1, r9
 8004cde:	4640      	mov	r0, r8
 8004ce0:	47d0      	blx	sl
 8004ce2:	3001      	adds	r0, #1
 8004ce4:	d09d      	beq.n	8004c22 <_printf_i+0x15e>
 8004ce6:	3501      	adds	r5, #1
 8004ce8:	68e3      	ldr	r3, [r4, #12]
 8004cea:	9903      	ldr	r1, [sp, #12]
 8004cec:	1a5b      	subs	r3, r3, r1
 8004cee:	42ab      	cmp	r3, r5
 8004cf0:	dcf2      	bgt.n	8004cd8 <_printf_i+0x214>
 8004cf2:	e7eb      	b.n	8004ccc <_printf_i+0x208>
 8004cf4:	2500      	movs	r5, #0
 8004cf6:	f104 0619 	add.w	r6, r4, #25
 8004cfa:	e7f5      	b.n	8004ce8 <_printf_i+0x224>
 8004cfc:	08005087 	.word	0x08005087
 8004d00:	08005098 	.word	0x08005098

08004d04 <memmove>:
 8004d04:	4288      	cmp	r0, r1
 8004d06:	b510      	push	{r4, lr}
 8004d08:	eb01 0402 	add.w	r4, r1, r2
 8004d0c:	d902      	bls.n	8004d14 <memmove+0x10>
 8004d0e:	4284      	cmp	r4, r0
 8004d10:	4623      	mov	r3, r4
 8004d12:	d807      	bhi.n	8004d24 <memmove+0x20>
 8004d14:	1e43      	subs	r3, r0, #1
 8004d16:	42a1      	cmp	r1, r4
 8004d18:	d008      	beq.n	8004d2c <memmove+0x28>
 8004d1a:	f811 2b01 	ldrb.w	r2, [r1], #1
 8004d1e:	f803 2f01 	strb.w	r2, [r3, #1]!
 8004d22:	e7f8      	b.n	8004d16 <memmove+0x12>
 8004d24:	4601      	mov	r1, r0
 8004d26:	4402      	add	r2, r0
 8004d28:	428a      	cmp	r2, r1
 8004d2a:	d100      	bne.n	8004d2e <memmove+0x2a>
 8004d2c:	bd10      	pop	{r4, pc}
 8004d2e:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8004d32:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8004d36:	e7f7      	b.n	8004d28 <memmove+0x24>

08004d38 <_sbrk_r>:
 8004d38:	b538      	push	{r3, r4, r5, lr}
 8004d3a:	2300      	movs	r3, #0
 8004d3c:	4d05      	ldr	r5, [pc, #20]	@ (8004d54 <_sbrk_r+0x1c>)
 8004d3e:	4604      	mov	r4, r0
 8004d40:	4608      	mov	r0, r1
 8004d42:	602b      	str	r3, [r5, #0]
 8004d44:	f7fb ffc0 	bl	8000cc8 <_sbrk>
 8004d48:	1c43      	adds	r3, r0, #1
 8004d4a:	d102      	bne.n	8004d52 <_sbrk_r+0x1a>
 8004d4c:	682b      	ldr	r3, [r5, #0]
 8004d4e:	b103      	cbz	r3, 8004d52 <_sbrk_r+0x1a>
 8004d50:	6023      	str	r3, [r4, #0]
 8004d52:	bd38      	pop	{r3, r4, r5, pc}
 8004d54:	20001214 	.word	0x20001214

08004d58 <memchr>:
 8004d58:	4603      	mov	r3, r0
 8004d5a:	b510      	push	{r4, lr}
 8004d5c:	b2c9      	uxtb	r1, r1
 8004d5e:	4402      	add	r2, r0
 8004d60:	4293      	cmp	r3, r2
 8004d62:	4618      	mov	r0, r3
 8004d64:	d101      	bne.n	8004d6a <memchr+0x12>
 8004d66:	2000      	movs	r0, #0
 8004d68:	e003      	b.n	8004d72 <memchr+0x1a>
 8004d6a:	7804      	ldrb	r4, [r0, #0]
 8004d6c:	3301      	adds	r3, #1
 8004d6e:	428c      	cmp	r4, r1
 8004d70:	d1f6      	bne.n	8004d60 <memchr+0x8>
 8004d72:	bd10      	pop	{r4, pc}

08004d74 <_realloc_r>:
 8004d74:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004d78:	4680      	mov	r8, r0
 8004d7a:	4615      	mov	r5, r2
 8004d7c:	460c      	mov	r4, r1
 8004d7e:	b921      	cbnz	r1, 8004d8a <_realloc_r+0x16>
 8004d80:	4611      	mov	r1, r2
 8004d82:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8004d86:	f7ff bc47 	b.w	8004618 <_malloc_r>
 8004d8a:	b92a      	cbnz	r2, 8004d98 <_realloc_r+0x24>
 8004d8c:	f7ff fbda 	bl	8004544 <_free_r>
 8004d90:	2400      	movs	r4, #0
 8004d92:	4620      	mov	r0, r4
 8004d94:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004d98:	f000 f81a 	bl	8004dd0 <_malloc_usable_size_r>
 8004d9c:	4285      	cmp	r5, r0
 8004d9e:	4606      	mov	r6, r0
 8004da0:	d802      	bhi.n	8004da8 <_realloc_r+0x34>
 8004da2:	ebb5 0f50 	cmp.w	r5, r0, lsr #1
 8004da6:	d8f4      	bhi.n	8004d92 <_realloc_r+0x1e>
 8004da8:	4629      	mov	r1, r5
 8004daa:	4640      	mov	r0, r8
 8004dac:	f7ff fc34 	bl	8004618 <_malloc_r>
 8004db0:	4607      	mov	r7, r0
 8004db2:	2800      	cmp	r0, #0
 8004db4:	d0ec      	beq.n	8004d90 <_realloc_r+0x1c>
 8004db6:	42b5      	cmp	r5, r6
 8004db8:	462a      	mov	r2, r5
 8004dba:	4621      	mov	r1, r4
 8004dbc:	bf28      	it	cs
 8004dbe:	4632      	movcs	r2, r6
 8004dc0:	f7ff fbb2 	bl	8004528 <memcpy>
 8004dc4:	4621      	mov	r1, r4
 8004dc6:	4640      	mov	r0, r8
 8004dc8:	f7ff fbbc 	bl	8004544 <_free_r>
 8004dcc:	463c      	mov	r4, r7
 8004dce:	e7e0      	b.n	8004d92 <_realloc_r+0x1e>

08004dd0 <_malloc_usable_size_r>:
 8004dd0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8004dd4:	1f18      	subs	r0, r3, #4
 8004dd6:	2b00      	cmp	r3, #0
 8004dd8:	bfbc      	itt	lt
 8004dda:	580b      	ldrlt	r3, [r1, r0]
 8004ddc:	18c0      	addlt	r0, r0, r3
 8004dde:	4770      	bx	lr

08004de0 <_init>:
 8004de0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004de2:	bf00      	nop
 8004de4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004de6:	bc08      	pop	{r3}
 8004de8:	469e      	mov	lr, r3
 8004dea:	4770      	bx	lr

08004dec <_fini>:
 8004dec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004dee:	bf00      	nop
 8004df0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004df2:	bc08      	pop	{r3}
 8004df4:	469e      	mov	lr, r3
 8004df6:	4770      	bx	lr
